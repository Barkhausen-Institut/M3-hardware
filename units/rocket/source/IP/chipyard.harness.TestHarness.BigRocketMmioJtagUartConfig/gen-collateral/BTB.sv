// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module BTB(
  input         clock,
                reset,
  input  [38:0] io_req_bits_addr,
  input         io_btb_update_valid,
  input  [4:0]  io_btb_update_bits_prediction_entry,
  input  [38:0] io_btb_update_bits_pc,
  input         io_btb_update_bits_isValid,
  input  [38:0] io_btb_update_bits_br_pc,
  input  [1:0]  io_btb_update_bits_cfiType,
  input         io_bht_update_valid,
  input  [7:0]  io_bht_update_bits_prediction_history,
  input  [38:0] io_bht_update_bits_pc,
  input         io_bht_update_bits_branch,
                io_bht_update_bits_taken,
                io_bht_update_bits_mispredict,
                io_bht_advance_valid,
                io_bht_advance_bits_bht_value,
                io_ras_update_valid,
  input  [1:0]  io_ras_update_bits_cfiType,
  input  [38:0] io_ras_update_bits_returnAddr,
  input         io_flush,
  output        io_resp_valid,
                io_resp_bits_taken,
                io_resp_bits_bridx,
  output [38:0] io_resp_bits_target,
  output [4:0]  io_resp_bits_entry,
  output [7:0]  io_resp_bits_bht_history,
  output        io_resp_bits_bht_value,
                io_ras_head_valid,
  output [38:0] io_ras_head_bits
);

  wire             _table_ext_R0_data;	// @[BTB.scala:117:26]
  reg  [12:0]      idxs_0;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_1;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_2;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_3;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_4;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_5;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_6;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_7;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_8;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_9;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_10;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_11;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_12;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_13;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_14;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_15;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_16;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_17;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_18;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_19;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_20;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_21;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_22;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_23;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_24;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_25;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_26;	// @[BTB.scala:200:17]
  reg  [12:0]      idxs_27;	// @[BTB.scala:200:17]
  reg  [2:0]       idxPages_0;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_1;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_2;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_3;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_4;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_5;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_6;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_7;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_8;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_9;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_10;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_11;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_12;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_13;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_14;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_15;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_16;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_17;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_18;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_19;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_20;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_21;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_22;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_23;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_24;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_25;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_26;	// @[BTB.scala:201:21]
  reg  [2:0]       idxPages_27;	// @[BTB.scala:201:21]
  reg  [12:0]      tgts_0;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_1;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_2;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_3;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_4;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_5;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_6;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_7;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_8;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_9;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_10;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_11;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_12;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_13;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_14;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_15;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_16;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_17;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_18;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_19;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_20;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_21;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_22;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_23;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_24;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_25;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_26;	// @[BTB.scala:202:17]
  reg  [12:0]      tgts_27;	// @[BTB.scala:202:17]
  reg  [2:0]       tgtPages_0;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_1;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_2;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_3;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_4;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_5;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_6;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_7;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_8;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_9;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_10;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_11;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_12;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_13;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_14;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_15;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_16;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_17;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_18;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_19;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_20;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_21;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_22;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_23;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_24;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_25;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_26;	// @[BTB.scala:203:21]
  reg  [2:0]       tgtPages_27;	// @[BTB.scala:203:21]
  reg  [24:0]      pages_0;	// @[BTB.scala:204:18]
  reg  [24:0]      pages_1;	// @[BTB.scala:204:18]
  reg  [24:0]      pages_2;	// @[BTB.scala:204:18]
  reg  [24:0]      pages_3;	// @[BTB.scala:204:18]
  reg  [24:0]      pages_4;	// @[BTB.scala:204:18]
  reg  [24:0]      pages_5;	// @[BTB.scala:204:18]
  reg  [5:0]       pageValid;	// @[BTB.scala:205:26]
  wire [24:0]      pagesMasked_4 = pageValid[4] ? pages_4 : 25'h0;	// @[BTB.scala:204:18, :205:26, :206:{32,75}]
  wire [24:0]      pagesMasked_5 = pageValid[5] ? pages_5 : 25'h0;	// @[BTB.scala:204:18, :205:26, :206:{32,75}]
  reg  [27:0]      isValid;	// @[BTB.scala:208:24]
  reg  [1:0]       cfiType_0;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_1;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_2;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_3;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_4;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_5;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_6;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_7;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_8;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_9;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_10;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_11;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_12;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_13;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_14;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_15;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_16;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_17;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_18;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_19;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_20;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_21;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_22;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_23;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_24;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_25;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_26;	// @[BTB.scala:209:20]
  reg  [1:0]       cfiType_27;	// @[BTB.scala:209:20]
  reg              brIdx_0;	// @[BTB.scala:210:18]
  reg              brIdx_1;	// @[BTB.scala:210:18]
  reg              brIdx_2;	// @[BTB.scala:210:18]
  reg              brIdx_3;	// @[BTB.scala:210:18]
  reg              brIdx_4;	// @[BTB.scala:210:18]
  reg              brIdx_5;	// @[BTB.scala:210:18]
  reg              brIdx_6;	// @[BTB.scala:210:18]
  reg              brIdx_7;	// @[BTB.scala:210:18]
  reg              brIdx_8;	// @[BTB.scala:210:18]
  reg              brIdx_9;	// @[BTB.scala:210:18]
  reg              brIdx_10;	// @[BTB.scala:210:18]
  reg              brIdx_11;	// @[BTB.scala:210:18]
  reg              brIdx_12;	// @[BTB.scala:210:18]
  reg              brIdx_13;	// @[BTB.scala:210:18]
  reg              brIdx_14;	// @[BTB.scala:210:18]
  reg              brIdx_15;	// @[BTB.scala:210:18]
  reg              brIdx_16;	// @[BTB.scala:210:18]
  reg              brIdx_17;	// @[BTB.scala:210:18]
  reg              brIdx_18;	// @[BTB.scala:210:18]
  reg              brIdx_19;	// @[BTB.scala:210:18]
  reg              brIdx_20;	// @[BTB.scala:210:18]
  reg              brIdx_21;	// @[BTB.scala:210:18]
  reg              brIdx_22;	// @[BTB.scala:210:18]
  reg              brIdx_23;	// @[BTB.scala:210:18]
  reg              brIdx_24;	// @[BTB.scala:210:18]
  reg              brIdx_25;	// @[BTB.scala:210:18]
  reg              brIdx_26;	// @[BTB.scala:210:18]
  reg              brIdx_27;	// @[BTB.scala:210:18]
  reg              r_btb_updatePipe_valid;	// @[Valid.scala:130:22]
  reg  [4:0]       r_btb_updatePipe_bits_prediction_entry;	// @[Reg.scala:19:16]
  reg  [38:0]      r_btb_updatePipe_bits_pc;	// @[Reg.scala:19:16]
  reg              r_btb_updatePipe_bits_isValid;	// @[Reg.scala:19:16]
  reg  [38:0]      r_btb_updatePipe_bits_br_pc;	// @[Reg.scala:19:16]
  reg  [1:0]       r_btb_updatePipe_bits_cfiType;	// @[Reg.scala:19:16]
  wire [5:0]       pageHit = pageValid & {pages_5 == io_req_bits_addr[38:14], pages_4 == io_req_bits_addr[38:14], pages_3 == io_req_bits_addr[38:14], pages_2 == io_req_bits_addr[38:14], pages_1 == io_req_bits_addr[38:14], pages_0 == io_req_bits_addr[38:14]};	// @[BTB.scala:204:18, :205:26, :212:39, :215:{15,29}, Cat.scala:33:92]
  wire [27:0]      idxHit = {idxs_27 == io_req_bits_addr[13:1], idxs_26 == io_req_bits_addr[13:1], idxs_25 == io_req_bits_addr[13:1], idxs_24 == io_req_bits_addr[13:1], idxs_23 == io_req_bits_addr[13:1], idxs_22 == io_req_bits_addr[13:1], idxs_21 == io_req_bits_addr[13:1], idxs_20 == io_req_bits_addr[13:1], idxs_19 == io_req_bits_addr[13:1], idxs_18 == io_req_bits_addr[13:1], idxs_17 == io_req_bits_addr[13:1], idxs_16 == io_req_bits_addr[13:1], idxs_15 == io_req_bits_addr[13:1], idxs_14 == io_req_bits_addr[13:1], idxs_13 == io_req_bits_addr[13:1], idxs_12 == io_req_bits_addr[13:1], idxs_11 == io_req_bits_addr[13:1], idxs_10 == io_req_bits_addr[13:1], idxs_9 == io_req_bits_addr[13:1], idxs_8 == io_req_bits_addr[13:1], idxs_7 == io_req_bits_addr[13:1], idxs_6 == io_req_bits_addr[13:1], idxs_5 == io_req_bits_addr[13:1], idxs_4 == io_req_bits_addr[13:1], idxs_3 == io_req_bits_addr[13:1], idxs_2 == io_req_bits_addr[13:1], idxs_1 == io_req_bits_addr[13:1], idxs_0 == io_req_bits_addr[13:1]} & isValid;	// @[BTB.scala:200:17, :208:24, :218:19, :219:{16,32}, Cat.scala:33:92]
  reg  [2:0]       nextPageRepl;	// @[BTB.scala:238:29]
  reg  [26:0]      state_reg;	// @[Replacement.scala:168:70]
  reg              r_respPipe_valid;	// @[Valid.scala:130:22]
  reg              r_respPipe_bits_taken;	// @[Reg.scala:19:16]
  reg  [4:0]       r_respPipe_bits_entry;	// @[Reg.scala:19:16]
  wire [6:0]       _io_resp_valid_T_84 = {pageHit, 1'h0} >> ((idxHit[0] ? idxPages_0 : 3'h0) | (idxHit[1] ? idxPages_1 : 3'h0) | (idxHit[2] ? idxPages_2 : 3'h0) | (idxHit[3] ? idxPages_3 : 3'h0) | (idxHit[4] ? idxPages_4 : 3'h0) | (idxHit[5] ? idxPages_5 : 3'h0) | (idxHit[6] ? idxPages_6 : 3'h0) | (idxHit[7] ? idxPages_7 : 3'h0) | (idxHit[8] ? idxPages_8 : 3'h0) | (idxHit[9] ? idxPages_9 : 3'h0) | (idxHit[10] ? idxPages_10 : 3'h0) | (idxHit[11] ? idxPages_11 : 3'h0) | (idxHit[12] ? idxPages_12 : 3'h0) | (idxHit[13] ? idxPages_13 : 3'h0) | (idxHit[14] ? idxPages_14 : 3'h0) | (idxHit[15] ? idxPages_15 : 3'h0) | (idxHit[16] ? idxPages_16 : 3'h0) | (idxHit[17] ? idxPages_17 : 3'h0) | (idxHit[18] ? idxPages_18 : 3'h0) | (idxHit[19] ? idxPages_19 : 3'h0) | (idxHit[20] ? idxPages_20 : 3'h0) | (idxHit[21] ? idxPages_21 : 3'h0) | (idxHit[22] ? idxPages_22 : 3'h0) | (idxHit[23] ? idxPages_23 : 3'h0) | (idxHit[24] ? idxPages_24 : 3'h0) | (idxHit[25] ? idxPages_25 : 3'h0) | (idxHit[26] ? idxPages_26 : 3'h0) | (idxHit[27] ? idxPages_27 : 3'h0));	// @[BTB.scala:201:21, :215:15, :219:32, :238:29, :288:{29,34}, Mux.scala:27:73, :29:36]
  wire [7:0][24:0] _GEN = {{pagesMasked_5}, {pagesMasked_4}, {pagesMasked_5}, {pagesMasked_4}, {pageValid[3] ? pages_3 : 25'h0}, {pageValid[2] ? pages_2 : 25'h0}, {pageValid[1] ? pages_1 : 25'h0}, {pageValid[0] ? pages_0 : 25'h0}};	// @[BTB.scala:204:18, :205:26, :206:{32,75}, package.scala:33:{76,86}]
  wire [14:0]      _GEN_0 = {4'h0, idxHit[27:17]} | idxHit[15:1];	// @[BTB.scala:219:32, OneHot.scala:31:18, :32:{14,28}]
  wire [6:0]       _GEN_1 = _GEN_0[14:8] | _GEN_0[6:0];	// @[OneHot.scala:30:18, :31:18, :32:28]
  wire [2:0]       _GEN_2 = _GEN_1[6:4] | _GEN_1[2:0];	// @[OneHot.scala:30:18, :31:18, :32:28]
  wire [4:0]       _io_resp_bits_entry_output = {|(idxHit[27:16]), |(_GEN_0[14:7]), |(_GEN_1[6:3]), |(_GEN_2[2:1]), _GEN_2[2] | _GEN_2[0]};	// @[BTB.scala:219:32, Cat.scala:33:92, OneHot.scala:30:18, :31:18, :32:{14,28}]
  reg  [7:0]       history;	// @[BTB.scala:118:24]
  reg  [9:0]       reset_waddr;	// @[BTB.scala:120:36]
  wire [7:0]       _GEN_3 = history * 8'hDD;	// @[BTB.scala:83:12, :118:24]
  wire             res_value = reset_waddr[9] & _table_ext_R0_data;	// @[BTB.scala:93:21, :117:26, :120:36, :121:39]
  wire [7:0]       _GEN_4 = io_bht_update_bits_prediction_history * 8'hDD;	// @[BTB.scala:83:12]
  wire             _GEN_5 = io_bht_update_valid & io_bht_update_bits_branch & reset_waddr[9];	// @[BTB.scala:99:23, :100:13, :120:36, :121:39, :123:31, :311:32, :312:40]
  wire             _T_135 = ~res_value & (|(idxHit & {cfiType_27 == 2'h0, cfiType_26 == 2'h0, cfiType_25 == 2'h0, cfiType_24 == 2'h0, cfiType_23 == 2'h0, cfiType_22 == 2'h0, cfiType_21 == 2'h0, cfiType_20 == 2'h0, cfiType_19 == 2'h0, cfiType_18 == 2'h0, cfiType_17 == 2'h0, cfiType_16 == 2'h0, cfiType_15 == 2'h0, cfiType_14 == 2'h0, cfiType_13 == 2'h0, cfiType_12 == 2'h0, cfiType_11 == 2'h0, cfiType_10 == 2'h0, cfiType_9 == 2'h0, cfiType_8 == 2'h0, cfiType_7 == 2'h0, cfiType_6 == 2'h0, cfiType_5 == 2'h0, cfiType_4 == 2'h0, cfiType_3 == 2'h0, cfiType_2 == 2'h0, cfiType_1 == 2'h0, cfiType_0 == 2'h0}));	// @[BTB.scala:93:21, :209:20, :219:32, :239:65, :306:{28,44,72}, :321:{11,22}, Cat.scala:33:92]
  reg  [2:0]       count;	// @[BTB.scala:57:30]
  reg  [2:0]       pos;	// @[BTB.scala:58:28]
  reg  [38:0]      stack_0;	// @[BTB.scala:59:26]
  reg  [38:0]      stack_1;	// @[BTB.scala:59:26]
  reg  [38:0]      stack_2;	// @[BTB.scala:59:26]
  reg  [38:0]      stack_3;	// @[BTB.scala:59:26]
  reg  [38:0]      stack_4;	// @[BTB.scala:59:26]
  reg  [38:0]      stack_5;	// @[BTB.scala:59:26]
  wire [7:0][38:0] _GEN_6 = {{stack_0}, {stack_0}, {stack_5}, {stack_4}, {stack_3}, {stack_2}, {stack_1}, {stack_0}};	// @[BTB.scala:59:26, :329:22]
  wire [38:0]      _GEN_7 = _GEN_6[pos];	// @[BTB.scala:58:28, :329:22]
  wire             rightOne_1 = idxHit[1] | idxHit[2];	// @[BTB.scala:219:32, Misc.scala:180:37, :181:39, :182:16]
  wire             leftOne_2 = idxHit[0] | rightOne_1;	// @[BTB.scala:219:32, Misc.scala:180:37, :182:16]
  wire             leftOne_4 = idxHit[3] | idxHit[4];	// @[BTB.scala:219:32, Misc.scala:180:37, :181:39, :182:16]
  wire             rightOne_4 = idxHit[5] | idxHit[6];	// @[BTB.scala:219:32, Misc.scala:180:37, :181:39, :182:16]
  wire             rightOne_5 = leftOne_4 | rightOne_4;	// @[Misc.scala:182:16]
  wire             leftOne_6 = leftOne_2 | rightOne_5;	// @[Misc.scala:182:16]
  wire             rightOne_7 = idxHit[8] | idxHit[9];	// @[BTB.scala:219:32, Misc.scala:180:37, :181:39, :182:16]
  wire             leftOne_9 = idxHit[7] | rightOne_7;	// @[BTB.scala:219:32, Misc.scala:180:37, :181:39, :182:16]
  wire             leftOne_11 = idxHit[10] | idxHit[11];	// @[BTB.scala:219:32, Misc.scala:180:37, :181:39, :182:16]
  wire             rightOne_10 = idxHit[12] | idxHit[13];	// @[BTB.scala:219:32, Misc.scala:180:37, :181:39, :182:16]
  wire             rightOne_11 = leftOne_11 | rightOne_10;	// @[Misc.scala:182:16]
  wire             rightOne_12 = leftOne_9 | rightOne_11;	// @[Misc.scala:182:16]
  wire             rightOne_14 = idxHit[15] | idxHit[16];	// @[BTB.scala:219:32, Misc.scala:180:37, :181:39, :182:16]
  wire             leftOne_16 = idxHit[14] | rightOne_14;	// @[BTB.scala:219:32, Misc.scala:180:37, :181:39, :182:16]
  wire             leftOne_18 = idxHit[17] | idxHit[18];	// @[BTB.scala:219:32, Misc.scala:180:37, :181:39, :182:16]
  wire             rightOne_17 = idxHit[19] | idxHit[20];	// @[BTB.scala:219:32, Misc.scala:180:37, :181:39, :182:16]
  wire             rightOne_18 = leftOne_18 | rightOne_17;	// @[Misc.scala:182:16]
  wire             leftOne_20 = leftOne_16 | rightOne_18;	// @[Misc.scala:182:16]
  wire             rightOne_20 = idxHit[22] | idxHit[23];	// @[BTB.scala:219:32, Misc.scala:180:37, :181:39, :182:16]
  wire             leftOne_23 = idxHit[21] | rightOne_20;	// @[BTB.scala:219:32, Misc.scala:180:37, :181:39, :182:16]
  wire             leftOne_25 = idxHit[24] | idxHit[25];	// @[BTB.scala:219:32, Misc.scala:180:37, :181:39, :182:16]
  wire             rightOne_23 = idxHit[26] | idxHit[27];	// @[BTB.scala:219:32, Misc.scala:180:37, :181:39, :182:16]
  wire             rightOne_24 = leftOne_25 | rightOne_23;	// @[Misc.scala:182:16]
  wire             rightOne_25 = leftOne_23 | rightOne_24;	// @[Misc.scala:182:16]
  wire [5:0]       updatePageHit = pageValid & {pages_5 == r_btb_updatePipe_bits_pc[38:14], pages_4 == r_btb_updatePipe_bits_pc[38:14], pages_3 == r_btb_updatePipe_bits_pc[38:14], pages_2 == r_btb_updatePipe_bits_pc[38:14], pages_1 == r_btb_updatePipe_bits_pc[38:14], pages_0 == r_btb_updatePipe_bits_pc[38:14]};	// @[BTB.scala:204:18, :205:26, :212:39, :215:{15,29}, Cat.scala:33:92, Reg.scala:19:16]
  wire [7:0]       idxPageRepl = {2'h0, pageHit[4:0], pageHit[5]} | ((|pageHit) ? 8'h0 : 8'h1 << nextPageRepl);	// @[BTB.scala:118:24, :215:15, :236:28, :238:29, :239:{32,53,65,70}, OneHot.scala:57:35]
  wire [7:0]       idxPageUpdateOH = (|updatePageHit) ? {2'h0, updatePageHit} : idxPageRepl;	// @[BTB.scala:215:15, :235:40, :239:65, :240:28]
  wire [2:0]       _GEN_8 = idxPageUpdateOH[7:5] | idxPageUpdateOH[3:1];	// @[BTB.scala:240:28, OneHot.scala:30:18, :31:18, :32:28]
  wire             _idxPageUpdate_T_4 = _GEN_8[2] | _GEN_8[0];	// @[OneHot.scala:30:18, :31:18, :32:28]
  wire [5:0]       _GEN_9 = (|updatePageHit) ? 6'h0 : idxPageRepl[5:0];	// @[BTB.scala:205:26, :215:15, :235:40, :239:65, :242:26]
  wire             samePage = r_btb_updatePipe_bits_pc[38:14] == io_req_bits_addr[38:14];	// @[BTB.scala:212:39, :244:45, Reg.scala:19:16]
  wire             doTgtPageRepl = ~samePage & ~(|pageHit);	// @[BTB.scala:215:15, :236:28, :244:45, :245:{23,33,36}]
  wire [7:0]       tgtPageRepl = samePage ? idxPageUpdateOH : {2'h0, idxPageUpdateOH[4:0], idxPageUpdateOH[5]};	// @[BTB.scala:239:65, :240:28, :244:45, :246:{24,71,100}]
  wire [6:0]       _GEN_10 = {2'h0, pageHit[5:1]} | ((|pageHit) ? 7'h0 : tgtPageRepl[7:1]);	// @[BTB.scala:215:15, :236:28, :239:65, :246:24, :247:{40,45}, OneHot.scala:57:35]
  wire [2:0]       _GEN_11 = _GEN_10[6:4] | _GEN_10[2:0];	// @[BTB.scala:247:40, OneHot.scala:30:18, :31:18, :32:28]
  wire [2:0]       tgtPageUpdate = {|(_GEN_10[6:3]), |(_GEN_11[2:1]), _GEN_11[2] | _GEN_11[0]};	// @[BTB.scala:247:40, Cat.scala:33:92, OneHot.scala:30:18, :31:18, :32:{14,28}]
  wire [5:0]       _GEN_12 = doTgtPageRepl ? tgtPageRepl[5:0] : 6'h0;	// @[BTB.scala:205:26, :245:33, :246:24, :248:26]
  wire [4:0]       waddr = r_btb_updatePipe_bits_prediction_entry[4:2] != 3'h7 ? r_btb_updatePipe_bits_prediction_entry : {state_reg[26], state_reg[26] ? {state_reg[25], state_reg[25] ? {1'h0, state_reg[24], state_reg[24] ? state_reg[23] : state_reg[22]} : {state_reg[21], state_reg[21] ? {state_reg[20], state_reg[20] ? state_reg[19] : state_reg[18]} : {state_reg[17], state_reg[17] ? state_reg[16] : state_reg[15]}}} : {state_reg[14], state_reg[14] ? {state_reg[13], state_reg[13] ? {state_reg[12], state_reg[12] ? state_reg[11] : state_reg[10]} : {state_reg[9], state_reg[9] ? state_reg[8] : state_reg[7]}} : {state_reg[6], state_reg[6] ? {state_reg[5], state_reg[5] ? state_reg[4] : state_reg[3]} : {state_reg[2], state_reg[2] ? state_reg[1] : state_reg[0]}}}};	// @[BTB.scala:233:48, :257:18, Cat.scala:33:92, Reg.scala:19:16, Replacement.scala:168:70, :243:38, :245:38, :250:16, package.scala:33:86, :155:13]
  wire [2:0]       _GEN_13 = {|(idxPageUpdateOH[7:4]), |(_GEN_8[2:1]), _idxPageUpdate_T_4} + 3'h1;	// @[BTB.scala:46:20, :240:28, :267:38, OneHot.scala:30:18, :32:{14,28}]
  wire [4:0]       _GEN_14 = _idxPageUpdate_T_4 ? _GEN_12[4:0] : _GEN_9[4:0];	// @[BTB.scala:242:26, :248:26, :281:24, OneHot.scala:32:28]
  wire [4:0]       _GEN_15 = _idxPageUpdate_T_4 ? _GEN_9[5:1] : _GEN_12[5:1];	// @[BTB.scala:242:26, :248:26, :283:24, OneHot.scala:32:28]
  wire             _T_139 = io_ras_update_bits_cfiType == 2'h2;	// @[BTB.scala:252:40, :334:40]
  wire             _nextPos_T_1 = pos < 3'h5;	// @[BTB.scala:45:47, :58:28, package.scala:33:86]
  wire [2:0]       _nextPos_T_3 = pos + 3'h1;	// @[BTB.scala:45:64, :46:20, :58:28]
  wire [2:0]       nextPos = _nextPos_T_1 ? _nextPos_T_3 : 3'h0;	// @[BTB.scala:45:{22,47,64}, :238:29]
  wire [31:0]      mask = 32'h1 << waddr;	// @[BTB.scala:257:18, OneHot.scala:57:35]
  wire [2:0]       next = nextPageRepl + {1'h0, ~(|updatePageHit) & doTgtPageRepl ? 2'h2 : 2'h1};	// @[BTB.scala:215:15, :235:40, :237:23, :238:29, :245:33, :251:30, :252:{29,40}]
  wire [4:0]       state_reg_touch_way_sized = r_btb_updatePipe_valid ? waddr : r_respPipe_bits_entry;	// @[BTB.scala:257:18, :260:20, Reg.scala:19:16, Valid.scala:130:22]
  always @(posedge clock) begin
    if (r_btb_updatePipe_valid & waddr == 5'h0) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, OneHot.scala:57:35, Valid.scala:130:22]
      idxs_0 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_0 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_0 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_0 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_0 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_0 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h1) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_1 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_1 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_1 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_1 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_1 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_1 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h2) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_2 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_2 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_2 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_2 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_2 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_2 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h3) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_3 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_3 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_3 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_3 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_3 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_3 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h4) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_4 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_4 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_4 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_4 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_4 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_4 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h5) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_5 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_5 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_5 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_5 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_5 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_5 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h6) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_6 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_6 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_6 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_6 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_6 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_6 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h7) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_7 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_7 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_7 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_7 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_7 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_7 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h8) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_8 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_8 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_8 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_8 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_8 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_8 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h9) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_9 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_9 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_9 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_9 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_9 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_9 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'hA) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_10 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_10 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_10 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_10 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_10 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_10 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'hB) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_11 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_11 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_11 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_11 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_11 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_11 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'hC) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_12 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_12 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_12 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_12 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_12 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_12 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'hD) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_13 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_13 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_13 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_13 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_13 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_13 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'hE) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_14 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_14 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_14 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_14 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_14 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_14 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'hF) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_15 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_15 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_15 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_15 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_15 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_15 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h10) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_16 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_16 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_16 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_16 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_16 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_16 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h11) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_17 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_17 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_17 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_17 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_17 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_17 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h12) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_18 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_18 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_18 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_18 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_18 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_18 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h13) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_19 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_19 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_19 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_19 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_19 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_19 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h14) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_20 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_20 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_20 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_20 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_20 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_20 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h15) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_21 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_21 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_21 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_21 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_21 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_21 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h16) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_22 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_22 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_22 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_22 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_22 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_22 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h17) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_23 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_23 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_23 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_23 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_23 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_23 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h18) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_24 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_24 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_24 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_24 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_24 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_24 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h19) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_25 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_25 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_25 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_25 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_25 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_25 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h1A) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_26 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_26 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_26 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_26 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_26 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_26 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & waddr == 5'h1B) begin	// @[BTB.scala:200:17, :257:18, :263:29, :265:17, Valid.scala:130:22]
      idxs_27 <= r_btb_updatePipe_bits_pc[13:1];	// @[BTB.scala:200:17, :265:40, Reg.scala:19:16]
      idxPages_27 <= _GEN_13;	// @[BTB.scala:201:21, :267:38]
      tgts_27 <= io_req_bits_addr[13:1];	// @[BTB.scala:202:17, :218:19]
      tgtPages_27 <= tgtPageUpdate;	// @[BTB.scala:203:21, Cat.scala:33:92]
      cfiType_27 <= r_btb_updatePipe_bits_cfiType;	// @[BTB.scala:209:20, Reg.scala:19:16]
      brIdx_27 <= r_btb_updatePipe_bits_br_pc[1];	// @[BTB.scala:210:18, :272:{20,47}, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & _GEN_14[0]) begin	// @[BTB.scala:204:18, :263:29, :279:{17,22,33}, :281:24, Valid.scala:130:22]
      if (_idxPageUpdate_T_4)	// @[OneHot.scala:32:28]
        pages_0 <= io_req_bits_addr[38:14];	// @[BTB.scala:204:18, :212:39]
      else	// @[OneHot.scala:32:28]
        pages_0 <= r_btb_updatePipe_bits_pc[38:14];	// @[BTB.scala:204:18, :212:39, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & _GEN_15[0]) begin	// @[BTB.scala:204:18, :263:29, :279:{17,22,33}, :283:24, Valid.scala:130:22]
      if (_idxPageUpdate_T_4)	// @[OneHot.scala:32:28]
        pages_1 <= r_btb_updatePipe_bits_pc[38:14];	// @[BTB.scala:204:18, :212:39, Reg.scala:19:16]
      else	// @[OneHot.scala:32:28]
        pages_1 <= io_req_bits_addr[38:14];	// @[BTB.scala:204:18, :212:39]
    end
    if (r_btb_updatePipe_valid & _GEN_14[2]) begin	// @[BTB.scala:204:18, :263:29, :279:{17,22,33}, :281:24, Valid.scala:130:22]
      if (_idxPageUpdate_T_4)	// @[OneHot.scala:32:28]
        pages_2 <= io_req_bits_addr[38:14];	// @[BTB.scala:204:18, :212:39]
      else	// @[OneHot.scala:32:28]
        pages_2 <= r_btb_updatePipe_bits_pc[38:14];	// @[BTB.scala:204:18, :212:39, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & _GEN_15[2]) begin	// @[BTB.scala:204:18, :263:29, :279:{17,22,33}, :283:24, Valid.scala:130:22]
      if (_idxPageUpdate_T_4)	// @[OneHot.scala:32:28]
        pages_3 <= r_btb_updatePipe_bits_pc[38:14];	// @[BTB.scala:204:18, :212:39, Reg.scala:19:16]
      else	// @[OneHot.scala:32:28]
        pages_3 <= io_req_bits_addr[38:14];	// @[BTB.scala:204:18, :212:39]
    end
    if (r_btb_updatePipe_valid & _GEN_14[4]) begin	// @[BTB.scala:204:18, :263:29, :279:{17,22,33}, :281:24, Valid.scala:130:22]
      if (_idxPageUpdate_T_4)	// @[OneHot.scala:32:28]
        pages_4 <= io_req_bits_addr[38:14];	// @[BTB.scala:204:18, :212:39]
      else	// @[OneHot.scala:32:28]
        pages_4 <= r_btb_updatePipe_bits_pc[38:14];	// @[BTB.scala:204:18, :212:39, Reg.scala:19:16]
    end
    if (r_btb_updatePipe_valid & _GEN_15[4]) begin	// @[BTB.scala:204:18, :263:29, :279:{17,22,33}, :283:24, Valid.scala:130:22]
      if (_idxPageUpdate_T_4)	// @[OneHot.scala:32:28]
        pages_5 <= r_btb_updatePipe_bits_pc[38:14];	// @[BTB.scala:204:18, :212:39, Reg.scala:19:16]
      else	// @[OneHot.scala:32:28]
        pages_5 <= io_req_bits_addr[38:14];	// @[BTB.scala:204:18, :212:39]
    end
    if (io_btb_update_valid) begin
      r_btb_updatePipe_bits_prediction_entry <= io_btb_update_bits_prediction_entry;	// @[Reg.scala:19:16]
      r_btb_updatePipe_bits_pc <= io_btb_update_bits_pc;	// @[Reg.scala:19:16]
      r_btb_updatePipe_bits_isValid <= io_btb_update_bits_isValid;	// @[Reg.scala:19:16]
      r_btb_updatePipe_bits_br_pc <= io_btb_update_bits_br_pc;	// @[Reg.scala:19:16]
      r_btb_updatePipe_bits_cfiType <= io_btb_update_bits_cfiType;	// @[Reg.scala:19:16]
    end
    if (_io_resp_valid_T_84[0]) begin	// @[BTB.scala:288:34]
      r_respPipe_bits_taken <= ~_T_135;	// @[BTB.scala:289:22, :321:{22,35,56}, Reg.scala:19:16]
      r_respPipe_bits_entry <= _io_resp_bits_entry_output;	// @[Cat.scala:33:92, Reg.scala:19:16]
    end
    if (io_ras_update_valid & _T_139 & nextPos == 3'h0)	// @[BTB.scala:45:22, :46:20, :59:26, :238:29, :333:32, :334:{40,58}]
      stack_0 <= io_ras_update_bits_returnAddr;	// @[BTB.scala:59:26]
    if (io_ras_update_valid & _T_139 & nextPos == 3'h1)	// @[BTB.scala:45:22, :46:20, :59:26, :333:32, :334:{40,58}]
      stack_1 <= io_ras_update_bits_returnAddr;	// @[BTB.scala:59:26]
    if (io_ras_update_valid & _T_139 & nextPos == 3'h2)	// @[BTB.scala:45:22, :46:20, :59:26, :333:32, :334:{40,58}]
      stack_2 <= io_ras_update_bits_returnAddr;	// @[BTB.scala:59:26]
    if (io_ras_update_valid & _T_139 & nextPos == 3'h3)	// @[BTB.scala:45:22, :46:20, :59:26, :333:32, :334:{40,58}]
      stack_3 <= io_ras_update_bits_returnAddr;	// @[BTB.scala:59:26]
    if (io_ras_update_valid & _T_139 & nextPos == 3'h4)	// @[BTB.scala:45:22, :46:20, :59:26, :333:32, :334:{40,58}, package.scala:33:86]
      stack_4 <= io_ras_update_bits_returnAddr;	// @[BTB.scala:59:26]
    if (io_ras_update_valid & _T_139 & nextPos == 3'h5)	// @[BTB.scala:45:22, :46:20, :59:26, :333:32, :334:{40,58}, package.scala:33:86]
      stack_5 <= io_ras_update_bits_returnAddr;	// @[BTB.scala:59:26]
    if (reset) begin
      pageValid <= 6'h0;	// @[BTB.scala:205:26]
      isValid <= 28'h0;	// @[BTB.scala:208:24]
      r_btb_updatePipe_valid <= 1'h0;	// @[Valid.scala:130:22]
      nextPageRepl <= 3'h0;	// @[BTB.scala:238:29]
      state_reg <= 27'h0;	// @[Replacement.scala:168:70]
      r_respPipe_valid <= 1'h0;	// @[Valid.scala:130:22]
      history <= 8'h0;	// @[BTB.scala:118:24]
      reset_waddr <= 10'h0;	// @[BTB.scala:120:36]
      count <= 3'h0;	// @[BTB.scala:57:30, :238:29]
      pos <= 3'h0;	// @[BTB.scala:58:28, :238:29]
    end
    else begin
      pageValid <= {6{r_btb_updatePipe_valid}} & (_GEN_12 | _GEN_9) | pageValid;	// @[BTB.scala:205:26, :242:26, :248:26, :263:29, :285:{15,44}, Valid.scala:130:22]
      if (io_flush)
        isValid <= 28'h0;	// @[BTB.scala:208:24]
      else if (idxHit[1] & idxHit[2] | idxHit[0] & rightOne_1 | idxHit[3] & idxHit[4] | idxHit[5] & idxHit[6] | leftOne_4 & rightOne_4 | leftOne_2 & rightOne_5 | idxHit[8] & idxHit[9] | idxHit[7] & rightOne_7 | idxHit[10] & idxHit[11] | idxHit[12] & idxHit[13] | leftOne_11 & rightOne_10 | leftOne_9 & rightOne_11 | leftOne_6 & rightOne_12 | idxHit[15] & idxHit[16] | idxHit[14] & rightOne_14 | idxHit[17] & idxHit[18] | idxHit[19] & idxHit[20] | leftOne_18 & rightOne_17 | leftOne_16 & rightOne_18 | idxHit[22] & idxHit[23] | idxHit[21] & rightOne_20 | idxHit[24] & idxHit[25] | idxHit[26] & idxHit[27] | leftOne_25 & rightOne_23 | leftOne_23 & rightOne_24 | leftOne_20 & rightOne_25 | (leftOne_6 | rightOne_12) & (leftOne_20 | rightOne_25))	// @[BTB.scala:219:32, Misc.scala:180:37, :181:39, :182:{16,49,61}]
        isValid <= isValid & ~idxHit;	// @[BTB.scala:208:24, :219:32, :298:{24,26}]
      else if (r_btb_updatePipe_valid)	// @[Valid.scala:130:22]
        isValid <= r_btb_updatePipe_bits_isValid ? isValid | mask[27:0] : isValid & ~(mask[27:0]);	// @[BTB.scala:208:24, :270:{19,55,71,73}, OneHot.scala:57:35, Reg.scala:19:16]
      r_btb_updatePipe_valid <= io_btb_update_valid;	// @[Valid.scala:130:22]
      if (r_btb_updatePipe_valid & (~(|updatePageHit) | doTgtPageRepl)) begin	// @[BTB.scala:215:15, :235:40, :237:23, :245:33, :250:{28,46}, Valid.scala:130:22]
        if (next > 3'h5)	// @[BTB.scala:252:29, :253:30, package.scala:33:86]
          nextPageRepl <= {2'h0, next[0]};	// @[BTB.scala:238:29, :239:65, :252:29, :253:{24,47}]
        else	// @[BTB.scala:253:30]
          nextPageRepl <= next;	// @[BTB.scala:238:29, :252:29]
      end
      if (r_respPipe_valid & r_respPipe_bits_taken | r_btb_updatePipe_valid)	// @[BTB.scala:259:{22,43}, Reg.scala:19:16, Valid.scala:130:22]
        state_reg <=
          {~(state_reg_touch_way_sized[4]),
           state_reg_touch_way_sized[4] ? {~(state_reg_touch_way_sized[3]), state_reg_touch_way_sized[3] ? {~(state_reg_touch_way_sized[1]), state_reg_touch_way_sized[1] ? ~(state_reg_touch_way_sized[0]) : state_reg[23], state_reg_touch_way_sized[1] ? state_reg[22] : ~(state_reg_touch_way_sized[0])} : state_reg[24:22], state_reg_touch_way_sized[3] ? state_reg[21:15] : {~(state_reg_touch_way_sized[2]), state_reg_touch_way_sized[2] ? {~(state_reg_touch_way_sized[1]), state_reg_touch_way_sized[1] ? ~(state_reg_touch_way_sized[0]) : state_reg[19], state_reg_touch_way_sized[1] ? state_reg[18] : ~(state_reg_touch_way_sized[0])} : state_reg[20:18], state_reg_touch_way_sized[2] ? state_reg[17:15] : {~(state_reg_touch_way_sized[1]), state_reg_touch_way_sized[1] ? ~(state_reg_touch_way_sized[0]) : state_reg[16], state_reg_touch_way_sized[1] ? state_reg[15] : ~(state_reg_touch_way_sized[0])}}} : state_reg[25:15],
           state_reg_touch_way_sized[4] ? state_reg[14:0] : {~(state_reg_touch_way_sized[3]), state_reg_touch_way_sized[3] ? {~(state_reg_touch_way_sized[2]), state_reg_touch_way_sized[2] ? {~(state_reg_touch_way_sized[1]), state_reg_touch_way_sized[1] ? ~(state_reg_touch_way_sized[0]) : state_reg[11], state_reg_touch_way_sized[1] ? state_reg[10] : ~(state_reg_touch_way_sized[0])} : state_reg[12:10], state_reg_touch_way_sized[2] ? state_reg[9:7] : {~(state_reg_touch_way_sized[1]), state_reg_touch_way_sized[1] ? ~(state_reg_touch_way_sized[0]) : state_reg[8], state_reg_touch_way_sized[1] ? state_reg[7] : ~(state_reg_touch_way_sized[0])}} : state_reg[13:7], state_reg_touch_way_sized[3] ? state_reg[6:0] : {~(state_reg_touch_way_sized[2]), state_reg_touch_way_sized[2] ? {~(state_reg_touch_way_sized[1]), state_reg_touch_way_sized[1] ? ~(state_reg_touch_way_sized[0]) : state_reg[4], state_reg_touch_way_sized[1] ? state_reg[3] : ~(state_reg_touch_way_sized[0])} : state_reg[5:3], state_reg_touch_way_sized[2] ? state_reg[2:0] : {~(state_reg_touch_way_sized[1]), state_reg_touch_way_sized[1] ? ~(state_reg_touch_way_sized[0]) : state_reg[1], state_reg_touch_way_sized[1] ? state_reg[0] : ~(state_reg_touch_way_sized[0])}}}};	// @[BTB.scala:260:20, Cat.scala:33:92, Replacement.scala:168:70, :196:{33,43}, :198:38, :203:16, :206:16, :207:62, :218:7, :245:38, package.scala:155:13]
      r_respPipe_valid <= _io_resp_valid_T_84[0];	// @[BTB.scala:288:34, Valid.scala:130:22]
      if (io_bht_update_valid & io_bht_update_bits_mispredict)	// @[BTB.scala:308:33, :311:32, :312:40]
        history <= io_bht_update_bits_branch ? {io_bht_update_bits_taken, io_bht_update_bits_prediction_history[7:1]} : io_bht_update_bits_prediction_history;	// @[BTB.scala:111:{13,37}, :118:24, :308:33, :314:46, Cat.scala:33:92]
      else if (io_bht_advance_valid)
        history <= {io_bht_advance_bits_bht_value, history[7:1]};	// @[BTB.scala:114:35, :118:24, Cat.scala:33:92]
      if (reset_waddr[9]) begin	// @[BTB.scala:120:36, :121:39]
      end
      else	// @[BTB.scala:121:39]
        reset_waddr <= reset_waddr + 10'h1;	// @[BTB.scala:120:36, :125:49]
      if (io_ras_update_valid) begin
        if (_T_139) begin	// @[BTB.scala:334:40]
          if (count[2:1] != 2'h3)	// @[BTB.scala:44:17, :57:30, package.scala:33:86]
            count <= count + 3'h1;	// @[BTB.scala:44:44, :46:20, :57:30]
          if (_nextPos_T_1)	// @[BTB.scala:45:47]
            pos <= _nextPos_T_3;	// @[BTB.scala:45:64, :58:28]
          else	// @[BTB.scala:45:47]
            pos <= 3'h0;	// @[BTB.scala:58:28, :238:29]
        end
        else if ((&io_ras_update_bits_cfiType) & (|count)) begin	// @[BTB.scala:50:37, :51:11, :55:29, :57:30, :336:{46,63}]
          count <= count - 3'h1;	// @[BTB.scala:51:20, :57:30]
          if (|pos)	// @[BTB.scala:52:40, :58:28]
            pos <= pos - 3'h1;	// @[BTB.scala:52:50, :58:28]
          else	// @[BTB.scala:52:40]
            pos <= 3'h5;	// @[BTB.scala:58:28, package.scala:33:86]
        end
      end
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    logic [31:0] _RANDOM_10;
    logic [31:0] _RANDOM_11;
    logic [31:0] _RANDOM_12;
    logic [31:0] _RANDOM_13;
    logic [31:0] _RANDOM_14;
    logic [31:0] _RANDOM_15;
    logic [31:0] _RANDOM_16;
    logic [31:0] _RANDOM_17;
    logic [31:0] _RANDOM_18;
    logic [31:0] _RANDOM_19;
    logic [31:0] _RANDOM_20;
    logic [31:0] _RANDOM_21;
    logic [31:0] _RANDOM_22;
    logic [31:0] _RANDOM_23;
    logic [31:0] _RANDOM_24;
    logic [31:0] _RANDOM_25;
    logic [31:0] _RANDOM_26;
    logic [31:0] _RANDOM_27;
    logic [31:0] _RANDOM_28;
    logic [31:0] _RANDOM_29;
    logic [31:0] _RANDOM_30;
    logic [31:0] _RANDOM_31;
    logic [31:0] _RANDOM_32;
    logic [31:0] _RANDOM_33;
    logic [31:0] _RANDOM_34;
    logic [31:0] _RANDOM_35;
    logic [31:0] _RANDOM_36;
    logic [31:0] _RANDOM_37;
    logic [31:0] _RANDOM_38;
    logic [31:0] _RANDOM_39;
    logic [31:0] _RANDOM_40;
    logic [31:0] _RANDOM_41;
    logic [31:0] _RANDOM_42;
    logic [31:0] _RANDOM_43;
    logic [31:0] _RANDOM_44;
    logic [31:0] _RANDOM_45;
    logic [31:0] _RANDOM_46;
    logic [31:0] _RANDOM_47;
    logic [31:0] _RANDOM_48;
    logic [31:0] _RANDOM_49;
    logic [31:0] _RANDOM_50;
    logic [31:0] _RANDOM_51;
    logic [31:0] _RANDOM_52;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        _RANDOM_10 = `RANDOM;
        _RANDOM_11 = `RANDOM;
        _RANDOM_12 = `RANDOM;
        _RANDOM_13 = `RANDOM;
        _RANDOM_14 = `RANDOM;
        _RANDOM_15 = `RANDOM;
        _RANDOM_16 = `RANDOM;
        _RANDOM_17 = `RANDOM;
        _RANDOM_18 = `RANDOM;
        _RANDOM_19 = `RANDOM;
        _RANDOM_20 = `RANDOM;
        _RANDOM_21 = `RANDOM;
        _RANDOM_22 = `RANDOM;
        _RANDOM_23 = `RANDOM;
        _RANDOM_24 = `RANDOM;
        _RANDOM_25 = `RANDOM;
        _RANDOM_26 = `RANDOM;
        _RANDOM_27 = `RANDOM;
        _RANDOM_28 = `RANDOM;
        _RANDOM_29 = `RANDOM;
        _RANDOM_30 = `RANDOM;
        _RANDOM_31 = `RANDOM;
        _RANDOM_32 = `RANDOM;
        _RANDOM_33 = `RANDOM;
        _RANDOM_34 = `RANDOM;
        _RANDOM_35 = `RANDOM;
        _RANDOM_36 = `RANDOM;
        _RANDOM_37 = `RANDOM;
        _RANDOM_38 = `RANDOM;
        _RANDOM_39 = `RANDOM;
        _RANDOM_40 = `RANDOM;
        _RANDOM_41 = `RANDOM;
        _RANDOM_42 = `RANDOM;
        _RANDOM_43 = `RANDOM;
        _RANDOM_44 = `RANDOM;
        _RANDOM_45 = `RANDOM;
        _RANDOM_46 = `RANDOM;
        _RANDOM_47 = `RANDOM;
        _RANDOM_48 = `RANDOM;
        _RANDOM_49 = `RANDOM;
        _RANDOM_50 = `RANDOM;
        _RANDOM_51 = `RANDOM;
        _RANDOM_52 = `RANDOM;
        idxs_0 = _RANDOM_0[12:0];	// @[BTB.scala:200:17]
        idxs_1 = _RANDOM_0[25:13];	// @[BTB.scala:200:17]
        idxs_2 = {_RANDOM_0[31:26], _RANDOM_1[6:0]};	// @[BTB.scala:200:17]
        idxs_3 = _RANDOM_1[19:7];	// @[BTB.scala:200:17]
        idxs_4 = {_RANDOM_1[31:20], _RANDOM_2[0]};	// @[BTB.scala:200:17]
        idxs_5 = _RANDOM_2[13:1];	// @[BTB.scala:200:17]
        idxs_6 = _RANDOM_2[26:14];	// @[BTB.scala:200:17]
        idxs_7 = {_RANDOM_2[31:27], _RANDOM_3[7:0]};	// @[BTB.scala:200:17]
        idxs_8 = _RANDOM_3[20:8];	// @[BTB.scala:200:17]
        idxs_9 = {_RANDOM_3[31:21], _RANDOM_4[1:0]};	// @[BTB.scala:200:17]
        idxs_10 = _RANDOM_4[14:2];	// @[BTB.scala:200:17]
        idxs_11 = _RANDOM_4[27:15];	// @[BTB.scala:200:17]
        idxs_12 = {_RANDOM_4[31:28], _RANDOM_5[8:0]};	// @[BTB.scala:200:17]
        idxs_13 = _RANDOM_5[21:9];	// @[BTB.scala:200:17]
        idxs_14 = {_RANDOM_5[31:22], _RANDOM_6[2:0]};	// @[BTB.scala:200:17]
        idxs_15 = _RANDOM_6[15:3];	// @[BTB.scala:200:17]
        idxs_16 = _RANDOM_6[28:16];	// @[BTB.scala:200:17]
        idxs_17 = {_RANDOM_6[31:29], _RANDOM_7[9:0]};	// @[BTB.scala:200:17]
        idxs_18 = _RANDOM_7[22:10];	// @[BTB.scala:200:17]
        idxs_19 = {_RANDOM_7[31:23], _RANDOM_8[3:0]};	// @[BTB.scala:200:17]
        idxs_20 = _RANDOM_8[16:4];	// @[BTB.scala:200:17]
        idxs_21 = _RANDOM_8[29:17];	// @[BTB.scala:200:17]
        idxs_22 = {_RANDOM_8[31:30], _RANDOM_9[10:0]};	// @[BTB.scala:200:17]
        idxs_23 = _RANDOM_9[23:11];	// @[BTB.scala:200:17]
        idxs_24 = {_RANDOM_9[31:24], _RANDOM_10[4:0]};	// @[BTB.scala:200:17]
        idxs_25 = _RANDOM_10[17:5];	// @[BTB.scala:200:17]
        idxs_26 = _RANDOM_10[30:18];	// @[BTB.scala:200:17]
        idxs_27 = {_RANDOM_10[31], _RANDOM_11[11:0]};	// @[BTB.scala:200:17]
        idxPages_0 = _RANDOM_11[14:12];	// @[BTB.scala:200:17, :201:21]
        idxPages_1 = _RANDOM_11[17:15];	// @[BTB.scala:200:17, :201:21]
        idxPages_2 = _RANDOM_11[20:18];	// @[BTB.scala:200:17, :201:21]
        idxPages_3 = _RANDOM_11[23:21];	// @[BTB.scala:200:17, :201:21]
        idxPages_4 = _RANDOM_11[26:24];	// @[BTB.scala:200:17, :201:21]
        idxPages_5 = _RANDOM_11[29:27];	// @[BTB.scala:200:17, :201:21]
        idxPages_6 = {_RANDOM_11[31:30], _RANDOM_12[0]};	// @[BTB.scala:200:17, :201:21]
        idxPages_7 = _RANDOM_12[3:1];	// @[BTB.scala:201:21]
        idxPages_8 = _RANDOM_12[6:4];	// @[BTB.scala:201:21]
        idxPages_9 = _RANDOM_12[9:7];	// @[BTB.scala:201:21]
        idxPages_10 = _RANDOM_12[12:10];	// @[BTB.scala:201:21]
        idxPages_11 = _RANDOM_12[15:13];	// @[BTB.scala:201:21]
        idxPages_12 = _RANDOM_12[18:16];	// @[BTB.scala:201:21]
        idxPages_13 = _RANDOM_12[21:19];	// @[BTB.scala:201:21]
        idxPages_14 = _RANDOM_12[24:22];	// @[BTB.scala:201:21]
        idxPages_15 = _RANDOM_12[27:25];	// @[BTB.scala:201:21]
        idxPages_16 = _RANDOM_12[30:28];	// @[BTB.scala:201:21]
        idxPages_17 = {_RANDOM_12[31], _RANDOM_13[1:0]};	// @[BTB.scala:201:21]
        idxPages_18 = _RANDOM_13[4:2];	// @[BTB.scala:201:21]
        idxPages_19 = _RANDOM_13[7:5];	// @[BTB.scala:201:21]
        idxPages_20 = _RANDOM_13[10:8];	// @[BTB.scala:201:21]
        idxPages_21 = _RANDOM_13[13:11];	// @[BTB.scala:201:21]
        idxPages_22 = _RANDOM_13[16:14];	// @[BTB.scala:201:21]
        idxPages_23 = _RANDOM_13[19:17];	// @[BTB.scala:201:21]
        idxPages_24 = _RANDOM_13[22:20];	// @[BTB.scala:201:21]
        idxPages_25 = _RANDOM_13[25:23];	// @[BTB.scala:201:21]
        idxPages_26 = _RANDOM_13[28:26];	// @[BTB.scala:201:21]
        idxPages_27 = _RANDOM_13[31:29];	// @[BTB.scala:201:21]
        tgts_0 = _RANDOM_14[12:0];	// @[BTB.scala:202:17]
        tgts_1 = _RANDOM_14[25:13];	// @[BTB.scala:202:17]
        tgts_2 = {_RANDOM_14[31:26], _RANDOM_15[6:0]};	// @[BTB.scala:202:17]
        tgts_3 = _RANDOM_15[19:7];	// @[BTB.scala:202:17]
        tgts_4 = {_RANDOM_15[31:20], _RANDOM_16[0]};	// @[BTB.scala:202:17]
        tgts_5 = _RANDOM_16[13:1];	// @[BTB.scala:202:17]
        tgts_6 = _RANDOM_16[26:14];	// @[BTB.scala:202:17]
        tgts_7 = {_RANDOM_16[31:27], _RANDOM_17[7:0]};	// @[BTB.scala:202:17]
        tgts_8 = _RANDOM_17[20:8];	// @[BTB.scala:202:17]
        tgts_9 = {_RANDOM_17[31:21], _RANDOM_18[1:0]};	// @[BTB.scala:202:17]
        tgts_10 = _RANDOM_18[14:2];	// @[BTB.scala:202:17]
        tgts_11 = _RANDOM_18[27:15];	// @[BTB.scala:202:17]
        tgts_12 = {_RANDOM_18[31:28], _RANDOM_19[8:0]};	// @[BTB.scala:202:17]
        tgts_13 = _RANDOM_19[21:9];	// @[BTB.scala:202:17]
        tgts_14 = {_RANDOM_19[31:22], _RANDOM_20[2:0]};	// @[BTB.scala:202:17]
        tgts_15 = _RANDOM_20[15:3];	// @[BTB.scala:202:17]
        tgts_16 = _RANDOM_20[28:16];	// @[BTB.scala:202:17]
        tgts_17 = {_RANDOM_20[31:29], _RANDOM_21[9:0]};	// @[BTB.scala:202:17]
        tgts_18 = _RANDOM_21[22:10];	// @[BTB.scala:202:17]
        tgts_19 = {_RANDOM_21[31:23], _RANDOM_22[3:0]};	// @[BTB.scala:202:17]
        tgts_20 = _RANDOM_22[16:4];	// @[BTB.scala:202:17]
        tgts_21 = _RANDOM_22[29:17];	// @[BTB.scala:202:17]
        tgts_22 = {_RANDOM_22[31:30], _RANDOM_23[10:0]};	// @[BTB.scala:202:17]
        tgts_23 = _RANDOM_23[23:11];	// @[BTB.scala:202:17]
        tgts_24 = {_RANDOM_23[31:24], _RANDOM_24[4:0]};	// @[BTB.scala:202:17]
        tgts_25 = _RANDOM_24[17:5];	// @[BTB.scala:202:17]
        tgts_26 = _RANDOM_24[30:18];	// @[BTB.scala:202:17]
        tgts_27 = {_RANDOM_24[31], _RANDOM_25[11:0]};	// @[BTB.scala:202:17]
        tgtPages_0 = _RANDOM_25[14:12];	// @[BTB.scala:202:17, :203:21]
        tgtPages_1 = _RANDOM_25[17:15];	// @[BTB.scala:202:17, :203:21]
        tgtPages_2 = _RANDOM_25[20:18];	// @[BTB.scala:202:17, :203:21]
        tgtPages_3 = _RANDOM_25[23:21];	// @[BTB.scala:202:17, :203:21]
        tgtPages_4 = _RANDOM_25[26:24];	// @[BTB.scala:202:17, :203:21]
        tgtPages_5 = _RANDOM_25[29:27];	// @[BTB.scala:202:17, :203:21]
        tgtPages_6 = {_RANDOM_25[31:30], _RANDOM_26[0]};	// @[BTB.scala:202:17, :203:21]
        tgtPages_7 = _RANDOM_26[3:1];	// @[BTB.scala:203:21]
        tgtPages_8 = _RANDOM_26[6:4];	// @[BTB.scala:203:21]
        tgtPages_9 = _RANDOM_26[9:7];	// @[BTB.scala:203:21]
        tgtPages_10 = _RANDOM_26[12:10];	// @[BTB.scala:203:21]
        tgtPages_11 = _RANDOM_26[15:13];	// @[BTB.scala:203:21]
        tgtPages_12 = _RANDOM_26[18:16];	// @[BTB.scala:203:21]
        tgtPages_13 = _RANDOM_26[21:19];	// @[BTB.scala:203:21]
        tgtPages_14 = _RANDOM_26[24:22];	// @[BTB.scala:203:21]
        tgtPages_15 = _RANDOM_26[27:25];	// @[BTB.scala:203:21]
        tgtPages_16 = _RANDOM_26[30:28];	// @[BTB.scala:203:21]
        tgtPages_17 = {_RANDOM_26[31], _RANDOM_27[1:0]};	// @[BTB.scala:203:21]
        tgtPages_18 = _RANDOM_27[4:2];	// @[BTB.scala:203:21]
        tgtPages_19 = _RANDOM_27[7:5];	// @[BTB.scala:203:21]
        tgtPages_20 = _RANDOM_27[10:8];	// @[BTB.scala:203:21]
        tgtPages_21 = _RANDOM_27[13:11];	// @[BTB.scala:203:21]
        tgtPages_22 = _RANDOM_27[16:14];	// @[BTB.scala:203:21]
        tgtPages_23 = _RANDOM_27[19:17];	// @[BTB.scala:203:21]
        tgtPages_24 = _RANDOM_27[22:20];	// @[BTB.scala:203:21]
        tgtPages_25 = _RANDOM_27[25:23];	// @[BTB.scala:203:21]
        tgtPages_26 = _RANDOM_27[28:26];	// @[BTB.scala:203:21]
        tgtPages_27 = _RANDOM_27[31:29];	// @[BTB.scala:203:21]
        pages_0 = _RANDOM_28[24:0];	// @[BTB.scala:204:18]
        pages_1 = {_RANDOM_28[31:25], _RANDOM_29[17:0]};	// @[BTB.scala:204:18]
        pages_2 = {_RANDOM_29[31:18], _RANDOM_30[10:0]};	// @[BTB.scala:204:18]
        pages_3 = {_RANDOM_30[31:11], _RANDOM_31[3:0]};	// @[BTB.scala:204:18]
        pages_4 = _RANDOM_31[28:4];	// @[BTB.scala:204:18]
        pages_5 = {_RANDOM_31[31:29], _RANDOM_32[21:0]};	// @[BTB.scala:204:18]
        pageValid = _RANDOM_32[27:22];	// @[BTB.scala:204:18, :205:26]
        isValid = {_RANDOM_32[31:28], _RANDOM_33[23:0]};	// @[BTB.scala:204:18, :208:24]
        cfiType_0 = _RANDOM_33[25:24];	// @[BTB.scala:208:24, :209:20]
        cfiType_1 = _RANDOM_33[27:26];	// @[BTB.scala:208:24, :209:20]
        cfiType_2 = _RANDOM_33[29:28];	// @[BTB.scala:208:24, :209:20]
        cfiType_3 = _RANDOM_33[31:30];	// @[BTB.scala:208:24, :209:20]
        cfiType_4 = _RANDOM_34[1:0];	// @[BTB.scala:209:20]
        cfiType_5 = _RANDOM_34[3:2];	// @[BTB.scala:209:20]
        cfiType_6 = _RANDOM_34[5:4];	// @[BTB.scala:209:20]
        cfiType_7 = _RANDOM_34[7:6];	// @[BTB.scala:209:20]
        cfiType_8 = _RANDOM_34[9:8];	// @[BTB.scala:209:20]
        cfiType_9 = _RANDOM_34[11:10];	// @[BTB.scala:209:20]
        cfiType_10 = _RANDOM_34[13:12];	// @[BTB.scala:209:20]
        cfiType_11 = _RANDOM_34[15:14];	// @[BTB.scala:209:20]
        cfiType_12 = _RANDOM_34[17:16];	// @[BTB.scala:209:20]
        cfiType_13 = _RANDOM_34[19:18];	// @[BTB.scala:209:20]
        cfiType_14 = _RANDOM_34[21:20];	// @[BTB.scala:209:20]
        cfiType_15 = _RANDOM_34[23:22];	// @[BTB.scala:209:20]
        cfiType_16 = _RANDOM_34[25:24];	// @[BTB.scala:209:20]
        cfiType_17 = _RANDOM_34[27:26];	// @[BTB.scala:209:20]
        cfiType_18 = _RANDOM_34[29:28];	// @[BTB.scala:209:20]
        cfiType_19 = _RANDOM_34[31:30];	// @[BTB.scala:209:20]
        cfiType_20 = _RANDOM_35[1:0];	// @[BTB.scala:209:20]
        cfiType_21 = _RANDOM_35[3:2];	// @[BTB.scala:209:20]
        cfiType_22 = _RANDOM_35[5:4];	// @[BTB.scala:209:20]
        cfiType_23 = _RANDOM_35[7:6];	// @[BTB.scala:209:20]
        cfiType_24 = _RANDOM_35[9:8];	// @[BTB.scala:209:20]
        cfiType_25 = _RANDOM_35[11:10];	// @[BTB.scala:209:20]
        cfiType_26 = _RANDOM_35[13:12];	// @[BTB.scala:209:20]
        cfiType_27 = _RANDOM_35[15:14];	// @[BTB.scala:209:20]
        brIdx_0 = _RANDOM_35[16];	// @[BTB.scala:209:20, :210:18]
        brIdx_1 = _RANDOM_35[17];	// @[BTB.scala:209:20, :210:18]
        brIdx_2 = _RANDOM_35[18];	// @[BTB.scala:209:20, :210:18]
        brIdx_3 = _RANDOM_35[19];	// @[BTB.scala:209:20, :210:18]
        brIdx_4 = _RANDOM_35[20];	// @[BTB.scala:209:20, :210:18]
        brIdx_5 = _RANDOM_35[21];	// @[BTB.scala:209:20, :210:18]
        brIdx_6 = _RANDOM_35[22];	// @[BTB.scala:209:20, :210:18]
        brIdx_7 = _RANDOM_35[23];	// @[BTB.scala:209:20, :210:18]
        brIdx_8 = _RANDOM_35[24];	// @[BTB.scala:209:20, :210:18]
        brIdx_9 = _RANDOM_35[25];	// @[BTB.scala:209:20, :210:18]
        brIdx_10 = _RANDOM_35[26];	// @[BTB.scala:209:20, :210:18]
        brIdx_11 = _RANDOM_35[27];	// @[BTB.scala:209:20, :210:18]
        brIdx_12 = _RANDOM_35[28];	// @[BTB.scala:209:20, :210:18]
        brIdx_13 = _RANDOM_35[29];	// @[BTB.scala:209:20, :210:18]
        brIdx_14 = _RANDOM_35[30];	// @[BTB.scala:209:20, :210:18]
        brIdx_15 = _RANDOM_35[31];	// @[BTB.scala:209:20, :210:18]
        brIdx_16 = _RANDOM_36[0];	// @[BTB.scala:210:18]
        brIdx_17 = _RANDOM_36[1];	// @[BTB.scala:210:18]
        brIdx_18 = _RANDOM_36[2];	// @[BTB.scala:210:18]
        brIdx_19 = _RANDOM_36[3];	// @[BTB.scala:210:18]
        brIdx_20 = _RANDOM_36[4];	// @[BTB.scala:210:18]
        brIdx_21 = _RANDOM_36[5];	// @[BTB.scala:210:18]
        brIdx_22 = _RANDOM_36[6];	// @[BTB.scala:210:18]
        brIdx_23 = _RANDOM_36[7];	// @[BTB.scala:210:18]
        brIdx_24 = _RANDOM_36[8];	// @[BTB.scala:210:18]
        brIdx_25 = _RANDOM_36[9];	// @[BTB.scala:210:18]
        brIdx_26 = _RANDOM_36[10];	// @[BTB.scala:210:18]
        brIdx_27 = _RANDOM_36[11];	// @[BTB.scala:210:18]
        r_btb_updatePipe_valid = _RANDOM_36[12];	// @[BTB.scala:210:18, Valid.scala:130:22]
        r_btb_updatePipe_bits_prediction_entry = _RANDOM_37[30:26];	// @[Reg.scala:19:16]
        r_btb_updatePipe_bits_pc = {_RANDOM_38[31:8], _RANDOM_39[14:0]};	// @[Reg.scala:19:16]
        r_btb_updatePipe_bits_isValid = _RANDOM_40[23];	// @[Reg.scala:19:16]
        r_btb_updatePipe_bits_br_pc = {_RANDOM_40[31:24], _RANDOM_41[30:0]};	// @[Reg.scala:19:16]
        r_btb_updatePipe_bits_cfiType = {_RANDOM_41[31], _RANDOM_42[0]};	// @[Reg.scala:19:16]
        nextPageRepl = _RANDOM_42[3:1];	// @[BTB.scala:238:29, Reg.scala:19:16]
        state_reg = _RANDOM_42[30:4];	// @[Reg.scala:19:16, Replacement.scala:168:70]
        r_respPipe_valid = _RANDOM_42[31];	// @[Reg.scala:19:16, Valid.scala:130:22]
        r_respPipe_bits_taken = _RANDOM_43[2];	// @[Reg.scala:19:16]
        r_respPipe_bits_entry = _RANDOM_44[17:13];	// @[Reg.scala:19:16]
        history = {_RANDOM_44[31:27], _RANDOM_45[2:0]};	// @[BTB.scala:118:24, Reg.scala:19:16]
        reset_waddr = _RANDOM_45[12:3];	// @[BTB.scala:118:24, :120:36]
        count = _RANDOM_45[15:13];	// @[BTB.scala:57:30, :118:24]
        pos = _RANDOM_45[18:16];	// @[BTB.scala:58:28, :118:24]
        stack_0 = {_RANDOM_45[31:19], _RANDOM_46[25:0]};	// @[BTB.scala:59:26, :118:24]
        stack_1 = {_RANDOM_46[31:26], _RANDOM_47, _RANDOM_48[0]};	// @[BTB.scala:59:26]
        stack_2 = {_RANDOM_48[31:1], _RANDOM_49[7:0]};	// @[BTB.scala:59:26]
        stack_3 = {_RANDOM_49[31:8], _RANDOM_50[14:0]};	// @[BTB.scala:59:26]
        stack_4 = {_RANDOM_50[31:15], _RANDOM_51[21:0]};	// @[BTB.scala:59:26]
        stack_5 = {_RANDOM_51[31:22], _RANDOM_52[28:0]};	// @[BTB.scala:59:26]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  table_combMem table_ext (	// @[BTB.scala:117:26]
    .R0_addr (io_req_bits_addr[10:2] ^ {7'h0, io_req_bits_addr[12:11]} ^ {_GEN_3[7:5], 6'h0}),	// @[BTB.scala:83:{12,19}, :86:21, :87:{9,42,48,77}, :89:{20,44}, :205:26, OneHot.scala:57:35]
    .R0_en   (1'h1),
    .R0_clk  (clock),
    .W0_addr (_GEN_5 ? io_bht_update_bits_pc[10:2] ^ {7'h0, io_bht_update_bits_pc[12:11]} ^ {_GEN_4[7:5], 6'h0} : reset_waddr[8:0]),	// @[BTB.scala:83:{12,19}, :86:21, :87:{9,42,48,77}, :89:{20,44}, :99:23, :100:13, :120:36, :123:31, :205:26, :311:32, :312:40, OneHot.scala:57:35]
    .W0_en   (io_bht_update_valid & io_bht_update_bits_branch | ~(reset_waddr[9])),	// @[BTB.scala:98:9, :120:36, :121:{27,39}, :122:29, :311:32, :312:40]
    .W0_clk  (clock),
    .W0_data (_GEN_5 & io_bht_update_bits_taken),	// @[BTB.scala:99:23, :100:13, :101:13, :123:31, :124:31, :311:32, :312:40]
    .R0_data (_table_ext_R0_data)
  );
  assign io_resp_valid = _io_resp_valid_T_84[0];	// @[BTB.scala:288:34]
  assign io_resp_bits_taken = ~_T_135;	// @[BTB.scala:289:22, :321:{22,35,56}]
  assign io_resp_bits_bridx = idxHit[0] & brIdx_0 | idxHit[1] & brIdx_1 | idxHit[2] & brIdx_2 | idxHit[3] & brIdx_3 | idxHit[4] & brIdx_4 | idxHit[5] & brIdx_5 | idxHit[6] & brIdx_6 | idxHit[7] & brIdx_7 | idxHit[8] & brIdx_8 | idxHit[9] & brIdx_9 | idxHit[10] & brIdx_10 | idxHit[11] & brIdx_11 | idxHit[12] & brIdx_12 | idxHit[13] & brIdx_13 | idxHit[14] & brIdx_14 | idxHit[15] & brIdx_15 | idxHit[16] & brIdx_16 | idxHit[17] & brIdx_17 | idxHit[18] & brIdx_18 | idxHit[19] & brIdx_19 | idxHit[20] & brIdx_20 | idxHit[21] & brIdx_21 | idxHit[22] & brIdx_22 | idxHit[23] & brIdx_23 | idxHit[24] & brIdx_24 | idxHit[25] & brIdx_25 | idxHit[26] & brIdx_26 | idxHit[27] & brIdx_27;	// @[BTB.scala:210:18, :219:32, Mux.scala:27:73, :29:36]
  assign io_resp_bits_target =
    (|count) & (|(idxHit & {&cfiType_27, &cfiType_26, &cfiType_25, &cfiType_24, &cfiType_23, &cfiType_22, &cfiType_21, &cfiType_20, &cfiType_19, &cfiType_18, &cfiType_17, &cfiType_16, &cfiType_15, &cfiType_14, &cfiType_13, &cfiType_12, &cfiType_11, &cfiType_10, &cfiType_9, &cfiType_8, &cfiType_7, &cfiType_6, &cfiType_5, &cfiType_4, &cfiType_3, &cfiType_2, &cfiType_1, &cfiType_0}))
      ? _GEN_7
      : {_GEN[(idxHit[0] ? tgtPages_0 : 3'h0) | (idxHit[1] ? tgtPages_1 : 3'h0) | (idxHit[2] ? tgtPages_2 : 3'h0) | (idxHit[3] ? tgtPages_3 : 3'h0) | (idxHit[4] ? tgtPages_4 : 3'h0) | (idxHit[5] ? tgtPages_5 : 3'h0) | (idxHit[6] ? tgtPages_6 : 3'h0) | (idxHit[7] ? tgtPages_7 : 3'h0) | (idxHit[8] ? tgtPages_8 : 3'h0) | (idxHit[9] ? tgtPages_9 : 3'h0) | (idxHit[10] ? tgtPages_10 : 3'h0) | (idxHit[11] ? tgtPages_11 : 3'h0) | (idxHit[12] ? tgtPages_12 : 3'h0) | (idxHit[13] ? tgtPages_13 : 3'h0) | (idxHit[14] ? tgtPages_14 : 3'h0) | (idxHit[15] ? tgtPages_15 : 3'h0) | (idxHit[16] ? tgtPages_16 : 3'h0) | (idxHit[17] ? tgtPages_17 : 3'h0) | (idxHit[18] ? tgtPages_18 : 3'h0) | (idxHit[19] ? tgtPages_19 : 3'h0) | (idxHit[20] ? tgtPages_20 : 3'h0) | (idxHit[21] ? tgtPages_21 : 3'h0) | (idxHit[22] ? tgtPages_22 : 3'h0) | (idxHit[23] ? tgtPages_23 : 3'h0) | (idxHit[24] ? tgtPages_24 : 3'h0) | (idxHit[25] ? tgtPages_25 : 3'h0) | (idxHit[26] ? tgtPages_26 : 3'h0) | (idxHit[27] ? tgtPages_27 : 3'h0)], (idxHit[0] ? tgts_0 : 13'h0) | (idxHit[1] ? tgts_1 : 13'h0) | (idxHit[2] ? tgts_2 : 13'h0) | (idxHit[3] ? tgts_3 : 13'h0) | (idxHit[4] ? tgts_4 : 13'h0) | (idxHit[5] ? tgts_5 : 13'h0) | (idxHit[6] ? tgts_6 : 13'h0) | (idxHit[7] ? tgts_7 : 13'h0) | (idxHit[8] ? tgts_8 : 13'h0) | (idxHit[9] ? tgts_9 : 13'h0) | (idxHit[10] ? tgts_10 : 13'h0) | (idxHit[11] ? tgts_11 : 13'h0) | (idxHit[12] ? tgts_12 : 13'h0) | (idxHit[13] ? tgts_13 : 13'h0) | (idxHit[14] ? tgts_14 : 13'h0) | (idxHit[15] ? tgts_15 : 13'h0) | (idxHit[16] ? tgts_16 : 13'h0) | (idxHit[17] ? tgts_17 : 13'h0) | (idxHit[18] ? tgts_18 : 13'h0) | (idxHit[19] ? tgts_19 : 13'h0) | (idxHit[20] ? tgts_20 : 13'h0) | (idxHit[21] ? tgts_21 : 13'h0) | (idxHit[22] ? tgts_22 : 13'h0) | (idxHit[23] ? tgts_23 : 13'h0) | (idxHit[24] ? tgts_24 : 13'h0) | (idxHit[25] ? tgts_25 : 13'h0) | (idxHit[26] ? tgts_26 : 13'h0) | (idxHit[27] ? tgts_27 : 13'h0), 1'h0};	// @[BTB.scala:55:29, :57:30, :202:17, :203:21, :209:20, :219:32, :238:29, :290:23, :327:{26,42,67}, :329:22, :330:{24,35}, :331:27, Cat.scala:33:92, Mux.scala:27:73, :29:36, package.scala:33:{76,86}]
  assign io_resp_bits_entry = _io_resp_bits_entry_output;	// @[Cat.scala:33:92]
  assign io_resp_bits_bht_history = history;	// @[BTB.scala:118:24]
  assign io_resp_bits_bht_value = res_value;	// @[BTB.scala:93:21]
  assign io_ras_head_valid = |count;	// @[BTB.scala:55:29, :57:30]
  assign io_ras_head_bits = _GEN_7;	// @[BTB.scala:329:22]
endmodule

