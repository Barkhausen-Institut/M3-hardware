// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module TLWidthWidget_4(
  input          clock,
                 reset,
                 auto_in_a_valid,
  input  [2:0]   auto_in_a_bits_opcode,
  input  [3:0]   auto_in_a_bits_size,
                 auto_in_a_bits_source,
  input  [31:0]  auto_in_a_bits_address,
  input          auto_in_a_bits_user_amba_prot_bufferable,
                 auto_in_a_bits_user_amba_prot_modifiable,
                 auto_in_a_bits_user_amba_prot_readalloc,
                 auto_in_a_bits_user_amba_prot_writealloc,
                 auto_in_a_bits_user_amba_prot_privileged,
                 auto_in_a_bits_user_amba_prot_secure,
                 auto_in_a_bits_user_amba_prot_fetch,
  input  [15:0]  auto_in_a_bits_mask,
  input  [127:0] auto_in_a_bits_data,
  input          auto_in_d_ready,
                 auto_out_a_ready,
                 auto_out_d_valid,
  input  [2:0]   auto_out_d_bits_opcode,
  input  [3:0]   auto_out_d_bits_size,
                 auto_out_d_bits_source,
  input          auto_out_d_bits_denied,
  input  [63:0]  auto_out_d_bits_data,
  input          auto_out_d_bits_corrupt,
  output         auto_in_a_ready,
                 auto_in_d_valid,
  output [2:0]   auto_in_d_bits_opcode,
  output [3:0]   auto_in_d_bits_size,
                 auto_in_d_bits_source,
  output         auto_in_d_bits_denied,
  output [127:0] auto_in_d_bits_data,
  output         auto_in_d_bits_corrupt,
                 auto_out_a_valid,
  output [2:0]   auto_out_a_bits_opcode,
                 auto_out_a_bits_param,
  output [3:0]   auto_out_a_bits_size,
                 auto_out_a_bits_source,
  output [31:0]  auto_out_a_bits_address,
  output         auto_out_a_bits_user_amba_prot_bufferable,
                 auto_out_a_bits_user_amba_prot_modifiable,
                 auto_out_a_bits_user_amba_prot_readalloc,
                 auto_out_a_bits_user_amba_prot_writealloc,
                 auto_out_a_bits_user_amba_prot_privileged,
                 auto_out_a_bits_user_amba_prot_secure,
                 auto_out_a_bits_user_amba_prot_fetch,
  output [7:0]   auto_out_a_bits_mask,
  output [63:0]  auto_out_a_bits_data,
  output         auto_out_a_bits_corrupt,
                 auto_out_d_ready
);

  wire         _repeated_repeater_io_deq_valid;	// @[Repeater.scala:35:26]
  wire [2:0]   _repeated_repeater_io_deq_bits_opcode;	// @[Repeater.scala:35:26]
  wire [3:0]   _repeated_repeater_io_deq_bits_size;	// @[Repeater.scala:35:26]
  wire [31:0]  _repeated_repeater_io_deq_bits_address;	// @[Repeater.scala:35:26]
  wire [15:0]  _repeated_repeater_io_deq_bits_mask;	// @[Repeater.scala:35:26]
  wire [127:0] _repeated_repeater_io_deq_bits_data;	// @[Repeater.scala:35:26]
  wire [18:0]  _repeat_limit_T_1 = 19'hF << _repeated_repeater_io_deq_bits_size;	// @[Repeater.scala:35:26, package.scala:235:71]
  reg          repeat_count;	// @[WidthWidget.scala:100:26]
  wire         repeat_last = repeat_count == ~(_repeat_limit_T_1[3]) | _repeated_repeater_io_deq_bits_opcode[2];	// @[Edges.scala:92:37, Repeater.scala:35:26, WidthWidget.scala:100:26, :102:{25,35}, package.scala:235:{46,71,76}]
  wire         repeat_index = _repeated_repeater_io_deq_bits_address[3] | repeat_count;	// @[Repeater.scala:35:26, WidthWidget.scala:100:26, :111:39, :121:24]
  wire [18:0]  _limit_T_1 = 19'hF << auto_out_d_bits_size;	// @[package.scala:235:71]
  reg          count;	// @[WidthWidget.scala:35:27]
  wire         last = count == ~(_limit_T_1[3]) | ~(auto_out_d_bits_opcode[0]);	// @[Edges.scala:106:36, WidthWidget.scala:35:27, :37:{26,36,39}, package.scala:235:{46,71,76}]
  reg          corrupt_reg;	// @[WidthWidget.scala:40:32]
  wire         bundleIn_0_d_bits_corrupt = auto_out_d_bits_corrupt | corrupt_reg;	// @[WidthWidget.scala:40:32, :42:36]
  wire         x1_d_ready = auto_in_d_ready | ~last;	// @[WidthWidget.scala:37:36, :71:{29,32}]
  reg          bundleIn_0_d_bits_data_rdata_written_once;	// @[WidthWidget.scala:57:41]
  wire         bundleIn_0_d_bits_data_masked_enable_0 = ~(count & ~(_limit_T_1[3])) | ~bundleIn_0_d_bits_data_rdata_written_once;	// @[WidthWidget.scala:35:27, :38:{47,63}, :57:41, :58:{42,45}, package.scala:235:{46,71,76}]
  reg  [63:0]  bundleIn_0_d_bits_data_rdata_0;	// @[WidthWidget.scala:61:24]
  wire         _bundleIn_0_d_bits_data_T = x1_d_ready & auto_out_d_valid;	// @[Decoupled.scala:51:35, WidthWidget.scala:71:29]
  wire         _bundleIn_0_d_bits_data_T_2 = _bundleIn_0_d_bits_data_T & ~last;	// @[Decoupled.scala:51:35, WidthWidget.scala:37:36, :64:25, :71:32]
  always @(posedge clock) begin
    if (reset) begin
      repeat_count <= 1'h0;	// @[WidthWidget.scala:100:26]
      count <= 1'h0;	// @[WidthWidget.scala:35:27]
      corrupt_reg <= 1'h0;	// @[WidthWidget.scala:40:32]
      bundleIn_0_d_bits_data_rdata_written_once <= 1'h0;	// @[WidthWidget.scala:57:41]
    end
    else begin
      if (auto_out_a_ready & _repeated_repeater_io_deq_valid)	// @[Decoupled.scala:51:35, Repeater.scala:35:26]
        repeat_count <= ~repeat_last & repeat_count - 1'h1;	// @[WidthWidget.scala:100:26, :102:35, :105:{15,24}, :106:{21,29}]
      if (_bundleIn_0_d_bits_data_T) begin	// @[Decoupled.scala:51:35]
        count <= ~last & count - 1'h1;	// @[WidthWidget.scala:35:27, :37:36, :45:{15,24}, :47:21, :48:17]
        corrupt_reg <= ~last & bundleIn_0_d_bits_corrupt;	// @[WidthWidget.scala:37:36, :40:32, :42:36, :45:15, :46:21, :47:21, :48:17, :49:23]
      end
      bundleIn_0_d_bits_data_rdata_written_once <= _bundleIn_0_d_bits_data_T_2 | bundleIn_0_d_bits_data_rdata_written_once;	// @[WidthWidget.scala:57:41, :64:{25,35}, :65:30]
    end
    if (_bundleIn_0_d_bits_data_T_2 & bundleIn_0_d_bits_data_masked_enable_0)	// @[WidthWidget.scala:58:42, :61:24, :63:88, :64:{25,35}, :66:56]
      bundleIn_0_d_bits_data_rdata_0 <= auto_out_d_bits_data;	// @[WidthWidget.scala:61:24]
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        repeat_count = _RANDOM_0[0];	// @[WidthWidget.scala:100:26]
        count = _RANDOM_0[1];	// @[WidthWidget.scala:35:27, :100:26]
        corrupt_reg = _RANDOM_0[2];	// @[WidthWidget.scala:40:32, :100:26]
        bundleIn_0_d_bits_data_rdata_written_once = _RANDOM_0[3];	// @[WidthWidget.scala:57:41, :100:26]
        bundleIn_0_d_bits_data_rdata_0 = {_RANDOM_0[31:4], _RANDOM_1, _RANDOM_2[3:0]};	// @[WidthWidget.scala:61:24, :100:26]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  Repeater_2 repeated_repeater (	// @[Repeater.scala:35:26]
    .clock                                 (clock),
    .reset                                 (reset),
    .io_repeat                             (~repeat_last),	// @[WidthWidget.scala:102:35, :143:7]
    .io_enq_valid                          (auto_in_a_valid),
    .io_enq_bits_opcode                    (auto_in_a_bits_opcode),
    .io_enq_bits_size                      (auto_in_a_bits_size),
    .io_enq_bits_source                    (auto_in_a_bits_source),
    .io_enq_bits_address                   (auto_in_a_bits_address),
    .io_enq_bits_user_amba_prot_bufferable (auto_in_a_bits_user_amba_prot_bufferable),
    .io_enq_bits_user_amba_prot_modifiable (auto_in_a_bits_user_amba_prot_modifiable),
    .io_enq_bits_user_amba_prot_readalloc  (auto_in_a_bits_user_amba_prot_readalloc),
    .io_enq_bits_user_amba_prot_writealloc (auto_in_a_bits_user_amba_prot_writealloc),
    .io_enq_bits_user_amba_prot_privileged (auto_in_a_bits_user_amba_prot_privileged),
    .io_enq_bits_user_amba_prot_secure     (auto_in_a_bits_user_amba_prot_secure),
    .io_enq_bits_user_amba_prot_fetch      (auto_in_a_bits_user_amba_prot_fetch),
    .io_enq_bits_mask                      (auto_in_a_bits_mask),
    .io_enq_bits_data                      (auto_in_a_bits_data),
    .io_deq_ready                          (auto_out_a_ready),
    .io_enq_ready                          (auto_in_a_ready),
    .io_deq_valid                          (_repeated_repeater_io_deq_valid),
    .io_deq_bits_opcode                    (_repeated_repeater_io_deq_bits_opcode),
    .io_deq_bits_param                     (auto_out_a_bits_param),
    .io_deq_bits_size                      (_repeated_repeater_io_deq_bits_size),
    .io_deq_bits_source                    (auto_out_a_bits_source),
    .io_deq_bits_address                   (_repeated_repeater_io_deq_bits_address),
    .io_deq_bits_user_amba_prot_bufferable (auto_out_a_bits_user_amba_prot_bufferable),
    .io_deq_bits_user_amba_prot_modifiable (auto_out_a_bits_user_amba_prot_modifiable),
    .io_deq_bits_user_amba_prot_readalloc  (auto_out_a_bits_user_amba_prot_readalloc),
    .io_deq_bits_user_amba_prot_writealloc (auto_out_a_bits_user_amba_prot_writealloc),
    .io_deq_bits_user_amba_prot_privileged (auto_out_a_bits_user_amba_prot_privileged),
    .io_deq_bits_user_amba_prot_secure     (auto_out_a_bits_user_amba_prot_secure),
    .io_deq_bits_user_amba_prot_fetch      (auto_out_a_bits_user_amba_prot_fetch),
    .io_deq_bits_mask                      (_repeated_repeater_io_deq_bits_mask),
    .io_deq_bits_data                      (_repeated_repeater_io_deq_bits_data),
    .io_deq_bits_corrupt                   (auto_out_a_bits_corrupt)
  );
  assign auto_in_d_valid = auto_out_d_valid & last;	// @[WidthWidget.scala:37:36, :72:29]
  assign auto_in_d_bits_opcode = auto_out_d_bits_opcode;
  assign auto_in_d_bits_size = auto_out_d_bits_size;
  assign auto_in_d_bits_source = auto_out_d_bits_source;
  assign auto_in_d_bits_denied = auto_out_d_bits_denied;
  assign auto_in_d_bits_data = {auto_out_d_bits_data, bundleIn_0_d_bits_data_masked_enable_0 ? auto_out_d_bits_data : bundleIn_0_d_bits_data_rdata_0};	// @[Cat.scala:33:92, WidthWidget.scala:58:42, :61:24, :63:88]
  assign auto_in_d_bits_corrupt = bundleIn_0_d_bits_corrupt;	// @[WidthWidget.scala:42:36]
  assign auto_out_a_valid = _repeated_repeater_io_deq_valid;	// @[Repeater.scala:35:26]
  assign auto_out_a_bits_opcode = _repeated_repeater_io_deq_bits_opcode;	// @[Repeater.scala:35:26]
  assign auto_out_a_bits_size = _repeated_repeater_io_deq_bits_size;	// @[Repeater.scala:35:26]
  assign auto_out_a_bits_address = _repeated_repeater_io_deq_bits_address;	// @[Repeater.scala:35:26]
  assign auto_out_a_bits_mask = repeat_index ? _repeated_repeater_io_deq_bits_mask[15:8] : _repeated_repeater_io_deq_bits_mask[7:0];	// @[Repeater.scala:35:26, WidthWidget.scala:121:24, :123:55, :135:53]
  assign auto_out_a_bits_data = repeat_index ? _repeated_repeater_io_deq_bits_data[127:64] : auto_in_a_bits_data[63:0];	// @[Repeater.scala:35:26, WidthWidget.scala:121:24, :132:30, :159:37, :160:31]
  assign auto_out_d_ready = x1_d_ready;	// @[WidthWidget.scala:71:29]
endmodule

