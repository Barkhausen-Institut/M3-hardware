// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module FPU_boom(
  input         clock,
                reset,
                io_req_valid,
  input  [6:0]  io_req_bits_uop_uopc,
  input  [19:0] io_req_bits_uop_imm_packed,
  input  [64:0] io_req_bits_rs1_data,
                io_req_bits_rs2_data,
                io_req_bits_rs3_data,
  input  [2:0]  io_req_bits_fcsr_rm,
  output [64:0] io_resp_bits_data,
  output        io_resp_bits_fflags_valid,
  output [4:0]  io_resp_bits_fflags_bits_flags
);

  wire        _fpmu_io_out_valid;	// @[fpu.scala:222:20]
  wire [64:0] _fpmu_io_out_bits_data;	// @[fpu.scala:222:20]
  wire [4:0]  _fpmu_io_out_bits_exc;	// @[fpu.scala:222:20]
  wire [1:0]  _fpiu_io_in_bits_fma_decoder_io_cmd;	// @[fpu.scala:199:29]
  wire        _fpiu_io_out_bits_lt;	// @[fpu.scala:213:20]
  wire [63:0] _fpiu_io_out_bits_toint;	// @[fpu.scala:213:20]
  wire [4:0]  _fpiu_io_out_bits_exc;	// @[fpu.scala:213:20]
  wire [1:0]  _sfma_io_in_bits_fma_decoder_io_cmd;	// @[fpu.scala:199:29]
  wire        _sfma_io_out_valid;	// @[fpu.scala:209:20]
  wire [64:0] _sfma_io_out_bits_data;	// @[fpu.scala:209:20]
  wire [4:0]  _sfma_io_out_bits_exc;	// @[fpu.scala:209:20]
  wire [1:0]  _dfma_io_in_bits_fma_decoder_io_cmd;	// @[fpu.scala:199:29]
  wire        _dfma_io_out_valid;	// @[fpu.scala:205:20]
  wire [64:0] _dfma_io_out_bits_data;	// @[fpu.scala:205:20]
  wire [4:0]  _dfma_io_out_bits_exc;	// @[fpu.scala:205:20]
  wire        _fp_decoder_io_sigs_ren2;	// @[fpu.scala:179:26]
  wire        _fp_decoder_io_sigs_ren3;	// @[fpu.scala:179:26]
  wire        _fp_decoder_io_sigs_swap23;	// @[fpu.scala:179:26]
  wire [1:0]  _fp_decoder_io_sigs_typeTagIn;	// @[fpu.scala:179:26]
  wire [1:0]  _fp_decoder_io_sigs_typeTagOut;	// @[fpu.scala:179:26]
  wire        _fp_decoder_io_sigs_fromint;	// @[fpu.scala:179:26]
  wire        _fp_decoder_io_sigs_toint;	// @[fpu.scala:179:26]
  wire        _fp_decoder_io_sigs_fastpipe;	// @[fpu.scala:179:26]
  wire        _fp_decoder_io_sigs_fma;	// @[fpu.scala:179:26]
  wire        _fp_decoder_io_sigs_wflags;	// @[fpu.scala:179:26]
  wire [2:0]  fpiu_io_in_bits_req_rm = (&(io_req_bits_uop_imm_packed[2:0])) ? io_req_bits_fcsr_rm : io_req_bits_uop_imm_packed[2:0];	// @[fpu.scala:182:{18,51}, util.scala:289:58]
  wire        _sfma_io_in_valid_T = io_req_valid & _fp_decoder_io_sigs_fma;	// @[fpu.scala:179:26, :206:36]
  wire        _fpmu_double_T_1 = _fp_decoder_io_sigs_typeTagOut == 2'h1;	// @[fpu.scala:179:26, :206:74]
  wire [32:0] _sfma_io_in_bits_req_in2_T_1 = {io_req_bits_rs2_data[31], io_req_bits_rs2_data[52], io_req_bits_rs2_data[30:0]} | ((&(io_req_bits_rs2_data[64:60])) ? 33'h0 : 33'hE0400000);	// @[Cat.scala:33:92, FPU.scala:326:{49,84}, :351:14, :352:14, :353:14, :366:{26,31}]
  wire        _fpiu_io_in_valid_T_2 = io_req_valid & (_fp_decoder_io_sigs_toint | _fp_decoder_io_sigs_fastpipe & _fp_decoder_io_sigs_wflags);	// @[fpu.scala:179:26, :214:{36,54,75}]
  wire [2:0]  fpiu_io_in_bits_req_in1_expOut_expCode = {io_req_bits_rs1_data[52], io_req_bits_rs1_data[30:29]};	// @[FPU.scala:270:18, :273:26, :352:14]
  wire [11:0] fpiu_io_in_bits_req_in1_expOut_commonCase = {3'h0, io_req_bits_rs1_data[52], io_req_bits_rs1_data[30:23]} + 12'h700;	// @[FPU.scala:270:18, :274:{31,50}, :275:19, :352:14]
  wire [64:0] fpiu_io_in_bits_req_in1 = _fp_decoder_io_sigs_typeTagIn[0] | (&(io_req_bits_rs1_data[64:60])) ? (_fp_decoder_io_sigs_typeTagIn[0] ? io_req_bits_rs1_data : {io_req_bits_rs1_data[31], fpiu_io_in_bits_req_in1_expOut_expCode == 3'h0 | fpiu_io_in_bits_req_in1_expOut_expCode > 3'h5 ? {io_req_bits_rs1_data[52], io_req_bits_rs1_data[30:29], fpiu_io_in_bits_req_in1_expOut_commonCase[8:0]} : fpiu_io_in_bits_req_in1_expOut_commonCase, io_req_bits_rs1_data[22:0], 29'h0}) : 65'hE008000000000000;	// @[Cat.scala:33:92, FPU.scala:269:20, :270:18, :271:38, :273:26, :274:50, :275:{10,19,27,38,69}, :326:{49,84}, :351:14, :352:14, :363:10, :366:31, fpu.scala:179:26, package.scala:32:47, :33:76]
  wire [2:0]  fpiu_io_in_bits_req_in2_expOut_expCode = {io_req_bits_rs2_data[52], io_req_bits_rs2_data[30:29]};	// @[FPU.scala:270:18, :273:26, :352:14]
  wire [11:0] fpiu_io_in_bits_req_in2_expOut_commonCase = {3'h0, io_req_bits_rs2_data[52], io_req_bits_rs2_data[30:23]} + 12'h700;	// @[FPU.scala:270:18, :274:{31,50}, :275:19, :352:14]
  wire [64:0] fpiu_io_in_bits_req_in2 = _fp_decoder_io_sigs_typeTagIn[0] | (&(io_req_bits_rs2_data[64:60])) ? (_fp_decoder_io_sigs_typeTagIn[0] ? io_req_bits_rs2_data : {io_req_bits_rs2_data[31], fpiu_io_in_bits_req_in2_expOut_expCode == 3'h0 | fpiu_io_in_bits_req_in2_expOut_expCode > 3'h5 ? {io_req_bits_rs2_data[52], io_req_bits_rs2_data[30:29], fpiu_io_in_bits_req_in2_expOut_commonCase[8:0]} : fpiu_io_in_bits_req_in2_expOut_commonCase, io_req_bits_rs2_data[22:0], 29'h0}) : 65'hE008000000000000;	// @[Cat.scala:33:92, FPU.scala:269:20, :270:18, :271:38, :273:26, :274:50, :275:{10,19,27,38,69}, :326:{49,84}, :351:14, :352:14, :363:10, :366:31, fpu.scala:179:26, package.scala:32:47, :33:76]
  reg         fpiu_out_REG;	// @[fpu.scala:216:30]
  reg         fpiu_outPipe_valid;	// @[Valid.scala:130:22]
  reg  [63:0] fpiu_outPipe_bits_toint;	// @[Reg.scala:19:16]
  reg  [4:0]  fpiu_outPipe_bits_exc;	// @[Reg.scala:19:16]
  reg         fpiu_outPipe_valid_1;	// @[Valid.scala:130:22]
  reg  [63:0] fpiu_outPipe_bits_1_toint;	// @[Reg.scala:19:16]
  reg  [4:0]  fpiu_outPipe_bits_1_exc;	// @[Reg.scala:19:16]
  reg         fpiu_outPipe_valid_2;	// @[Valid.scala:130:22]
  reg  [63:0] fpiu_outPipe_bits_2_toint;	// @[Reg.scala:19:16]
  reg  [4:0]  fpiu_outPipe_bits_2_exc;	// @[Reg.scala:19:16]
  wire        _fpmu_double_T = io_req_valid & _fp_decoder_io_sigs_fastpipe;	// @[fpu.scala:179:26, :223:36]
  reg         fpmu_double_v;	// @[Valid.scala:130:22]
  reg         fpmu_double_b;	// @[Reg.scala:19:16]
  reg         fpmu_double_outPipe_valid;	// @[Valid.scala:130:22]
  reg         fpmu_double_outPipe_bits;	// @[Reg.scala:19:16]
  reg         fpmu_double_outPipe_valid_1;	// @[Valid.scala:130:22]
  reg         fpmu_double_outPipe_bits_1;	// @[Reg.scala:19:16]
  reg         fpmu_double_outPipe_bits_2;	// @[Reg.scala:19:16]
  always @(posedge clock) begin
    fpiu_out_REG <= _fpiu_io_in_valid_T_2 & ~_fp_decoder_io_sigs_fastpipe;	// @[fpu.scala:179:26, :214:36, :216:{30,48,51}]
    if (fpiu_out_REG) begin	// @[fpu.scala:216:30]
      fpiu_outPipe_bits_toint <= _fpiu_io_out_bits_toint;	// @[Reg.scala:19:16, fpu.scala:213:20]
      fpiu_outPipe_bits_exc <= _fpiu_io_out_bits_exc;	// @[Reg.scala:19:16, fpu.scala:213:20]
    end
    if (fpiu_outPipe_valid) begin	// @[Valid.scala:130:22]
      fpiu_outPipe_bits_1_toint <= fpiu_outPipe_bits_toint;	// @[Reg.scala:19:16]
      fpiu_outPipe_bits_1_exc <= fpiu_outPipe_bits_exc;	// @[Reg.scala:19:16]
    end
    if (fpiu_outPipe_valid_1) begin	// @[Valid.scala:130:22]
      fpiu_outPipe_bits_2_toint <= fpiu_outPipe_bits_1_toint;	// @[Reg.scala:19:16]
      fpiu_outPipe_bits_2_exc <= fpiu_outPipe_bits_1_exc;	// @[Reg.scala:19:16]
    end
    if (_fpmu_double_T)	// @[fpu.scala:223:36]
      fpmu_double_b <= _fpmu_double_T_1;	// @[Reg.scala:19:16, fpu.scala:206:74]
    if (fpmu_double_v)	// @[Valid.scala:130:22]
      fpmu_double_outPipe_bits <= fpmu_double_b;	// @[Reg.scala:19:16]
    if (fpmu_double_outPipe_valid)	// @[Valid.scala:130:22]
      fpmu_double_outPipe_bits_1 <= fpmu_double_outPipe_bits;	// @[Reg.scala:19:16]
    if (fpmu_double_outPipe_valid_1)	// @[Valid.scala:130:22]
      fpmu_double_outPipe_bits_2 <= fpmu_double_outPipe_bits_1;	// @[Reg.scala:19:16]
    if (reset) begin
      fpiu_outPipe_valid <= 1'h0;	// @[Valid.scala:130:22]
      fpiu_outPipe_valid_1 <= 1'h0;	// @[Valid.scala:130:22]
      fpiu_outPipe_valid_2 <= 1'h0;	// @[Valid.scala:130:22]
      fpmu_double_v <= 1'h0;	// @[Valid.scala:130:22]
      fpmu_double_outPipe_valid <= 1'h0;	// @[Valid.scala:130:22]
      fpmu_double_outPipe_valid_1 <= 1'h0;	// @[Valid.scala:130:22]
    end
    else begin
      fpiu_outPipe_valid <= fpiu_out_REG;	// @[Valid.scala:130:22, fpu.scala:216:30]
      fpiu_outPipe_valid_1 <= fpiu_outPipe_valid;	// @[Valid.scala:130:22]
      fpiu_outPipe_valid_2 <= fpiu_outPipe_valid_1;	// @[Valid.scala:130:22]
      fpmu_double_v <= _fpmu_double_T;	// @[Valid.scala:130:22, fpu.scala:223:36]
      fpmu_double_outPipe_valid <= fpmu_double_v;	// @[Valid.scala:130:22]
      fpmu_double_outPipe_valid_1 <= fpmu_double_outPipe_valid;	// @[Valid.scala:130:22]
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    logic [31:0] _RANDOM_10;
    logic [31:0] _RANDOM_11;
    logic [31:0] _RANDOM_12;
    logic [31:0] _RANDOM_13;
    logic [31:0] _RANDOM_14;
    logic [31:0] _RANDOM_15;
    logic [31:0] _RANDOM_16;
    logic [31:0] _RANDOM_17;
    logic [31:0] _RANDOM_18;
    logic [31:0] _RANDOM_19;
    logic [31:0] _RANDOM_20;
    logic [31:0] _RANDOM_21;
    logic [31:0] _RANDOM_22;
    logic [31:0] _RANDOM_23;
    logic [31:0] _RANDOM_24;
    logic [31:0] _RANDOM_25;
    logic [31:0] _RANDOM_26;
    logic [31:0] _RANDOM_27;
    logic [31:0] _RANDOM_28;
    logic [31:0] _RANDOM_29;
    logic [31:0] _RANDOM_30;
    logic [31:0] _RANDOM_31;
    logic [31:0] _RANDOM_32;
    logic [31:0] _RANDOM_33;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        _RANDOM_10 = `RANDOM;
        _RANDOM_11 = `RANDOM;
        _RANDOM_12 = `RANDOM;
        _RANDOM_13 = `RANDOM;
        _RANDOM_14 = `RANDOM;
        _RANDOM_15 = `RANDOM;
        _RANDOM_16 = `RANDOM;
        _RANDOM_17 = `RANDOM;
        _RANDOM_18 = `RANDOM;
        _RANDOM_19 = `RANDOM;
        _RANDOM_20 = `RANDOM;
        _RANDOM_21 = `RANDOM;
        _RANDOM_22 = `RANDOM;
        _RANDOM_23 = `RANDOM;
        _RANDOM_24 = `RANDOM;
        _RANDOM_25 = `RANDOM;
        _RANDOM_26 = `RANDOM;
        _RANDOM_27 = `RANDOM;
        _RANDOM_28 = `RANDOM;
        _RANDOM_29 = `RANDOM;
        _RANDOM_30 = `RANDOM;
        _RANDOM_31 = `RANDOM;
        _RANDOM_32 = `RANDOM;
        _RANDOM_33 = `RANDOM;
        fpiu_out_REG = _RANDOM_0[0];	// @[fpu.scala:216:30]
        fpiu_outPipe_valid = _RANDOM_0[1];	// @[Valid.scala:130:22, fpu.scala:216:30]
        fpiu_outPipe_bits_toint = {_RANDOM_9[31:1], _RANDOM_10, _RANDOM_11[0]};	// @[Reg.scala:19:16]
        fpiu_outPipe_bits_exc = _RANDOM_11[5:1];	// @[Reg.scala:19:16]
        fpiu_outPipe_valid_1 = _RANDOM_11[6];	// @[Reg.scala:19:16, Valid.scala:130:22]
        fpiu_outPipe_bits_1_toint = {_RANDOM_20[31:6], _RANDOM_21, _RANDOM_22[5:0]};	// @[Reg.scala:19:16]
        fpiu_outPipe_bits_1_exc = _RANDOM_22[10:6];	// @[Reg.scala:19:16]
        fpiu_outPipe_valid_2 = _RANDOM_22[11];	// @[Reg.scala:19:16, Valid.scala:130:22]
        fpiu_outPipe_bits_2_toint = {_RANDOM_31[31:11], _RANDOM_32, _RANDOM_33[10:0]};	// @[Reg.scala:19:16]
        fpiu_outPipe_bits_2_exc = _RANDOM_33[15:11];	// @[Reg.scala:19:16]
        fpmu_double_v = _RANDOM_33[16];	// @[Reg.scala:19:16, Valid.scala:130:22]
        fpmu_double_b = _RANDOM_33[17];	// @[Reg.scala:19:16]
        fpmu_double_outPipe_valid = _RANDOM_33[18];	// @[Reg.scala:19:16, Valid.scala:130:22]
        fpmu_double_outPipe_bits = _RANDOM_33[19];	// @[Reg.scala:19:16]
        fpmu_double_outPipe_valid_1 = _RANDOM_33[20];	// @[Reg.scala:19:16, Valid.scala:130:22]
        fpmu_double_outPipe_bits_1 = _RANDOM_33[21];	// @[Reg.scala:19:16]
        fpmu_double_outPipe_bits_2 = _RANDOM_33[23];	// @[Reg.scala:19:16]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  UOPCodeFPUDecoder_boom fp_decoder (	// @[fpu.scala:179:26]
    .io_uopc            (io_req_bits_uop_uopc),
    .io_sigs_ren2       (_fp_decoder_io_sigs_ren2),
    .io_sigs_ren3       (_fp_decoder_io_sigs_ren3),
    .io_sigs_swap23     (_fp_decoder_io_sigs_swap23),
    .io_sigs_typeTagIn  (_fp_decoder_io_sigs_typeTagIn),
    .io_sigs_typeTagOut (_fp_decoder_io_sigs_typeTagOut),
    .io_sigs_fromint    (_fp_decoder_io_sigs_fromint),
    .io_sigs_toint      (_fp_decoder_io_sigs_toint),
    .io_sigs_fastpipe   (_fp_decoder_io_sigs_fastpipe),
    .io_sigs_fma        (_fp_decoder_io_sigs_fma),
    .io_sigs_wflags     (_fp_decoder_io_sigs_wflags)
  );
  FPUFMAPipe_boom dfma (	// @[fpu.scala:205:20]
    .clock             (clock),
    .reset             (reset),
    .io_in_valid       (_sfma_io_in_valid_T & _fpmu_double_T_1),	// @[fpu.scala:206:{36,51,74}]
    .io_in_bits_ren3   (_fp_decoder_io_sigs_ren3),	// @[fpu.scala:179:26]
    .io_in_bits_swap23 (_fp_decoder_io_sigs_swap23),	// @[fpu.scala:179:26]
    .io_in_bits_rm     (fpiu_io_in_bits_req_rm),	// @[fpu.scala:182:18]
    .io_in_bits_fmaCmd (_dfma_io_in_bits_fma_decoder_io_cmd),	// @[fpu.scala:199:29]
    .io_in_bits_in1    (io_req_bits_rs1_data),
    .io_in_bits_in2    (io_req_bits_rs2_data),
    .io_in_bits_in3    (_fp_decoder_io_sigs_swap23 ? io_req_bits_rs2_data : io_req_bits_rs3_data),	// @[fpu.scala:179:26, :191:13, :192:{27,37}]
    .io_out_valid      (_dfma_io_out_valid),
    .io_out_bits_data  (_dfma_io_out_bits_data),
    .io_out_bits_exc   (_dfma_io_out_bits_exc)
  );
  FMADecoder_boom dfma_io_in_bits_fma_decoder (	// @[fpu.scala:199:29]
    .io_uopc (io_req_bits_uop_uopc),
    .io_cmd  (_dfma_io_in_bits_fma_decoder_io_cmd)
  );
  FPUFMAPipe_1_boom sfma (	// @[fpu.scala:209:20]
    .clock             (clock),
    .reset             (reset),
    .io_in_valid       (_sfma_io_in_valid_T & _fp_decoder_io_sigs_typeTagOut == 2'h0),	// @[fpu.scala:179:26, :206:36, :210:{51,74}]
    .io_in_bits_ren3   (_fp_decoder_io_sigs_ren3),	// @[fpu.scala:179:26]
    .io_in_bits_swap23 (_fp_decoder_io_sigs_swap23),	// @[fpu.scala:179:26]
    .io_in_bits_rm     (fpiu_io_in_bits_req_rm),	// @[fpu.scala:182:18]
    .io_in_bits_fmaCmd (_sfma_io_in_bits_fma_decoder_io_cmd),	// @[fpu.scala:199:29]
    .io_in_bits_in1    ({32'h0, {io_req_bits_rs1_data[31], io_req_bits_rs1_data[52], io_req_bits_rs1_data[30:0]} | ((&(io_req_bits_rs1_data[64:60])) ? 33'h0 : 33'hE0400000)}),	// @[Cat.scala:33:92, FPU.scala:326:{49,84}, :351:14, :352:14, :353:14, :366:{26,31}, fpu.scala:189:13]
    .io_in_bits_in2    ({32'h0, _sfma_io_in_bits_req_in2_T_1}),	// @[FPU.scala:366:26, fpu.scala:189:13, :190:13]
    .io_in_bits_in3    ({32'h0, _fp_decoder_io_sigs_swap23 ? _sfma_io_in_bits_req_in2_T_1 : {io_req_bits_rs3_data[31], io_req_bits_rs3_data[52], io_req_bits_rs3_data[30:0]} | ((&(io_req_bits_rs3_data[64:60])) ? 33'h0 : 33'hE0400000)}),	// @[Cat.scala:33:92, FPU.scala:326:{49,84}, :351:14, :352:14, :353:14, :366:{26,31}, fpu.scala:179:26, :189:13, :191:13, :192:{27,37}]
    .io_out_valid      (_sfma_io_out_valid),
    .io_out_bits_data  (_sfma_io_out_bits_data),
    .io_out_bits_exc   (_sfma_io_out_bits_exc)
  );
  FMADecoder_boom sfma_io_in_bits_fma_decoder (	// @[fpu.scala:199:29]
    .io_uopc (io_req_bits_uop_uopc),
    .io_cmd  (_sfma_io_in_bits_fma_decoder_io_cmd)
  );
  FPToInt_boom fpiu (	// @[fpu.scala:213:20]
    .clock                 (clock),
    .io_in_valid           (_fpiu_io_in_valid_T_2),	// @[fpu.scala:214:36]
    .io_in_bits_ren2       (_fp_decoder_io_sigs_ren2),	// @[fpu.scala:179:26]
    .io_in_bits_typeTagOut (_fp_decoder_io_sigs_typeTagOut),	// @[fpu.scala:179:26]
    .io_in_bits_wflags     (_fp_decoder_io_sigs_wflags),	// @[fpu.scala:179:26]
    .io_in_bits_rm         (fpiu_io_in_bits_req_rm),	// @[fpu.scala:182:18]
    .io_in_bits_typ        (io_req_bits_uop_imm_packed[9:8]),	// @[util.scala:295:59]
    .io_in_bits_fmt        (io_req_bits_uop_uopc == 7'h46 ? 2'h0 : {1'h0, |_fp_decoder_io_sigs_typeTagIn}),	// @[fpu.scala:179:26, :194:{13,24}, :195:{27,43}, :196:15]
    .io_in_bits_in1        (fpiu_io_in_bits_req_in1),	// @[FPU.scala:363:10]
    .io_in_bits_in2        (fpiu_io_in_bits_req_in2),	// @[FPU.scala:363:10]
    .io_out_bits_lt        (_fpiu_io_out_bits_lt),
    .io_out_bits_toint     (_fpiu_io_out_bits_toint),
    .io_out_bits_exc       (_fpiu_io_out_bits_exc)
  );
  FMADecoder_boom fpiu_io_in_bits_fma_decoder (	// @[fpu.scala:199:29]
    .io_uopc (io_req_bits_uop_uopc),
    .io_cmd  (_fpiu_io_in_bits_fma_decoder_io_cmd)
  );
  FPToFP_boom fpmu (	// @[fpu.scala:222:20]
    .clock                 (clock),
    .reset                 (reset),
    .io_in_valid           (_fpmu_double_T),	// @[fpu.scala:223:36]
    .io_in_bits_ren2       (_fp_decoder_io_sigs_ren2),	// @[fpu.scala:179:26]
    .io_in_bits_typeTagOut (_fp_decoder_io_sigs_typeTagOut),	// @[fpu.scala:179:26]
    .io_in_bits_wflags     (_fp_decoder_io_sigs_wflags),	// @[fpu.scala:179:26]
    .io_in_bits_rm         (fpiu_io_in_bits_req_rm),	// @[fpu.scala:182:18]
    .io_in_bits_in1        (fpiu_io_in_bits_req_in1),	// @[FPU.scala:363:10]
    .io_in_bits_in2        (fpiu_io_in_bits_req_in2),	// @[FPU.scala:363:10]
    .io_lt                 (_fpiu_io_out_bits_lt),	// @[fpu.scala:213:20]
    .io_out_valid          (_fpmu_io_out_valid),
    .io_out_bits_data      (_fpmu_io_out_bits_data),
    .io_out_bits_exc       (_fpmu_io_out_bits_exc)
  );
  assign io_resp_bits_data = _dfma_io_out_valid ? _dfma_io_out_bits_data : _sfma_io_out_valid ? {12'hFFF, _sfma_io_out_bits_data[31], 20'hFFFFF, _sfma_io_out_bits_data[32], _sfma_io_out_bits_data[30:0]} : fpiu_outPipe_valid_2 ? {1'h0, fpiu_outPipe_bits_2_toint} : fpmu_double_outPipe_bits_2 ? _fpmu_io_out_bits_data : {12'hFFF, _fpmu_io_out_bits_data[31], 20'hFFFFF, _fpmu_io_out_bits_data[32], _fpmu_io_out_bits_data[30:0]};	// @[Cat.scala:33:92, FPU.scala:332:42, :334:8, :336:8, :337:8, Reg.scala:19:16, Valid.scala:130:22, fpu.scala:205:20, :209:20, :219:20, :222:20, :234:8, :235:8, :236:8, package.scala:33:76]
  assign io_resp_bits_fflags_valid = fpiu_outPipe_valid_2 | _fpmu_io_out_valid | _sfma_io_out_valid | _dfma_io_out_valid;	// @[Valid.scala:130:22, fpu.scala:205:20, :209:20, :222:20, :231:38]
  assign io_resp_bits_fflags_bits_flags = _dfma_io_out_valid ? _dfma_io_out_bits_exc : _sfma_io_out_valid ? _sfma_io_out_bits_exc : fpiu_outPipe_valid_2 ? fpiu_outPipe_bits_2_exc : _fpmu_io_out_bits_exc;	// @[Reg.scala:19:16, Valid.scala:130:22, fpu.scala:205:20, :209:20, :222:20, :240:8, :241:8, :242:8]
endmodule

