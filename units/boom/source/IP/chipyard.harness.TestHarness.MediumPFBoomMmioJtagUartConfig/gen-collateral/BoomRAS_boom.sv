// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module BoomRAS_boom(
  input         clock,
  input  [4:0]  io_read_idx,
  input         io_write_valid,
  input  [4:0]  io_write_idx,
  input  [39:0] io_write_addr,
  output [39:0] io_read_addr
);

  reg  [39:0]       ras_0;	// @[ras.scala:36:16]
  reg  [39:0]       ras_1;	// @[ras.scala:36:16]
  reg  [39:0]       ras_2;	// @[ras.scala:36:16]
  reg  [39:0]       ras_3;	// @[ras.scala:36:16]
  reg  [39:0]       ras_4;	// @[ras.scala:36:16]
  reg  [39:0]       ras_5;	// @[ras.scala:36:16]
  reg  [39:0]       ras_6;	// @[ras.scala:36:16]
  reg  [39:0]       ras_7;	// @[ras.scala:36:16]
  reg  [39:0]       ras_8;	// @[ras.scala:36:16]
  reg  [39:0]       ras_9;	// @[ras.scala:36:16]
  reg  [39:0]       ras_10;	// @[ras.scala:36:16]
  reg  [39:0]       ras_11;	// @[ras.scala:36:16]
  reg  [39:0]       ras_12;	// @[ras.scala:36:16]
  reg  [39:0]       ras_13;	// @[ras.scala:36:16]
  reg  [39:0]       ras_14;	// @[ras.scala:36:16]
  reg  [39:0]       ras_15;	// @[ras.scala:36:16]
  reg  [39:0]       ras_16;	// @[ras.scala:36:16]
  reg  [39:0]       ras_17;	// @[ras.scala:36:16]
  reg  [39:0]       ras_18;	// @[ras.scala:36:16]
  reg  [39:0]       ras_19;	// @[ras.scala:36:16]
  reg  [39:0]       ras_20;	// @[ras.scala:36:16]
  reg  [39:0]       ras_21;	// @[ras.scala:36:16]
  reg  [39:0]       ras_22;	// @[ras.scala:36:16]
  reg  [39:0]       ras_23;	// @[ras.scala:36:16]
  reg  [39:0]       ras_24;	// @[ras.scala:36:16]
  reg  [39:0]       ras_25;	// @[ras.scala:36:16]
  reg  [39:0]       ras_26;	// @[ras.scala:36:16]
  reg  [39:0]       ras_27;	// @[ras.scala:36:16]
  reg  [39:0]       ras_28;	// @[ras.scala:36:16]
  reg  [39:0]       ras_29;	// @[ras.scala:36:16]
  reg  [39:0]       ras_30;	// @[ras.scala:36:16]
  reg  [39:0]       ras_31;	// @[ras.scala:36:16]
  reg               io_read_addr_REG;	// @[ras.scala:38:30]
  reg  [39:0]       io_read_addr_REG_1;	// @[ras.scala:39:12]
  reg  [39:0]       io_read_addr_REG_2;	// @[ras.scala:40:12]
  wire [31:0][39:0] _GEN = {{ras_31}, {ras_30}, {ras_29}, {ras_28}, {ras_27}, {ras_26}, {ras_25}, {ras_24}, {ras_23}, {ras_22}, {ras_21}, {ras_20}, {ras_19}, {ras_18}, {ras_17}, {ras_16}, {ras_15}, {ras_14}, {ras_13}, {ras_12}, {ras_11}, {ras_10}, {ras_9}, {ras_8}, {ras_7}, {ras_6}, {ras_5}, {ras_4}, {ras_3}, {ras_2}, {ras_1}, {ras_0}};	// @[ras.scala:36:16, :40:12]
  always @(posedge clock) begin
    if (io_write_valid & io_write_idx == 5'h0)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_0 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h1)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_1 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h2)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_2 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h3)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_3 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h4)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_4 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h5)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_5 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h6)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_6 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h7)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_7 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h8)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_8 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h9)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_9 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'hA)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_10 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'hB)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_11 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'hC)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_12 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'hD)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_13 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'hE)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_14 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'hF)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_15 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h10)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_16 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h11)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_17 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h12)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_18 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h13)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_19 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h14)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_20 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h15)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_21 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h16)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_22 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h17)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_23 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h18)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_24 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h19)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_25 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h1A)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_26 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h1B)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_27 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h1C)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_28 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h1D)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_29 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & io_write_idx == 5'h1E)	// @[ras.scala:36:16, :42:25, :43:23]
      ras_30 <= io_write_addr;	// @[ras.scala:36:16]
    if (io_write_valid & (&io_write_idx))	// @[ras.scala:36:16, :42:25, :43:23]
      ras_31 <= io_write_addr;	// @[ras.scala:36:16]
    io_read_addr_REG <= io_write_valid & io_write_idx == io_read_idx;	// @[ras.scala:38:{30,46,62}]
    io_read_addr_REG_1 <= io_write_addr;	// @[ras.scala:39:12]
    io_read_addr_REG_2 <= _GEN[io_read_idx];	// @[ras.scala:40:12]
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    logic [31:0] _RANDOM_10;
    logic [31:0] _RANDOM_11;
    logic [31:0] _RANDOM_12;
    logic [31:0] _RANDOM_13;
    logic [31:0] _RANDOM_14;
    logic [31:0] _RANDOM_15;
    logic [31:0] _RANDOM_16;
    logic [31:0] _RANDOM_17;
    logic [31:0] _RANDOM_18;
    logic [31:0] _RANDOM_19;
    logic [31:0] _RANDOM_20;
    logic [31:0] _RANDOM_21;
    logic [31:0] _RANDOM_22;
    logic [31:0] _RANDOM_23;
    logic [31:0] _RANDOM_24;
    logic [31:0] _RANDOM_25;
    logic [31:0] _RANDOM_26;
    logic [31:0] _RANDOM_27;
    logic [31:0] _RANDOM_28;
    logic [31:0] _RANDOM_29;
    logic [31:0] _RANDOM_30;
    logic [31:0] _RANDOM_31;
    logic [31:0] _RANDOM_32;
    logic [31:0] _RANDOM_33;
    logic [31:0] _RANDOM_34;
    logic [31:0] _RANDOM_35;
    logic [31:0] _RANDOM_36;
    logic [31:0] _RANDOM_37;
    logic [31:0] _RANDOM_38;
    logic [31:0] _RANDOM_39;
    logic [31:0] _RANDOM_40;
    logic [31:0] _RANDOM_41;
    logic [31:0] _RANDOM_42;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        _RANDOM_10 = `RANDOM;
        _RANDOM_11 = `RANDOM;
        _RANDOM_12 = `RANDOM;
        _RANDOM_13 = `RANDOM;
        _RANDOM_14 = `RANDOM;
        _RANDOM_15 = `RANDOM;
        _RANDOM_16 = `RANDOM;
        _RANDOM_17 = `RANDOM;
        _RANDOM_18 = `RANDOM;
        _RANDOM_19 = `RANDOM;
        _RANDOM_20 = `RANDOM;
        _RANDOM_21 = `RANDOM;
        _RANDOM_22 = `RANDOM;
        _RANDOM_23 = `RANDOM;
        _RANDOM_24 = `RANDOM;
        _RANDOM_25 = `RANDOM;
        _RANDOM_26 = `RANDOM;
        _RANDOM_27 = `RANDOM;
        _RANDOM_28 = `RANDOM;
        _RANDOM_29 = `RANDOM;
        _RANDOM_30 = `RANDOM;
        _RANDOM_31 = `RANDOM;
        _RANDOM_32 = `RANDOM;
        _RANDOM_33 = `RANDOM;
        _RANDOM_34 = `RANDOM;
        _RANDOM_35 = `RANDOM;
        _RANDOM_36 = `RANDOM;
        _RANDOM_37 = `RANDOM;
        _RANDOM_38 = `RANDOM;
        _RANDOM_39 = `RANDOM;
        _RANDOM_40 = `RANDOM;
        _RANDOM_41 = `RANDOM;
        _RANDOM_42 = `RANDOM;
        ras_0 = {_RANDOM_0, _RANDOM_1[7:0]};	// @[ras.scala:36:16]
        ras_1 = {_RANDOM_1[31:8], _RANDOM_2[15:0]};	// @[ras.scala:36:16]
        ras_2 = {_RANDOM_2[31:16], _RANDOM_3[23:0]};	// @[ras.scala:36:16]
        ras_3 = {_RANDOM_3[31:24], _RANDOM_4};	// @[ras.scala:36:16]
        ras_4 = {_RANDOM_5, _RANDOM_6[7:0]};	// @[ras.scala:36:16]
        ras_5 = {_RANDOM_6[31:8], _RANDOM_7[15:0]};	// @[ras.scala:36:16]
        ras_6 = {_RANDOM_7[31:16], _RANDOM_8[23:0]};	// @[ras.scala:36:16]
        ras_7 = {_RANDOM_8[31:24], _RANDOM_9};	// @[ras.scala:36:16]
        ras_8 = {_RANDOM_10, _RANDOM_11[7:0]};	// @[ras.scala:36:16]
        ras_9 = {_RANDOM_11[31:8], _RANDOM_12[15:0]};	// @[ras.scala:36:16]
        ras_10 = {_RANDOM_12[31:16], _RANDOM_13[23:0]};	// @[ras.scala:36:16]
        ras_11 = {_RANDOM_13[31:24], _RANDOM_14};	// @[ras.scala:36:16]
        ras_12 = {_RANDOM_15, _RANDOM_16[7:0]};	// @[ras.scala:36:16]
        ras_13 = {_RANDOM_16[31:8], _RANDOM_17[15:0]};	// @[ras.scala:36:16]
        ras_14 = {_RANDOM_17[31:16], _RANDOM_18[23:0]};	// @[ras.scala:36:16]
        ras_15 = {_RANDOM_18[31:24], _RANDOM_19};	// @[ras.scala:36:16]
        ras_16 = {_RANDOM_20, _RANDOM_21[7:0]};	// @[ras.scala:36:16]
        ras_17 = {_RANDOM_21[31:8], _RANDOM_22[15:0]};	// @[ras.scala:36:16]
        ras_18 = {_RANDOM_22[31:16], _RANDOM_23[23:0]};	// @[ras.scala:36:16]
        ras_19 = {_RANDOM_23[31:24], _RANDOM_24};	// @[ras.scala:36:16]
        ras_20 = {_RANDOM_25, _RANDOM_26[7:0]};	// @[ras.scala:36:16]
        ras_21 = {_RANDOM_26[31:8], _RANDOM_27[15:0]};	// @[ras.scala:36:16]
        ras_22 = {_RANDOM_27[31:16], _RANDOM_28[23:0]};	// @[ras.scala:36:16]
        ras_23 = {_RANDOM_28[31:24], _RANDOM_29};	// @[ras.scala:36:16]
        ras_24 = {_RANDOM_30, _RANDOM_31[7:0]};	// @[ras.scala:36:16]
        ras_25 = {_RANDOM_31[31:8], _RANDOM_32[15:0]};	// @[ras.scala:36:16]
        ras_26 = {_RANDOM_32[31:16], _RANDOM_33[23:0]};	// @[ras.scala:36:16]
        ras_27 = {_RANDOM_33[31:24], _RANDOM_34};	// @[ras.scala:36:16]
        ras_28 = {_RANDOM_35, _RANDOM_36[7:0]};	// @[ras.scala:36:16]
        ras_29 = {_RANDOM_36[31:8], _RANDOM_37[15:0]};	// @[ras.scala:36:16]
        ras_30 = {_RANDOM_37[31:16], _RANDOM_38[23:0]};	// @[ras.scala:36:16]
        ras_31 = {_RANDOM_38[31:24], _RANDOM_39};	// @[ras.scala:36:16]
        io_read_addr_REG = _RANDOM_40[0];	// @[ras.scala:38:30]
        io_read_addr_REG_1 = {_RANDOM_40[31:1], _RANDOM_41[8:0]};	// @[ras.scala:38:30, :39:12]
        io_read_addr_REG_2 = {_RANDOM_41[31:9], _RANDOM_42[16:0]};	// @[ras.scala:39:12, :40:12]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_read_addr = io_read_addr_REG ? io_read_addr_REG_1 : io_read_addr_REG_2;	// @[ras.scala:38:{22,30}, :39:12, :40:12]
endmodule

