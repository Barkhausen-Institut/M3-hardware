// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module FPUUnit_boom(
  input         clock,
                reset,
                io_req_valid,
  input  [6:0]  io_req_bits_uop_uopc,
  input  [31:0] io_req_bits_uop_inst,
                io_req_bits_uop_debug_inst,
  input         io_req_bits_uop_is_rvc,
  input  [39:0] io_req_bits_uop_debug_pc,
  input  [2:0]  io_req_bits_uop_iq_type,
  input  [9:0]  io_req_bits_uop_fu_code,
  input  [3:0]  io_req_bits_uop_ctrl_br_type,
  input  [1:0]  io_req_bits_uop_ctrl_op1_sel,
  input  [2:0]  io_req_bits_uop_ctrl_op2_sel,
                io_req_bits_uop_ctrl_imm_sel,
  input  [3:0]  io_req_bits_uop_ctrl_op_fcn,
  input         io_req_bits_uop_ctrl_fcn_dw,
  input  [2:0]  io_req_bits_uop_ctrl_csr_cmd,
  input         io_req_bits_uop_ctrl_is_load,
                io_req_bits_uop_ctrl_is_sta,
                io_req_bits_uop_ctrl_is_std,
  input  [1:0]  io_req_bits_uop_iw_state,
  input         io_req_bits_uop_iw_p1_poisoned,
                io_req_bits_uop_iw_p2_poisoned,
                io_req_bits_uop_is_br,
                io_req_bits_uop_is_jalr,
                io_req_bits_uop_is_jal,
                io_req_bits_uop_is_sfb,
  input  [11:0] io_req_bits_uop_br_mask,
  input  [3:0]  io_req_bits_uop_br_tag,
  input  [4:0]  io_req_bits_uop_ftq_idx,
  input         io_req_bits_uop_edge_inst,
  input  [5:0]  io_req_bits_uop_pc_lob,
  input         io_req_bits_uop_taken,
  input  [19:0] io_req_bits_uop_imm_packed,
  input  [11:0] io_req_bits_uop_csr_addr,
  input  [5:0]  io_req_bits_uop_rob_idx,
  input  [3:0]  io_req_bits_uop_ldq_idx,
                io_req_bits_uop_stq_idx,
  input  [1:0]  io_req_bits_uop_rxq_idx,
  input  [6:0]  io_req_bits_uop_pdst,
                io_req_bits_uop_prs1,
                io_req_bits_uop_prs2,
                io_req_bits_uop_prs3,
  input  [4:0]  io_req_bits_uop_ppred,
  input         io_req_bits_uop_prs1_busy,
                io_req_bits_uop_prs2_busy,
                io_req_bits_uop_prs3_busy,
                io_req_bits_uop_ppred_busy,
  input  [6:0]  io_req_bits_uop_stale_pdst,
  input         io_req_bits_uop_exception,
  input  [63:0] io_req_bits_uop_exc_cause,
  input         io_req_bits_uop_bypassable,
  input  [4:0]  io_req_bits_uop_mem_cmd,
  input  [1:0]  io_req_bits_uop_mem_size,
  input         io_req_bits_uop_mem_signed,
                io_req_bits_uop_is_fence,
                io_req_bits_uop_is_fencei,
                io_req_bits_uop_is_amo,
                io_req_bits_uop_uses_ldq,
                io_req_bits_uop_uses_stq,
                io_req_bits_uop_is_sys_pc2epc,
                io_req_bits_uop_is_unique,
                io_req_bits_uop_flush_on_commit,
                io_req_bits_uop_ldst_is_rs1,
  input  [5:0]  io_req_bits_uop_ldst,
                io_req_bits_uop_lrs1,
                io_req_bits_uop_lrs2,
                io_req_bits_uop_lrs3,
  input         io_req_bits_uop_ldst_val,
  input  [1:0]  io_req_bits_uop_dst_rtype,
                io_req_bits_uop_lrs1_rtype,
                io_req_bits_uop_lrs2_rtype,
  input         io_req_bits_uop_frs3_en,
                io_req_bits_uop_fp_val,
                io_req_bits_uop_fp_single,
                io_req_bits_uop_xcpt_pf_if,
                io_req_bits_uop_xcpt_ae_if,
                io_req_bits_uop_xcpt_ma_if,
                io_req_bits_uop_bp_debug_if,
                io_req_bits_uop_bp_xcpt_if,
  input  [1:0]  io_req_bits_uop_debug_fsrc,
                io_req_bits_uop_debug_tsrc,
  input  [64:0] io_req_bits_rs1_data,
                io_req_bits_rs2_data,
                io_req_bits_rs3_data,
  input         io_req_bits_kill,
  input  [11:0] io_brupdate_b1_resolve_mask,
                io_brupdate_b1_mispredict_mask,
  input  [2:0]  io_fcsr_rm,
  output        io_resp_valid,
  output [6:0]  io_resp_bits_uop_uopc,
  output [31:0] io_resp_bits_uop_inst,
                io_resp_bits_uop_debug_inst,
  output        io_resp_bits_uop_is_rvc,
  output [39:0] io_resp_bits_uop_debug_pc,
  output [2:0]  io_resp_bits_uop_iq_type,
  output [9:0]  io_resp_bits_uop_fu_code,
  output [3:0]  io_resp_bits_uop_ctrl_br_type,
  output [1:0]  io_resp_bits_uop_ctrl_op1_sel,
  output [2:0]  io_resp_bits_uop_ctrl_op2_sel,
                io_resp_bits_uop_ctrl_imm_sel,
  output [3:0]  io_resp_bits_uop_ctrl_op_fcn,
  output        io_resp_bits_uop_ctrl_fcn_dw,
  output [2:0]  io_resp_bits_uop_ctrl_csr_cmd,
  output        io_resp_bits_uop_ctrl_is_load,
                io_resp_bits_uop_ctrl_is_sta,
                io_resp_bits_uop_ctrl_is_std,
  output [1:0]  io_resp_bits_uop_iw_state,
  output        io_resp_bits_uop_iw_p1_poisoned,
                io_resp_bits_uop_iw_p2_poisoned,
                io_resp_bits_uop_is_br,
                io_resp_bits_uop_is_jalr,
                io_resp_bits_uop_is_jal,
                io_resp_bits_uop_is_sfb,
  output [11:0] io_resp_bits_uop_br_mask,
  output [3:0]  io_resp_bits_uop_br_tag,
  output [4:0]  io_resp_bits_uop_ftq_idx,
  output        io_resp_bits_uop_edge_inst,
  output [5:0]  io_resp_bits_uop_pc_lob,
  output        io_resp_bits_uop_taken,
  output [19:0] io_resp_bits_uop_imm_packed,
  output [11:0] io_resp_bits_uop_csr_addr,
  output [5:0]  io_resp_bits_uop_rob_idx,
  output [3:0]  io_resp_bits_uop_ldq_idx,
                io_resp_bits_uop_stq_idx,
  output [1:0]  io_resp_bits_uop_rxq_idx,
  output [6:0]  io_resp_bits_uop_pdst,
                io_resp_bits_uop_prs1,
                io_resp_bits_uop_prs2,
                io_resp_bits_uop_prs3,
  output [4:0]  io_resp_bits_uop_ppred,
  output        io_resp_bits_uop_prs1_busy,
                io_resp_bits_uop_prs2_busy,
                io_resp_bits_uop_prs3_busy,
                io_resp_bits_uop_ppred_busy,
  output [6:0]  io_resp_bits_uop_stale_pdst,
  output        io_resp_bits_uop_exception,
  output [63:0] io_resp_bits_uop_exc_cause,
  output        io_resp_bits_uop_bypassable,
  output [4:0]  io_resp_bits_uop_mem_cmd,
  output [1:0]  io_resp_bits_uop_mem_size,
  output        io_resp_bits_uop_mem_signed,
                io_resp_bits_uop_is_fence,
                io_resp_bits_uop_is_fencei,
                io_resp_bits_uop_is_amo,
                io_resp_bits_uop_uses_ldq,
                io_resp_bits_uop_uses_stq,
                io_resp_bits_uop_is_sys_pc2epc,
                io_resp_bits_uop_is_unique,
                io_resp_bits_uop_flush_on_commit,
                io_resp_bits_uop_ldst_is_rs1,
  output [5:0]  io_resp_bits_uop_ldst,
                io_resp_bits_uop_lrs1,
                io_resp_bits_uop_lrs2,
                io_resp_bits_uop_lrs3,
  output        io_resp_bits_uop_ldst_val,
  output [1:0]  io_resp_bits_uop_dst_rtype,
                io_resp_bits_uop_lrs1_rtype,
                io_resp_bits_uop_lrs2_rtype,
  output        io_resp_bits_uop_frs3_en,
                io_resp_bits_uop_fp_val,
                io_resp_bits_uop_fp_single,
                io_resp_bits_uop_xcpt_pf_if,
                io_resp_bits_uop_xcpt_ae_if,
                io_resp_bits_uop_xcpt_ma_if,
                io_resp_bits_uop_bp_debug_if,
                io_resp_bits_uop_bp_xcpt_if,
  output [1:0]  io_resp_bits_uop_debug_fsrc,
                io_resp_bits_uop_debug_tsrc,
  output [64:0] io_resp_bits_data,
  output        io_resp_bits_fflags_valid,
  output [6:0]  io_resp_bits_fflags_bits_uop_uopc,
  output [31:0] io_resp_bits_fflags_bits_uop_inst,
                io_resp_bits_fflags_bits_uop_debug_inst,
  output        io_resp_bits_fflags_bits_uop_is_rvc,
  output [39:0] io_resp_bits_fflags_bits_uop_debug_pc,
  output [2:0]  io_resp_bits_fflags_bits_uop_iq_type,
  output [9:0]  io_resp_bits_fflags_bits_uop_fu_code,
  output [3:0]  io_resp_bits_fflags_bits_uop_ctrl_br_type,
  output [1:0]  io_resp_bits_fflags_bits_uop_ctrl_op1_sel,
  output [2:0]  io_resp_bits_fflags_bits_uop_ctrl_op2_sel,
                io_resp_bits_fflags_bits_uop_ctrl_imm_sel,
  output [3:0]  io_resp_bits_fflags_bits_uop_ctrl_op_fcn,
  output        io_resp_bits_fflags_bits_uop_ctrl_fcn_dw,
  output [2:0]  io_resp_bits_fflags_bits_uop_ctrl_csr_cmd,
  output        io_resp_bits_fflags_bits_uop_ctrl_is_load,
                io_resp_bits_fflags_bits_uop_ctrl_is_sta,
                io_resp_bits_fflags_bits_uop_ctrl_is_std,
  output [1:0]  io_resp_bits_fflags_bits_uop_iw_state,
  output        io_resp_bits_fflags_bits_uop_iw_p1_poisoned,
                io_resp_bits_fflags_bits_uop_iw_p2_poisoned,
                io_resp_bits_fflags_bits_uop_is_br,
                io_resp_bits_fflags_bits_uop_is_jalr,
                io_resp_bits_fflags_bits_uop_is_jal,
                io_resp_bits_fflags_bits_uop_is_sfb,
  output [11:0] io_resp_bits_fflags_bits_uop_br_mask,
  output [3:0]  io_resp_bits_fflags_bits_uop_br_tag,
  output [4:0]  io_resp_bits_fflags_bits_uop_ftq_idx,
  output        io_resp_bits_fflags_bits_uop_edge_inst,
  output [5:0]  io_resp_bits_fflags_bits_uop_pc_lob,
  output        io_resp_bits_fflags_bits_uop_taken,
  output [19:0] io_resp_bits_fflags_bits_uop_imm_packed,
  output [11:0] io_resp_bits_fflags_bits_uop_csr_addr,
  output [5:0]  io_resp_bits_fflags_bits_uop_rob_idx,
  output [3:0]  io_resp_bits_fflags_bits_uop_ldq_idx,
                io_resp_bits_fflags_bits_uop_stq_idx,
  output [1:0]  io_resp_bits_fflags_bits_uop_rxq_idx,
  output [6:0]  io_resp_bits_fflags_bits_uop_pdst,
                io_resp_bits_fflags_bits_uop_prs1,
                io_resp_bits_fflags_bits_uop_prs2,
                io_resp_bits_fflags_bits_uop_prs3,
  output [4:0]  io_resp_bits_fflags_bits_uop_ppred,
  output        io_resp_bits_fflags_bits_uop_prs1_busy,
                io_resp_bits_fflags_bits_uop_prs2_busy,
                io_resp_bits_fflags_bits_uop_prs3_busy,
                io_resp_bits_fflags_bits_uop_ppred_busy,
  output [6:0]  io_resp_bits_fflags_bits_uop_stale_pdst,
  output        io_resp_bits_fflags_bits_uop_exception,
  output [63:0] io_resp_bits_fflags_bits_uop_exc_cause,
  output        io_resp_bits_fflags_bits_uop_bypassable,
  output [4:0]  io_resp_bits_fflags_bits_uop_mem_cmd,
  output [1:0]  io_resp_bits_fflags_bits_uop_mem_size,
  output        io_resp_bits_fflags_bits_uop_mem_signed,
                io_resp_bits_fflags_bits_uop_is_fence,
                io_resp_bits_fflags_bits_uop_is_fencei,
                io_resp_bits_fflags_bits_uop_is_amo,
                io_resp_bits_fflags_bits_uop_uses_ldq,
                io_resp_bits_fflags_bits_uop_uses_stq,
                io_resp_bits_fflags_bits_uop_is_sys_pc2epc,
                io_resp_bits_fflags_bits_uop_is_unique,
                io_resp_bits_fflags_bits_uop_flush_on_commit,
                io_resp_bits_fflags_bits_uop_ldst_is_rs1,
  output [5:0]  io_resp_bits_fflags_bits_uop_ldst,
                io_resp_bits_fflags_bits_uop_lrs1,
                io_resp_bits_fflags_bits_uop_lrs2,
                io_resp_bits_fflags_bits_uop_lrs3,
  output        io_resp_bits_fflags_bits_uop_ldst_val,
  output [1:0]  io_resp_bits_fflags_bits_uop_dst_rtype,
                io_resp_bits_fflags_bits_uop_lrs1_rtype,
                io_resp_bits_fflags_bits_uop_lrs2_rtype,
  output        io_resp_bits_fflags_bits_uop_frs3_en,
                io_resp_bits_fflags_bits_uop_fp_val,
                io_resp_bits_fflags_bits_uop_fp_single,
                io_resp_bits_fflags_bits_uop_xcpt_pf_if,
                io_resp_bits_fflags_bits_uop_xcpt_ae_if,
                io_resp_bits_fflags_bits_uop_xcpt_ma_if,
                io_resp_bits_fflags_bits_uop_bp_debug_if,
                io_resp_bits_fflags_bits_uop_bp_xcpt_if,
  output [1:0]  io_resp_bits_fflags_bits_uop_debug_fsrc,
                io_resp_bits_fflags_bits_uop_debug_tsrc,
  output [4:0]  io_resp_bits_fflags_bits_flags
);

  reg         r_valids_0;	// @[functional-unit.scala:226:27]
  reg         r_valids_1;	// @[functional-unit.scala:226:27]
  reg         r_valids_2;	// @[functional-unit.scala:226:27]
  reg         r_valids_3;	// @[functional-unit.scala:226:27]
  reg  [6:0]  r_uops_0_uopc;	// @[functional-unit.scala:227:23]
  reg  [31:0] r_uops_0_inst;	// @[functional-unit.scala:227:23]
  reg  [31:0] r_uops_0_debug_inst;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_is_rvc;	// @[functional-unit.scala:227:23]
  reg  [39:0] r_uops_0_debug_pc;	// @[functional-unit.scala:227:23]
  reg  [2:0]  r_uops_0_iq_type;	// @[functional-unit.scala:227:23]
  reg  [9:0]  r_uops_0_fu_code;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_0_ctrl_br_type;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_0_ctrl_op1_sel;	// @[functional-unit.scala:227:23]
  reg  [2:0]  r_uops_0_ctrl_op2_sel;	// @[functional-unit.scala:227:23]
  reg  [2:0]  r_uops_0_ctrl_imm_sel;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_0_ctrl_op_fcn;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_ctrl_fcn_dw;	// @[functional-unit.scala:227:23]
  reg  [2:0]  r_uops_0_ctrl_csr_cmd;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_ctrl_is_load;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_ctrl_is_sta;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_ctrl_is_std;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_0_iw_state;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_iw_p1_poisoned;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_iw_p2_poisoned;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_is_br;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_is_jalr;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_is_jal;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_is_sfb;	// @[functional-unit.scala:227:23]
  reg  [11:0] r_uops_0_br_mask;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_0_br_tag;	// @[functional-unit.scala:227:23]
  reg  [4:0]  r_uops_0_ftq_idx;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_edge_inst;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_0_pc_lob;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_taken;	// @[functional-unit.scala:227:23]
  reg  [19:0] r_uops_0_imm_packed;	// @[functional-unit.scala:227:23]
  reg  [11:0] r_uops_0_csr_addr;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_0_rob_idx;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_0_ldq_idx;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_0_stq_idx;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_0_rxq_idx;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_0_pdst;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_0_prs1;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_0_prs2;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_0_prs3;	// @[functional-unit.scala:227:23]
  reg  [4:0]  r_uops_0_ppred;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_prs1_busy;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_prs2_busy;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_prs3_busy;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_ppred_busy;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_0_stale_pdst;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_exception;	// @[functional-unit.scala:227:23]
  reg  [63:0] r_uops_0_exc_cause;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_bypassable;	// @[functional-unit.scala:227:23]
  reg  [4:0]  r_uops_0_mem_cmd;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_0_mem_size;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_mem_signed;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_is_fence;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_is_fencei;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_is_amo;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_uses_ldq;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_uses_stq;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_is_sys_pc2epc;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_is_unique;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_flush_on_commit;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_ldst_is_rs1;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_0_ldst;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_0_lrs1;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_0_lrs2;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_0_lrs3;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_ldst_val;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_0_dst_rtype;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_0_lrs1_rtype;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_0_lrs2_rtype;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_frs3_en;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_fp_val;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_fp_single;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_xcpt_pf_if;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_xcpt_ae_if;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_xcpt_ma_if;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_bp_debug_if;	// @[functional-unit.scala:227:23]
  reg         r_uops_0_bp_xcpt_if;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_0_debug_fsrc;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_0_debug_tsrc;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_1_uopc;	// @[functional-unit.scala:227:23]
  reg  [31:0] r_uops_1_inst;	// @[functional-unit.scala:227:23]
  reg  [31:0] r_uops_1_debug_inst;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_is_rvc;	// @[functional-unit.scala:227:23]
  reg  [39:0] r_uops_1_debug_pc;	// @[functional-unit.scala:227:23]
  reg  [2:0]  r_uops_1_iq_type;	// @[functional-unit.scala:227:23]
  reg  [9:0]  r_uops_1_fu_code;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_1_ctrl_br_type;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_1_ctrl_op1_sel;	// @[functional-unit.scala:227:23]
  reg  [2:0]  r_uops_1_ctrl_op2_sel;	// @[functional-unit.scala:227:23]
  reg  [2:0]  r_uops_1_ctrl_imm_sel;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_1_ctrl_op_fcn;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_ctrl_fcn_dw;	// @[functional-unit.scala:227:23]
  reg  [2:0]  r_uops_1_ctrl_csr_cmd;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_ctrl_is_load;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_ctrl_is_sta;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_ctrl_is_std;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_1_iw_state;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_iw_p1_poisoned;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_iw_p2_poisoned;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_is_br;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_is_jalr;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_is_jal;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_is_sfb;	// @[functional-unit.scala:227:23]
  reg  [11:0] r_uops_1_br_mask;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_1_br_tag;	// @[functional-unit.scala:227:23]
  reg  [4:0]  r_uops_1_ftq_idx;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_edge_inst;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_1_pc_lob;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_taken;	// @[functional-unit.scala:227:23]
  reg  [19:0] r_uops_1_imm_packed;	// @[functional-unit.scala:227:23]
  reg  [11:0] r_uops_1_csr_addr;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_1_rob_idx;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_1_ldq_idx;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_1_stq_idx;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_1_rxq_idx;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_1_pdst;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_1_prs1;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_1_prs2;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_1_prs3;	// @[functional-unit.scala:227:23]
  reg  [4:0]  r_uops_1_ppred;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_prs1_busy;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_prs2_busy;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_prs3_busy;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_ppred_busy;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_1_stale_pdst;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_exception;	// @[functional-unit.scala:227:23]
  reg  [63:0] r_uops_1_exc_cause;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_bypassable;	// @[functional-unit.scala:227:23]
  reg  [4:0]  r_uops_1_mem_cmd;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_1_mem_size;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_mem_signed;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_is_fence;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_is_fencei;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_is_amo;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_uses_ldq;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_uses_stq;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_is_sys_pc2epc;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_is_unique;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_flush_on_commit;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_ldst_is_rs1;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_1_ldst;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_1_lrs1;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_1_lrs2;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_1_lrs3;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_ldst_val;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_1_dst_rtype;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_1_lrs1_rtype;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_1_lrs2_rtype;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_frs3_en;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_fp_val;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_fp_single;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_xcpt_pf_if;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_xcpt_ae_if;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_xcpt_ma_if;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_bp_debug_if;	// @[functional-unit.scala:227:23]
  reg         r_uops_1_bp_xcpt_if;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_1_debug_fsrc;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_1_debug_tsrc;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_2_uopc;	// @[functional-unit.scala:227:23]
  reg  [31:0] r_uops_2_inst;	// @[functional-unit.scala:227:23]
  reg  [31:0] r_uops_2_debug_inst;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_is_rvc;	// @[functional-unit.scala:227:23]
  reg  [39:0] r_uops_2_debug_pc;	// @[functional-unit.scala:227:23]
  reg  [2:0]  r_uops_2_iq_type;	// @[functional-unit.scala:227:23]
  reg  [9:0]  r_uops_2_fu_code;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_2_ctrl_br_type;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_2_ctrl_op1_sel;	// @[functional-unit.scala:227:23]
  reg  [2:0]  r_uops_2_ctrl_op2_sel;	// @[functional-unit.scala:227:23]
  reg  [2:0]  r_uops_2_ctrl_imm_sel;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_2_ctrl_op_fcn;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_ctrl_fcn_dw;	// @[functional-unit.scala:227:23]
  reg  [2:0]  r_uops_2_ctrl_csr_cmd;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_ctrl_is_load;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_ctrl_is_sta;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_ctrl_is_std;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_2_iw_state;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_iw_p1_poisoned;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_iw_p2_poisoned;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_is_br;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_is_jalr;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_is_jal;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_is_sfb;	// @[functional-unit.scala:227:23]
  reg  [11:0] r_uops_2_br_mask;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_2_br_tag;	// @[functional-unit.scala:227:23]
  reg  [4:0]  r_uops_2_ftq_idx;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_edge_inst;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_2_pc_lob;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_taken;	// @[functional-unit.scala:227:23]
  reg  [19:0] r_uops_2_imm_packed;	// @[functional-unit.scala:227:23]
  reg  [11:0] r_uops_2_csr_addr;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_2_rob_idx;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_2_ldq_idx;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_2_stq_idx;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_2_rxq_idx;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_2_pdst;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_2_prs1;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_2_prs2;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_2_prs3;	// @[functional-unit.scala:227:23]
  reg  [4:0]  r_uops_2_ppred;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_prs1_busy;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_prs2_busy;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_prs3_busy;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_ppred_busy;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_2_stale_pdst;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_exception;	// @[functional-unit.scala:227:23]
  reg  [63:0] r_uops_2_exc_cause;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_bypassable;	// @[functional-unit.scala:227:23]
  reg  [4:0]  r_uops_2_mem_cmd;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_2_mem_size;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_mem_signed;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_is_fence;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_is_fencei;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_is_amo;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_uses_ldq;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_uses_stq;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_is_sys_pc2epc;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_is_unique;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_flush_on_commit;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_ldst_is_rs1;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_2_ldst;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_2_lrs1;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_2_lrs2;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_2_lrs3;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_ldst_val;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_2_dst_rtype;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_2_lrs1_rtype;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_2_lrs2_rtype;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_frs3_en;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_fp_val;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_fp_single;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_xcpt_pf_if;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_xcpt_ae_if;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_xcpt_ma_if;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_bp_debug_if;	// @[functional-unit.scala:227:23]
  reg         r_uops_2_bp_xcpt_if;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_2_debug_fsrc;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_2_debug_tsrc;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_3_uopc;	// @[functional-unit.scala:227:23]
  reg  [31:0] r_uops_3_inst;	// @[functional-unit.scala:227:23]
  reg  [31:0] r_uops_3_debug_inst;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_is_rvc;	// @[functional-unit.scala:227:23]
  reg  [39:0] r_uops_3_debug_pc;	// @[functional-unit.scala:227:23]
  reg  [2:0]  r_uops_3_iq_type;	// @[functional-unit.scala:227:23]
  reg  [9:0]  r_uops_3_fu_code;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_3_ctrl_br_type;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_3_ctrl_op1_sel;	// @[functional-unit.scala:227:23]
  reg  [2:0]  r_uops_3_ctrl_op2_sel;	// @[functional-unit.scala:227:23]
  reg  [2:0]  r_uops_3_ctrl_imm_sel;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_3_ctrl_op_fcn;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_ctrl_fcn_dw;	// @[functional-unit.scala:227:23]
  reg  [2:0]  r_uops_3_ctrl_csr_cmd;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_ctrl_is_load;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_ctrl_is_sta;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_ctrl_is_std;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_3_iw_state;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_iw_p1_poisoned;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_iw_p2_poisoned;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_is_br;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_is_jalr;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_is_jal;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_is_sfb;	// @[functional-unit.scala:227:23]
  reg  [11:0] r_uops_3_br_mask;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_3_br_tag;	// @[functional-unit.scala:227:23]
  reg  [4:0]  r_uops_3_ftq_idx;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_edge_inst;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_3_pc_lob;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_taken;	// @[functional-unit.scala:227:23]
  reg  [19:0] r_uops_3_imm_packed;	// @[functional-unit.scala:227:23]
  reg  [11:0] r_uops_3_csr_addr;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_3_rob_idx;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_3_ldq_idx;	// @[functional-unit.scala:227:23]
  reg  [3:0]  r_uops_3_stq_idx;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_3_rxq_idx;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_3_pdst;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_3_prs1;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_3_prs2;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_3_prs3;	// @[functional-unit.scala:227:23]
  reg  [4:0]  r_uops_3_ppred;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_prs1_busy;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_prs2_busy;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_prs3_busy;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_ppred_busy;	// @[functional-unit.scala:227:23]
  reg  [6:0]  r_uops_3_stale_pdst;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_exception;	// @[functional-unit.scala:227:23]
  reg  [63:0] r_uops_3_exc_cause;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_bypassable;	// @[functional-unit.scala:227:23]
  reg  [4:0]  r_uops_3_mem_cmd;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_3_mem_size;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_mem_signed;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_is_fence;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_is_fencei;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_is_amo;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_uses_ldq;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_uses_stq;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_is_sys_pc2epc;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_is_unique;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_flush_on_commit;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_ldst_is_rs1;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_3_ldst;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_3_lrs1;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_3_lrs2;	// @[functional-unit.scala:227:23]
  reg  [5:0]  r_uops_3_lrs3;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_ldst_val;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_3_dst_rtype;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_3_lrs1_rtype;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_3_lrs2_rtype;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_frs3_en;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_fp_val;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_fp_single;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_xcpt_pf_if;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_xcpt_ae_if;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_xcpt_ma_if;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_bp_debug_if;	// @[functional-unit.scala:227:23]
  reg         r_uops_3_bp_xcpt_if;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_3_debug_fsrc;	// @[functional-unit.scala:227:23]
  reg  [1:0]  r_uops_3_debug_tsrc;	// @[functional-unit.scala:227:23]
  wire [11:0] _io_resp_bits_uop_br_mask_output = r_uops_3_br_mask & ~io_brupdate_b1_resolve_mask;	// @[functional-unit.scala:227:23, util.scala:85:{25,27}]
  always @(posedge clock) begin
    if (reset) begin
      r_valids_0 <= 1'h0;	// @[functional-unit.scala:226:27]
      r_valids_1 <= 1'h0;	// @[functional-unit.scala:226:27]
      r_valids_2 <= 1'h0;	// @[functional-unit.scala:226:27]
      r_valids_3 <= 1'h0;	// @[functional-unit.scala:226:27]
    end
    else begin
      r_valids_0 <= io_req_valid & (io_brupdate_b1_mispredict_mask & io_req_bits_uop_br_mask) == 12'h0 & ~io_req_bits_kill;	// @[functional-unit.scala:226:27, :230:{84,87}, util.scala:118:{51,59}]
      r_valids_1 <= r_valids_0 & (io_brupdate_b1_mispredict_mask & r_uops_0_br_mask) == 12'h0 & ~io_req_bits_kill;	// @[functional-unit.scala:226:27, :227:23, :230:87, :236:83, util.scala:118:{51,59}]
      r_valids_2 <= r_valids_1 & (io_brupdate_b1_mispredict_mask & r_uops_1_br_mask) == 12'h0 & ~io_req_bits_kill;	// @[functional-unit.scala:226:27, :227:23, :230:87, :236:83, util.scala:118:{51,59}]
      r_valids_3 <= r_valids_2 & (io_brupdate_b1_mispredict_mask & r_uops_2_br_mask) == 12'h0 & ~io_req_bits_kill;	// @[functional-unit.scala:226:27, :227:23, :230:87, :236:83, util.scala:118:{51,59}]
    end
    r_uops_0_uopc <= io_req_bits_uop_uopc;	// @[functional-unit.scala:227:23]
    r_uops_0_inst <= io_req_bits_uop_inst;	// @[functional-unit.scala:227:23]
    r_uops_0_debug_inst <= io_req_bits_uop_debug_inst;	// @[functional-unit.scala:227:23]
    r_uops_0_is_rvc <= io_req_bits_uop_is_rvc;	// @[functional-unit.scala:227:23]
    r_uops_0_debug_pc <= io_req_bits_uop_debug_pc;	// @[functional-unit.scala:227:23]
    r_uops_0_iq_type <= io_req_bits_uop_iq_type;	// @[functional-unit.scala:227:23]
    r_uops_0_fu_code <= io_req_bits_uop_fu_code;	// @[functional-unit.scala:227:23]
    r_uops_0_ctrl_br_type <= io_req_bits_uop_ctrl_br_type;	// @[functional-unit.scala:227:23]
    r_uops_0_ctrl_op1_sel <= io_req_bits_uop_ctrl_op1_sel;	// @[functional-unit.scala:227:23]
    r_uops_0_ctrl_op2_sel <= io_req_bits_uop_ctrl_op2_sel;	// @[functional-unit.scala:227:23]
    r_uops_0_ctrl_imm_sel <= io_req_bits_uop_ctrl_imm_sel;	// @[functional-unit.scala:227:23]
    r_uops_0_ctrl_op_fcn <= io_req_bits_uop_ctrl_op_fcn;	// @[functional-unit.scala:227:23]
    r_uops_0_ctrl_fcn_dw <= io_req_bits_uop_ctrl_fcn_dw;	// @[functional-unit.scala:227:23]
    r_uops_0_ctrl_csr_cmd <= io_req_bits_uop_ctrl_csr_cmd;	// @[functional-unit.scala:227:23]
    r_uops_0_ctrl_is_load <= io_req_bits_uop_ctrl_is_load;	// @[functional-unit.scala:227:23]
    r_uops_0_ctrl_is_sta <= io_req_bits_uop_ctrl_is_sta;	// @[functional-unit.scala:227:23]
    r_uops_0_ctrl_is_std <= io_req_bits_uop_ctrl_is_std;	// @[functional-unit.scala:227:23]
    r_uops_0_iw_state <= io_req_bits_uop_iw_state;	// @[functional-unit.scala:227:23]
    r_uops_0_iw_p1_poisoned <= io_req_bits_uop_iw_p1_poisoned;	// @[functional-unit.scala:227:23]
    r_uops_0_iw_p2_poisoned <= io_req_bits_uop_iw_p2_poisoned;	// @[functional-unit.scala:227:23]
    r_uops_0_is_br <= io_req_bits_uop_is_br;	// @[functional-unit.scala:227:23]
    r_uops_0_is_jalr <= io_req_bits_uop_is_jalr;	// @[functional-unit.scala:227:23]
    r_uops_0_is_jal <= io_req_bits_uop_is_jal;	// @[functional-unit.scala:227:23]
    r_uops_0_is_sfb <= io_req_bits_uop_is_sfb;	// @[functional-unit.scala:227:23]
    r_uops_0_br_mask <= io_req_bits_uop_br_mask & ~io_brupdate_b1_resolve_mask;	// @[functional-unit.scala:227:23, util.scala:85:{25,27}]
    r_uops_0_br_tag <= io_req_bits_uop_br_tag;	// @[functional-unit.scala:227:23]
    r_uops_0_ftq_idx <= io_req_bits_uop_ftq_idx;	// @[functional-unit.scala:227:23]
    r_uops_0_edge_inst <= io_req_bits_uop_edge_inst;	// @[functional-unit.scala:227:23]
    r_uops_0_pc_lob <= io_req_bits_uop_pc_lob;	// @[functional-unit.scala:227:23]
    r_uops_0_taken <= io_req_bits_uop_taken;	// @[functional-unit.scala:227:23]
    r_uops_0_imm_packed <= io_req_bits_uop_imm_packed;	// @[functional-unit.scala:227:23]
    r_uops_0_csr_addr <= io_req_bits_uop_csr_addr;	// @[functional-unit.scala:227:23]
    r_uops_0_rob_idx <= io_req_bits_uop_rob_idx;	// @[functional-unit.scala:227:23]
    r_uops_0_ldq_idx <= io_req_bits_uop_ldq_idx;	// @[functional-unit.scala:227:23]
    r_uops_0_stq_idx <= io_req_bits_uop_stq_idx;	// @[functional-unit.scala:227:23]
    r_uops_0_rxq_idx <= io_req_bits_uop_rxq_idx;	// @[functional-unit.scala:227:23]
    r_uops_0_pdst <= io_req_bits_uop_pdst;	// @[functional-unit.scala:227:23]
    r_uops_0_prs1 <= io_req_bits_uop_prs1;	// @[functional-unit.scala:227:23]
    r_uops_0_prs2 <= io_req_bits_uop_prs2;	// @[functional-unit.scala:227:23]
    r_uops_0_prs3 <= io_req_bits_uop_prs3;	// @[functional-unit.scala:227:23]
    r_uops_0_ppred <= io_req_bits_uop_ppred;	// @[functional-unit.scala:227:23]
    r_uops_0_prs1_busy <= io_req_bits_uop_prs1_busy;	// @[functional-unit.scala:227:23]
    r_uops_0_prs2_busy <= io_req_bits_uop_prs2_busy;	// @[functional-unit.scala:227:23]
    r_uops_0_prs3_busy <= io_req_bits_uop_prs3_busy;	// @[functional-unit.scala:227:23]
    r_uops_0_ppred_busy <= io_req_bits_uop_ppred_busy;	// @[functional-unit.scala:227:23]
    r_uops_0_stale_pdst <= io_req_bits_uop_stale_pdst;	// @[functional-unit.scala:227:23]
    r_uops_0_exception <= io_req_bits_uop_exception;	// @[functional-unit.scala:227:23]
    r_uops_0_exc_cause <= io_req_bits_uop_exc_cause;	// @[functional-unit.scala:227:23]
    r_uops_0_bypassable <= io_req_bits_uop_bypassable;	// @[functional-unit.scala:227:23]
    r_uops_0_mem_cmd <= io_req_bits_uop_mem_cmd;	// @[functional-unit.scala:227:23]
    r_uops_0_mem_size <= io_req_bits_uop_mem_size;	// @[functional-unit.scala:227:23]
    r_uops_0_mem_signed <= io_req_bits_uop_mem_signed;	// @[functional-unit.scala:227:23]
    r_uops_0_is_fence <= io_req_bits_uop_is_fence;	// @[functional-unit.scala:227:23]
    r_uops_0_is_fencei <= io_req_bits_uop_is_fencei;	// @[functional-unit.scala:227:23]
    r_uops_0_is_amo <= io_req_bits_uop_is_amo;	// @[functional-unit.scala:227:23]
    r_uops_0_uses_ldq <= io_req_bits_uop_uses_ldq;	// @[functional-unit.scala:227:23]
    r_uops_0_uses_stq <= io_req_bits_uop_uses_stq;	// @[functional-unit.scala:227:23]
    r_uops_0_is_sys_pc2epc <= io_req_bits_uop_is_sys_pc2epc;	// @[functional-unit.scala:227:23]
    r_uops_0_is_unique <= io_req_bits_uop_is_unique;	// @[functional-unit.scala:227:23]
    r_uops_0_flush_on_commit <= io_req_bits_uop_flush_on_commit;	// @[functional-unit.scala:227:23]
    r_uops_0_ldst_is_rs1 <= io_req_bits_uop_ldst_is_rs1;	// @[functional-unit.scala:227:23]
    r_uops_0_ldst <= io_req_bits_uop_ldst;	// @[functional-unit.scala:227:23]
    r_uops_0_lrs1 <= io_req_bits_uop_lrs1;	// @[functional-unit.scala:227:23]
    r_uops_0_lrs2 <= io_req_bits_uop_lrs2;	// @[functional-unit.scala:227:23]
    r_uops_0_lrs3 <= io_req_bits_uop_lrs3;	// @[functional-unit.scala:227:23]
    r_uops_0_ldst_val <= io_req_bits_uop_ldst_val;	// @[functional-unit.scala:227:23]
    r_uops_0_dst_rtype <= io_req_bits_uop_dst_rtype;	// @[functional-unit.scala:227:23]
    r_uops_0_lrs1_rtype <= io_req_bits_uop_lrs1_rtype;	// @[functional-unit.scala:227:23]
    r_uops_0_lrs2_rtype <= io_req_bits_uop_lrs2_rtype;	// @[functional-unit.scala:227:23]
    r_uops_0_frs3_en <= io_req_bits_uop_frs3_en;	// @[functional-unit.scala:227:23]
    r_uops_0_fp_val <= io_req_bits_uop_fp_val;	// @[functional-unit.scala:227:23]
    r_uops_0_fp_single <= io_req_bits_uop_fp_single;	// @[functional-unit.scala:227:23]
    r_uops_0_xcpt_pf_if <= io_req_bits_uop_xcpt_pf_if;	// @[functional-unit.scala:227:23]
    r_uops_0_xcpt_ae_if <= io_req_bits_uop_xcpt_ae_if;	// @[functional-unit.scala:227:23]
    r_uops_0_xcpt_ma_if <= io_req_bits_uop_xcpt_ma_if;	// @[functional-unit.scala:227:23]
    r_uops_0_bp_debug_if <= io_req_bits_uop_bp_debug_if;	// @[functional-unit.scala:227:23]
    r_uops_0_bp_xcpt_if <= io_req_bits_uop_bp_xcpt_if;	// @[functional-unit.scala:227:23]
    r_uops_0_debug_fsrc <= io_req_bits_uop_debug_fsrc;	// @[functional-unit.scala:227:23]
    r_uops_0_debug_tsrc <= io_req_bits_uop_debug_tsrc;	// @[functional-unit.scala:227:23]
    r_uops_1_uopc <= r_uops_0_uopc;	// @[functional-unit.scala:227:23]
    r_uops_1_inst <= r_uops_0_inst;	// @[functional-unit.scala:227:23]
    r_uops_1_debug_inst <= r_uops_0_debug_inst;	// @[functional-unit.scala:227:23]
    r_uops_1_is_rvc <= r_uops_0_is_rvc;	// @[functional-unit.scala:227:23]
    r_uops_1_debug_pc <= r_uops_0_debug_pc;	// @[functional-unit.scala:227:23]
    r_uops_1_iq_type <= r_uops_0_iq_type;	// @[functional-unit.scala:227:23]
    r_uops_1_fu_code <= r_uops_0_fu_code;	// @[functional-unit.scala:227:23]
    r_uops_1_ctrl_br_type <= r_uops_0_ctrl_br_type;	// @[functional-unit.scala:227:23]
    r_uops_1_ctrl_op1_sel <= r_uops_0_ctrl_op1_sel;	// @[functional-unit.scala:227:23]
    r_uops_1_ctrl_op2_sel <= r_uops_0_ctrl_op2_sel;	// @[functional-unit.scala:227:23]
    r_uops_1_ctrl_imm_sel <= r_uops_0_ctrl_imm_sel;	// @[functional-unit.scala:227:23]
    r_uops_1_ctrl_op_fcn <= r_uops_0_ctrl_op_fcn;	// @[functional-unit.scala:227:23]
    r_uops_1_ctrl_fcn_dw <= r_uops_0_ctrl_fcn_dw;	// @[functional-unit.scala:227:23]
    r_uops_1_ctrl_csr_cmd <= r_uops_0_ctrl_csr_cmd;	// @[functional-unit.scala:227:23]
    r_uops_1_ctrl_is_load <= r_uops_0_ctrl_is_load;	// @[functional-unit.scala:227:23]
    r_uops_1_ctrl_is_sta <= r_uops_0_ctrl_is_sta;	// @[functional-unit.scala:227:23]
    r_uops_1_ctrl_is_std <= r_uops_0_ctrl_is_std;	// @[functional-unit.scala:227:23]
    r_uops_1_iw_state <= r_uops_0_iw_state;	// @[functional-unit.scala:227:23]
    r_uops_1_iw_p1_poisoned <= r_uops_0_iw_p1_poisoned;	// @[functional-unit.scala:227:23]
    r_uops_1_iw_p2_poisoned <= r_uops_0_iw_p2_poisoned;	// @[functional-unit.scala:227:23]
    r_uops_1_is_br <= r_uops_0_is_br;	// @[functional-unit.scala:227:23]
    r_uops_1_is_jalr <= r_uops_0_is_jalr;	// @[functional-unit.scala:227:23]
    r_uops_1_is_jal <= r_uops_0_is_jal;	// @[functional-unit.scala:227:23]
    r_uops_1_is_sfb <= r_uops_0_is_sfb;	// @[functional-unit.scala:227:23]
    r_uops_1_br_mask <= r_uops_0_br_mask & ~io_brupdate_b1_resolve_mask;	// @[functional-unit.scala:227:23, util.scala:85:{25,27}]
    r_uops_1_br_tag <= r_uops_0_br_tag;	// @[functional-unit.scala:227:23]
    r_uops_1_ftq_idx <= r_uops_0_ftq_idx;	// @[functional-unit.scala:227:23]
    r_uops_1_edge_inst <= r_uops_0_edge_inst;	// @[functional-unit.scala:227:23]
    r_uops_1_pc_lob <= r_uops_0_pc_lob;	// @[functional-unit.scala:227:23]
    r_uops_1_taken <= r_uops_0_taken;	// @[functional-unit.scala:227:23]
    r_uops_1_imm_packed <= r_uops_0_imm_packed;	// @[functional-unit.scala:227:23]
    r_uops_1_csr_addr <= r_uops_0_csr_addr;	// @[functional-unit.scala:227:23]
    r_uops_1_rob_idx <= r_uops_0_rob_idx;	// @[functional-unit.scala:227:23]
    r_uops_1_ldq_idx <= r_uops_0_ldq_idx;	// @[functional-unit.scala:227:23]
    r_uops_1_stq_idx <= r_uops_0_stq_idx;	// @[functional-unit.scala:227:23]
    r_uops_1_rxq_idx <= r_uops_0_rxq_idx;	// @[functional-unit.scala:227:23]
    r_uops_1_pdst <= r_uops_0_pdst;	// @[functional-unit.scala:227:23]
    r_uops_1_prs1 <= r_uops_0_prs1;	// @[functional-unit.scala:227:23]
    r_uops_1_prs2 <= r_uops_0_prs2;	// @[functional-unit.scala:227:23]
    r_uops_1_prs3 <= r_uops_0_prs3;	// @[functional-unit.scala:227:23]
    r_uops_1_ppred <= r_uops_0_ppred;	// @[functional-unit.scala:227:23]
    r_uops_1_prs1_busy <= r_uops_0_prs1_busy;	// @[functional-unit.scala:227:23]
    r_uops_1_prs2_busy <= r_uops_0_prs2_busy;	// @[functional-unit.scala:227:23]
    r_uops_1_prs3_busy <= r_uops_0_prs3_busy;	// @[functional-unit.scala:227:23]
    r_uops_1_ppred_busy <= r_uops_0_ppred_busy;	// @[functional-unit.scala:227:23]
    r_uops_1_stale_pdst <= r_uops_0_stale_pdst;	// @[functional-unit.scala:227:23]
    r_uops_1_exception <= r_uops_0_exception;	// @[functional-unit.scala:227:23]
    r_uops_1_exc_cause <= r_uops_0_exc_cause;	// @[functional-unit.scala:227:23]
    r_uops_1_bypassable <= r_uops_0_bypassable;	// @[functional-unit.scala:227:23]
    r_uops_1_mem_cmd <= r_uops_0_mem_cmd;	// @[functional-unit.scala:227:23]
    r_uops_1_mem_size <= r_uops_0_mem_size;	// @[functional-unit.scala:227:23]
    r_uops_1_mem_signed <= r_uops_0_mem_signed;	// @[functional-unit.scala:227:23]
    r_uops_1_is_fence <= r_uops_0_is_fence;	// @[functional-unit.scala:227:23]
    r_uops_1_is_fencei <= r_uops_0_is_fencei;	// @[functional-unit.scala:227:23]
    r_uops_1_is_amo <= r_uops_0_is_amo;	// @[functional-unit.scala:227:23]
    r_uops_1_uses_ldq <= r_uops_0_uses_ldq;	// @[functional-unit.scala:227:23]
    r_uops_1_uses_stq <= r_uops_0_uses_stq;	// @[functional-unit.scala:227:23]
    r_uops_1_is_sys_pc2epc <= r_uops_0_is_sys_pc2epc;	// @[functional-unit.scala:227:23]
    r_uops_1_is_unique <= r_uops_0_is_unique;	// @[functional-unit.scala:227:23]
    r_uops_1_flush_on_commit <= r_uops_0_flush_on_commit;	// @[functional-unit.scala:227:23]
    r_uops_1_ldst_is_rs1 <= r_uops_0_ldst_is_rs1;	// @[functional-unit.scala:227:23]
    r_uops_1_ldst <= r_uops_0_ldst;	// @[functional-unit.scala:227:23]
    r_uops_1_lrs1 <= r_uops_0_lrs1;	// @[functional-unit.scala:227:23]
    r_uops_1_lrs2 <= r_uops_0_lrs2;	// @[functional-unit.scala:227:23]
    r_uops_1_lrs3 <= r_uops_0_lrs3;	// @[functional-unit.scala:227:23]
    r_uops_1_ldst_val <= r_uops_0_ldst_val;	// @[functional-unit.scala:227:23]
    r_uops_1_dst_rtype <= r_uops_0_dst_rtype;	// @[functional-unit.scala:227:23]
    r_uops_1_lrs1_rtype <= r_uops_0_lrs1_rtype;	// @[functional-unit.scala:227:23]
    r_uops_1_lrs2_rtype <= r_uops_0_lrs2_rtype;	// @[functional-unit.scala:227:23]
    r_uops_1_frs3_en <= r_uops_0_frs3_en;	// @[functional-unit.scala:227:23]
    r_uops_1_fp_val <= r_uops_0_fp_val;	// @[functional-unit.scala:227:23]
    r_uops_1_fp_single <= r_uops_0_fp_single;	// @[functional-unit.scala:227:23]
    r_uops_1_xcpt_pf_if <= r_uops_0_xcpt_pf_if;	// @[functional-unit.scala:227:23]
    r_uops_1_xcpt_ae_if <= r_uops_0_xcpt_ae_if;	// @[functional-unit.scala:227:23]
    r_uops_1_xcpt_ma_if <= r_uops_0_xcpt_ma_if;	// @[functional-unit.scala:227:23]
    r_uops_1_bp_debug_if <= r_uops_0_bp_debug_if;	// @[functional-unit.scala:227:23]
    r_uops_1_bp_xcpt_if <= r_uops_0_bp_xcpt_if;	// @[functional-unit.scala:227:23]
    r_uops_1_debug_fsrc <= r_uops_0_debug_fsrc;	// @[functional-unit.scala:227:23]
    r_uops_1_debug_tsrc <= r_uops_0_debug_tsrc;	// @[functional-unit.scala:227:23]
    r_uops_2_uopc <= r_uops_1_uopc;	// @[functional-unit.scala:227:23]
    r_uops_2_inst <= r_uops_1_inst;	// @[functional-unit.scala:227:23]
    r_uops_2_debug_inst <= r_uops_1_debug_inst;	// @[functional-unit.scala:227:23]
    r_uops_2_is_rvc <= r_uops_1_is_rvc;	// @[functional-unit.scala:227:23]
    r_uops_2_debug_pc <= r_uops_1_debug_pc;	// @[functional-unit.scala:227:23]
    r_uops_2_iq_type <= r_uops_1_iq_type;	// @[functional-unit.scala:227:23]
    r_uops_2_fu_code <= r_uops_1_fu_code;	// @[functional-unit.scala:227:23]
    r_uops_2_ctrl_br_type <= r_uops_1_ctrl_br_type;	// @[functional-unit.scala:227:23]
    r_uops_2_ctrl_op1_sel <= r_uops_1_ctrl_op1_sel;	// @[functional-unit.scala:227:23]
    r_uops_2_ctrl_op2_sel <= r_uops_1_ctrl_op2_sel;	// @[functional-unit.scala:227:23]
    r_uops_2_ctrl_imm_sel <= r_uops_1_ctrl_imm_sel;	// @[functional-unit.scala:227:23]
    r_uops_2_ctrl_op_fcn <= r_uops_1_ctrl_op_fcn;	// @[functional-unit.scala:227:23]
    r_uops_2_ctrl_fcn_dw <= r_uops_1_ctrl_fcn_dw;	// @[functional-unit.scala:227:23]
    r_uops_2_ctrl_csr_cmd <= r_uops_1_ctrl_csr_cmd;	// @[functional-unit.scala:227:23]
    r_uops_2_ctrl_is_load <= r_uops_1_ctrl_is_load;	// @[functional-unit.scala:227:23]
    r_uops_2_ctrl_is_sta <= r_uops_1_ctrl_is_sta;	// @[functional-unit.scala:227:23]
    r_uops_2_ctrl_is_std <= r_uops_1_ctrl_is_std;	// @[functional-unit.scala:227:23]
    r_uops_2_iw_state <= r_uops_1_iw_state;	// @[functional-unit.scala:227:23]
    r_uops_2_iw_p1_poisoned <= r_uops_1_iw_p1_poisoned;	// @[functional-unit.scala:227:23]
    r_uops_2_iw_p2_poisoned <= r_uops_1_iw_p2_poisoned;	// @[functional-unit.scala:227:23]
    r_uops_2_is_br <= r_uops_1_is_br;	// @[functional-unit.scala:227:23]
    r_uops_2_is_jalr <= r_uops_1_is_jalr;	// @[functional-unit.scala:227:23]
    r_uops_2_is_jal <= r_uops_1_is_jal;	// @[functional-unit.scala:227:23]
    r_uops_2_is_sfb <= r_uops_1_is_sfb;	// @[functional-unit.scala:227:23]
    r_uops_2_br_mask <= r_uops_1_br_mask & ~io_brupdate_b1_resolve_mask;	// @[functional-unit.scala:227:23, util.scala:85:{25,27}]
    r_uops_2_br_tag <= r_uops_1_br_tag;	// @[functional-unit.scala:227:23]
    r_uops_2_ftq_idx <= r_uops_1_ftq_idx;	// @[functional-unit.scala:227:23]
    r_uops_2_edge_inst <= r_uops_1_edge_inst;	// @[functional-unit.scala:227:23]
    r_uops_2_pc_lob <= r_uops_1_pc_lob;	// @[functional-unit.scala:227:23]
    r_uops_2_taken <= r_uops_1_taken;	// @[functional-unit.scala:227:23]
    r_uops_2_imm_packed <= r_uops_1_imm_packed;	// @[functional-unit.scala:227:23]
    r_uops_2_csr_addr <= r_uops_1_csr_addr;	// @[functional-unit.scala:227:23]
    r_uops_2_rob_idx <= r_uops_1_rob_idx;	// @[functional-unit.scala:227:23]
    r_uops_2_ldq_idx <= r_uops_1_ldq_idx;	// @[functional-unit.scala:227:23]
    r_uops_2_stq_idx <= r_uops_1_stq_idx;	// @[functional-unit.scala:227:23]
    r_uops_2_rxq_idx <= r_uops_1_rxq_idx;	// @[functional-unit.scala:227:23]
    r_uops_2_pdst <= r_uops_1_pdst;	// @[functional-unit.scala:227:23]
    r_uops_2_prs1 <= r_uops_1_prs1;	// @[functional-unit.scala:227:23]
    r_uops_2_prs2 <= r_uops_1_prs2;	// @[functional-unit.scala:227:23]
    r_uops_2_prs3 <= r_uops_1_prs3;	// @[functional-unit.scala:227:23]
    r_uops_2_ppred <= r_uops_1_ppred;	// @[functional-unit.scala:227:23]
    r_uops_2_prs1_busy <= r_uops_1_prs1_busy;	// @[functional-unit.scala:227:23]
    r_uops_2_prs2_busy <= r_uops_1_prs2_busy;	// @[functional-unit.scala:227:23]
    r_uops_2_prs3_busy <= r_uops_1_prs3_busy;	// @[functional-unit.scala:227:23]
    r_uops_2_ppred_busy <= r_uops_1_ppred_busy;	// @[functional-unit.scala:227:23]
    r_uops_2_stale_pdst <= r_uops_1_stale_pdst;	// @[functional-unit.scala:227:23]
    r_uops_2_exception <= r_uops_1_exception;	// @[functional-unit.scala:227:23]
    r_uops_2_exc_cause <= r_uops_1_exc_cause;	// @[functional-unit.scala:227:23]
    r_uops_2_bypassable <= r_uops_1_bypassable;	// @[functional-unit.scala:227:23]
    r_uops_2_mem_cmd <= r_uops_1_mem_cmd;	// @[functional-unit.scala:227:23]
    r_uops_2_mem_size <= r_uops_1_mem_size;	// @[functional-unit.scala:227:23]
    r_uops_2_mem_signed <= r_uops_1_mem_signed;	// @[functional-unit.scala:227:23]
    r_uops_2_is_fence <= r_uops_1_is_fence;	// @[functional-unit.scala:227:23]
    r_uops_2_is_fencei <= r_uops_1_is_fencei;	// @[functional-unit.scala:227:23]
    r_uops_2_is_amo <= r_uops_1_is_amo;	// @[functional-unit.scala:227:23]
    r_uops_2_uses_ldq <= r_uops_1_uses_ldq;	// @[functional-unit.scala:227:23]
    r_uops_2_uses_stq <= r_uops_1_uses_stq;	// @[functional-unit.scala:227:23]
    r_uops_2_is_sys_pc2epc <= r_uops_1_is_sys_pc2epc;	// @[functional-unit.scala:227:23]
    r_uops_2_is_unique <= r_uops_1_is_unique;	// @[functional-unit.scala:227:23]
    r_uops_2_flush_on_commit <= r_uops_1_flush_on_commit;	// @[functional-unit.scala:227:23]
    r_uops_2_ldst_is_rs1 <= r_uops_1_ldst_is_rs1;	// @[functional-unit.scala:227:23]
    r_uops_2_ldst <= r_uops_1_ldst;	// @[functional-unit.scala:227:23]
    r_uops_2_lrs1 <= r_uops_1_lrs1;	// @[functional-unit.scala:227:23]
    r_uops_2_lrs2 <= r_uops_1_lrs2;	// @[functional-unit.scala:227:23]
    r_uops_2_lrs3 <= r_uops_1_lrs3;	// @[functional-unit.scala:227:23]
    r_uops_2_ldst_val <= r_uops_1_ldst_val;	// @[functional-unit.scala:227:23]
    r_uops_2_dst_rtype <= r_uops_1_dst_rtype;	// @[functional-unit.scala:227:23]
    r_uops_2_lrs1_rtype <= r_uops_1_lrs1_rtype;	// @[functional-unit.scala:227:23]
    r_uops_2_lrs2_rtype <= r_uops_1_lrs2_rtype;	// @[functional-unit.scala:227:23]
    r_uops_2_frs3_en <= r_uops_1_frs3_en;	// @[functional-unit.scala:227:23]
    r_uops_2_fp_val <= r_uops_1_fp_val;	// @[functional-unit.scala:227:23]
    r_uops_2_fp_single <= r_uops_1_fp_single;	// @[functional-unit.scala:227:23]
    r_uops_2_xcpt_pf_if <= r_uops_1_xcpt_pf_if;	// @[functional-unit.scala:227:23]
    r_uops_2_xcpt_ae_if <= r_uops_1_xcpt_ae_if;	// @[functional-unit.scala:227:23]
    r_uops_2_xcpt_ma_if <= r_uops_1_xcpt_ma_if;	// @[functional-unit.scala:227:23]
    r_uops_2_bp_debug_if <= r_uops_1_bp_debug_if;	// @[functional-unit.scala:227:23]
    r_uops_2_bp_xcpt_if <= r_uops_1_bp_xcpt_if;	// @[functional-unit.scala:227:23]
    r_uops_2_debug_fsrc <= r_uops_1_debug_fsrc;	// @[functional-unit.scala:227:23]
    r_uops_2_debug_tsrc <= r_uops_1_debug_tsrc;	// @[functional-unit.scala:227:23]
    r_uops_3_uopc <= r_uops_2_uopc;	// @[functional-unit.scala:227:23]
    r_uops_3_inst <= r_uops_2_inst;	// @[functional-unit.scala:227:23]
    r_uops_3_debug_inst <= r_uops_2_debug_inst;	// @[functional-unit.scala:227:23]
    r_uops_3_is_rvc <= r_uops_2_is_rvc;	// @[functional-unit.scala:227:23]
    r_uops_3_debug_pc <= r_uops_2_debug_pc;	// @[functional-unit.scala:227:23]
    r_uops_3_iq_type <= r_uops_2_iq_type;	// @[functional-unit.scala:227:23]
    r_uops_3_fu_code <= r_uops_2_fu_code;	// @[functional-unit.scala:227:23]
    r_uops_3_ctrl_br_type <= r_uops_2_ctrl_br_type;	// @[functional-unit.scala:227:23]
    r_uops_3_ctrl_op1_sel <= r_uops_2_ctrl_op1_sel;	// @[functional-unit.scala:227:23]
    r_uops_3_ctrl_op2_sel <= r_uops_2_ctrl_op2_sel;	// @[functional-unit.scala:227:23]
    r_uops_3_ctrl_imm_sel <= r_uops_2_ctrl_imm_sel;	// @[functional-unit.scala:227:23]
    r_uops_3_ctrl_op_fcn <= r_uops_2_ctrl_op_fcn;	// @[functional-unit.scala:227:23]
    r_uops_3_ctrl_fcn_dw <= r_uops_2_ctrl_fcn_dw;	// @[functional-unit.scala:227:23]
    r_uops_3_ctrl_csr_cmd <= r_uops_2_ctrl_csr_cmd;	// @[functional-unit.scala:227:23]
    r_uops_3_ctrl_is_load <= r_uops_2_ctrl_is_load;	// @[functional-unit.scala:227:23]
    r_uops_3_ctrl_is_sta <= r_uops_2_ctrl_is_sta;	// @[functional-unit.scala:227:23]
    r_uops_3_ctrl_is_std <= r_uops_2_ctrl_is_std;	// @[functional-unit.scala:227:23]
    r_uops_3_iw_state <= r_uops_2_iw_state;	// @[functional-unit.scala:227:23]
    r_uops_3_iw_p1_poisoned <= r_uops_2_iw_p1_poisoned;	// @[functional-unit.scala:227:23]
    r_uops_3_iw_p2_poisoned <= r_uops_2_iw_p2_poisoned;	// @[functional-unit.scala:227:23]
    r_uops_3_is_br <= r_uops_2_is_br;	// @[functional-unit.scala:227:23]
    r_uops_3_is_jalr <= r_uops_2_is_jalr;	// @[functional-unit.scala:227:23]
    r_uops_3_is_jal <= r_uops_2_is_jal;	// @[functional-unit.scala:227:23]
    r_uops_3_is_sfb <= r_uops_2_is_sfb;	// @[functional-unit.scala:227:23]
    r_uops_3_br_mask <= r_uops_2_br_mask & ~io_brupdate_b1_resolve_mask;	// @[functional-unit.scala:227:23, util.scala:85:{25,27}]
    r_uops_3_br_tag <= r_uops_2_br_tag;	// @[functional-unit.scala:227:23]
    r_uops_3_ftq_idx <= r_uops_2_ftq_idx;	// @[functional-unit.scala:227:23]
    r_uops_3_edge_inst <= r_uops_2_edge_inst;	// @[functional-unit.scala:227:23]
    r_uops_3_pc_lob <= r_uops_2_pc_lob;	// @[functional-unit.scala:227:23]
    r_uops_3_taken <= r_uops_2_taken;	// @[functional-unit.scala:227:23]
    r_uops_3_imm_packed <= r_uops_2_imm_packed;	// @[functional-unit.scala:227:23]
    r_uops_3_csr_addr <= r_uops_2_csr_addr;	// @[functional-unit.scala:227:23]
    r_uops_3_rob_idx <= r_uops_2_rob_idx;	// @[functional-unit.scala:227:23]
    r_uops_3_ldq_idx <= r_uops_2_ldq_idx;	// @[functional-unit.scala:227:23]
    r_uops_3_stq_idx <= r_uops_2_stq_idx;	// @[functional-unit.scala:227:23]
    r_uops_3_rxq_idx <= r_uops_2_rxq_idx;	// @[functional-unit.scala:227:23]
    r_uops_3_pdst <= r_uops_2_pdst;	// @[functional-unit.scala:227:23]
    r_uops_3_prs1 <= r_uops_2_prs1;	// @[functional-unit.scala:227:23]
    r_uops_3_prs2 <= r_uops_2_prs2;	// @[functional-unit.scala:227:23]
    r_uops_3_prs3 <= r_uops_2_prs3;	// @[functional-unit.scala:227:23]
    r_uops_3_ppred <= r_uops_2_ppred;	// @[functional-unit.scala:227:23]
    r_uops_3_prs1_busy <= r_uops_2_prs1_busy;	// @[functional-unit.scala:227:23]
    r_uops_3_prs2_busy <= r_uops_2_prs2_busy;	// @[functional-unit.scala:227:23]
    r_uops_3_prs3_busy <= r_uops_2_prs3_busy;	// @[functional-unit.scala:227:23]
    r_uops_3_ppred_busy <= r_uops_2_ppred_busy;	// @[functional-unit.scala:227:23]
    r_uops_3_stale_pdst <= r_uops_2_stale_pdst;	// @[functional-unit.scala:227:23]
    r_uops_3_exception <= r_uops_2_exception;	// @[functional-unit.scala:227:23]
    r_uops_3_exc_cause <= r_uops_2_exc_cause;	// @[functional-unit.scala:227:23]
    r_uops_3_bypassable <= r_uops_2_bypassable;	// @[functional-unit.scala:227:23]
    r_uops_3_mem_cmd <= r_uops_2_mem_cmd;	// @[functional-unit.scala:227:23]
    r_uops_3_mem_size <= r_uops_2_mem_size;	// @[functional-unit.scala:227:23]
    r_uops_3_mem_signed <= r_uops_2_mem_signed;	// @[functional-unit.scala:227:23]
    r_uops_3_is_fence <= r_uops_2_is_fence;	// @[functional-unit.scala:227:23]
    r_uops_3_is_fencei <= r_uops_2_is_fencei;	// @[functional-unit.scala:227:23]
    r_uops_3_is_amo <= r_uops_2_is_amo;	// @[functional-unit.scala:227:23]
    r_uops_3_uses_ldq <= r_uops_2_uses_ldq;	// @[functional-unit.scala:227:23]
    r_uops_3_uses_stq <= r_uops_2_uses_stq;	// @[functional-unit.scala:227:23]
    r_uops_3_is_sys_pc2epc <= r_uops_2_is_sys_pc2epc;	// @[functional-unit.scala:227:23]
    r_uops_3_is_unique <= r_uops_2_is_unique;	// @[functional-unit.scala:227:23]
    r_uops_3_flush_on_commit <= r_uops_2_flush_on_commit;	// @[functional-unit.scala:227:23]
    r_uops_3_ldst_is_rs1 <= r_uops_2_ldst_is_rs1;	// @[functional-unit.scala:227:23]
    r_uops_3_ldst <= r_uops_2_ldst;	// @[functional-unit.scala:227:23]
    r_uops_3_lrs1 <= r_uops_2_lrs1;	// @[functional-unit.scala:227:23]
    r_uops_3_lrs2 <= r_uops_2_lrs2;	// @[functional-unit.scala:227:23]
    r_uops_3_lrs3 <= r_uops_2_lrs3;	// @[functional-unit.scala:227:23]
    r_uops_3_ldst_val <= r_uops_2_ldst_val;	// @[functional-unit.scala:227:23]
    r_uops_3_dst_rtype <= r_uops_2_dst_rtype;	// @[functional-unit.scala:227:23]
    r_uops_3_lrs1_rtype <= r_uops_2_lrs1_rtype;	// @[functional-unit.scala:227:23]
    r_uops_3_lrs2_rtype <= r_uops_2_lrs2_rtype;	// @[functional-unit.scala:227:23]
    r_uops_3_frs3_en <= r_uops_2_frs3_en;	// @[functional-unit.scala:227:23]
    r_uops_3_fp_val <= r_uops_2_fp_val;	// @[functional-unit.scala:227:23]
    r_uops_3_fp_single <= r_uops_2_fp_single;	// @[functional-unit.scala:227:23]
    r_uops_3_xcpt_pf_if <= r_uops_2_xcpt_pf_if;	// @[functional-unit.scala:227:23]
    r_uops_3_xcpt_ae_if <= r_uops_2_xcpt_ae_if;	// @[functional-unit.scala:227:23]
    r_uops_3_xcpt_ma_if <= r_uops_2_xcpt_ma_if;	// @[functional-unit.scala:227:23]
    r_uops_3_bp_debug_if <= r_uops_2_bp_debug_if;	// @[functional-unit.scala:227:23]
    r_uops_3_bp_xcpt_if <= r_uops_2_bp_xcpt_if;	// @[functional-unit.scala:227:23]
    r_uops_3_debug_fsrc <= r_uops_2_debug_fsrc;	// @[functional-unit.scala:227:23]
    r_uops_3_debug_tsrc <= r_uops_2_debug_tsrc;	// @[functional-unit.scala:227:23]
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    logic [31:0] _RANDOM_10;
    logic [31:0] _RANDOM_11;
    logic [31:0] _RANDOM_12;
    logic [31:0] _RANDOM_13;
    logic [31:0] _RANDOM_14;
    logic [31:0] _RANDOM_15;
    logic [31:0] _RANDOM_16;
    logic [31:0] _RANDOM_17;
    logic [31:0] _RANDOM_18;
    logic [31:0] _RANDOM_19;
    logic [31:0] _RANDOM_20;
    logic [31:0] _RANDOM_21;
    logic [31:0] _RANDOM_22;
    logic [31:0] _RANDOM_23;
    logic [31:0] _RANDOM_24;
    logic [31:0] _RANDOM_25;
    logic [31:0] _RANDOM_26;
    logic [31:0] _RANDOM_27;
    logic [31:0] _RANDOM_28;
    logic [31:0] _RANDOM_29;
    logic [31:0] _RANDOM_30;
    logic [31:0] _RANDOM_31;
    logic [31:0] _RANDOM_32;
    logic [31:0] _RANDOM_33;
    logic [31:0] _RANDOM_34;
    logic [31:0] _RANDOM_35;
    logic [31:0] _RANDOM_36;
    logic [31:0] _RANDOM_37;
    logic [31:0] _RANDOM_38;
    logic [31:0] _RANDOM_39;
    logic [31:0] _RANDOM_40;
    logic [31:0] _RANDOM_41;
    logic [31:0] _RANDOM_42;
    logic [31:0] _RANDOM_43;
    logic [31:0] _RANDOM_44;
    logic [31:0] _RANDOM_45;
    logic [31:0] _RANDOM_46;
    logic [31:0] _RANDOM_47;
    logic [31:0] _RANDOM_48;
    logic [31:0] _RANDOM_49;
    logic [31:0] _RANDOM_50;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        _RANDOM_10 = `RANDOM;
        _RANDOM_11 = `RANDOM;
        _RANDOM_12 = `RANDOM;
        _RANDOM_13 = `RANDOM;
        _RANDOM_14 = `RANDOM;
        _RANDOM_15 = `RANDOM;
        _RANDOM_16 = `RANDOM;
        _RANDOM_17 = `RANDOM;
        _RANDOM_18 = `RANDOM;
        _RANDOM_19 = `RANDOM;
        _RANDOM_20 = `RANDOM;
        _RANDOM_21 = `RANDOM;
        _RANDOM_22 = `RANDOM;
        _RANDOM_23 = `RANDOM;
        _RANDOM_24 = `RANDOM;
        _RANDOM_25 = `RANDOM;
        _RANDOM_26 = `RANDOM;
        _RANDOM_27 = `RANDOM;
        _RANDOM_28 = `RANDOM;
        _RANDOM_29 = `RANDOM;
        _RANDOM_30 = `RANDOM;
        _RANDOM_31 = `RANDOM;
        _RANDOM_32 = `RANDOM;
        _RANDOM_33 = `RANDOM;
        _RANDOM_34 = `RANDOM;
        _RANDOM_35 = `RANDOM;
        _RANDOM_36 = `RANDOM;
        _RANDOM_37 = `RANDOM;
        _RANDOM_38 = `RANDOM;
        _RANDOM_39 = `RANDOM;
        _RANDOM_40 = `RANDOM;
        _RANDOM_41 = `RANDOM;
        _RANDOM_42 = `RANDOM;
        _RANDOM_43 = `RANDOM;
        _RANDOM_44 = `RANDOM;
        _RANDOM_45 = `RANDOM;
        _RANDOM_46 = `RANDOM;
        _RANDOM_47 = `RANDOM;
        _RANDOM_48 = `RANDOM;
        _RANDOM_49 = `RANDOM;
        _RANDOM_50 = `RANDOM;
        r_valids_0 = _RANDOM_0[0];	// @[functional-unit.scala:226:27]
        r_valids_1 = _RANDOM_0[1];	// @[functional-unit.scala:226:27]
        r_valids_2 = _RANDOM_0[2];	// @[functional-unit.scala:226:27]
        r_valids_3 = _RANDOM_0[3];	// @[functional-unit.scala:226:27]
        r_uops_0_uopc = _RANDOM_0[10:4];	// @[functional-unit.scala:226:27, :227:23]
        r_uops_0_inst = {_RANDOM_0[31:11], _RANDOM_1[10:0]};	// @[functional-unit.scala:226:27, :227:23]
        r_uops_0_debug_inst = {_RANDOM_1[31:11], _RANDOM_2[10:0]};	// @[functional-unit.scala:227:23]
        r_uops_0_is_rvc = _RANDOM_2[11];	// @[functional-unit.scala:227:23]
        r_uops_0_debug_pc = {_RANDOM_2[31:12], _RANDOM_3[19:0]};	// @[functional-unit.scala:227:23]
        r_uops_0_iq_type = _RANDOM_3[22:20];	// @[functional-unit.scala:227:23]
        r_uops_0_fu_code = {_RANDOM_3[31:23], _RANDOM_4[0]};	// @[functional-unit.scala:227:23]
        r_uops_0_ctrl_br_type = _RANDOM_4[4:1];	// @[functional-unit.scala:227:23]
        r_uops_0_ctrl_op1_sel = _RANDOM_4[6:5];	// @[functional-unit.scala:227:23]
        r_uops_0_ctrl_op2_sel = _RANDOM_4[9:7];	// @[functional-unit.scala:227:23]
        r_uops_0_ctrl_imm_sel = _RANDOM_4[12:10];	// @[functional-unit.scala:227:23]
        r_uops_0_ctrl_op_fcn = _RANDOM_4[16:13];	// @[functional-unit.scala:227:23]
        r_uops_0_ctrl_fcn_dw = _RANDOM_4[17];	// @[functional-unit.scala:227:23]
        r_uops_0_ctrl_csr_cmd = _RANDOM_4[20:18];	// @[functional-unit.scala:227:23]
        r_uops_0_ctrl_is_load = _RANDOM_4[21];	// @[functional-unit.scala:227:23]
        r_uops_0_ctrl_is_sta = _RANDOM_4[22];	// @[functional-unit.scala:227:23]
        r_uops_0_ctrl_is_std = _RANDOM_4[23];	// @[functional-unit.scala:227:23]
        r_uops_0_iw_state = _RANDOM_4[25:24];	// @[functional-unit.scala:227:23]
        r_uops_0_iw_p1_poisoned = _RANDOM_4[26];	// @[functional-unit.scala:227:23]
        r_uops_0_iw_p2_poisoned = _RANDOM_4[27];	// @[functional-unit.scala:227:23]
        r_uops_0_is_br = _RANDOM_4[28];	// @[functional-unit.scala:227:23]
        r_uops_0_is_jalr = _RANDOM_4[29];	// @[functional-unit.scala:227:23]
        r_uops_0_is_jal = _RANDOM_4[30];	// @[functional-unit.scala:227:23]
        r_uops_0_is_sfb = _RANDOM_4[31];	// @[functional-unit.scala:227:23]
        r_uops_0_br_mask = _RANDOM_5[11:0];	// @[functional-unit.scala:227:23]
        r_uops_0_br_tag = _RANDOM_5[15:12];	// @[functional-unit.scala:227:23]
        r_uops_0_ftq_idx = _RANDOM_5[20:16];	// @[functional-unit.scala:227:23]
        r_uops_0_edge_inst = _RANDOM_5[21];	// @[functional-unit.scala:227:23]
        r_uops_0_pc_lob = _RANDOM_5[27:22];	// @[functional-unit.scala:227:23]
        r_uops_0_taken = _RANDOM_5[28];	// @[functional-unit.scala:227:23]
        r_uops_0_imm_packed = {_RANDOM_5[31:29], _RANDOM_6[16:0]};	// @[functional-unit.scala:227:23]
        r_uops_0_csr_addr = _RANDOM_6[28:17];	// @[functional-unit.scala:227:23]
        r_uops_0_rob_idx = {_RANDOM_6[31:29], _RANDOM_7[2:0]};	// @[functional-unit.scala:227:23]
        r_uops_0_ldq_idx = _RANDOM_7[6:3];	// @[functional-unit.scala:227:23]
        r_uops_0_stq_idx = _RANDOM_7[10:7];	// @[functional-unit.scala:227:23]
        r_uops_0_rxq_idx = _RANDOM_7[12:11];	// @[functional-unit.scala:227:23]
        r_uops_0_pdst = _RANDOM_7[19:13];	// @[functional-unit.scala:227:23]
        r_uops_0_prs1 = _RANDOM_7[26:20];	// @[functional-unit.scala:227:23]
        r_uops_0_prs2 = {_RANDOM_7[31:27], _RANDOM_8[1:0]};	// @[functional-unit.scala:227:23]
        r_uops_0_prs3 = _RANDOM_8[8:2];	// @[functional-unit.scala:227:23]
        r_uops_0_ppred = _RANDOM_8[13:9];	// @[functional-unit.scala:227:23]
        r_uops_0_prs1_busy = _RANDOM_8[14];	// @[functional-unit.scala:227:23]
        r_uops_0_prs2_busy = _RANDOM_8[15];	// @[functional-unit.scala:227:23]
        r_uops_0_prs3_busy = _RANDOM_8[16];	// @[functional-unit.scala:227:23]
        r_uops_0_ppred_busy = _RANDOM_8[17];	// @[functional-unit.scala:227:23]
        r_uops_0_stale_pdst = _RANDOM_8[24:18];	// @[functional-unit.scala:227:23]
        r_uops_0_exception = _RANDOM_8[25];	// @[functional-unit.scala:227:23]
        r_uops_0_exc_cause = {_RANDOM_8[31:26], _RANDOM_9, _RANDOM_10[25:0]};	// @[functional-unit.scala:227:23]
        r_uops_0_bypassable = _RANDOM_10[26];	// @[functional-unit.scala:227:23]
        r_uops_0_mem_cmd = _RANDOM_10[31:27];	// @[functional-unit.scala:227:23]
        r_uops_0_mem_size = _RANDOM_11[1:0];	// @[functional-unit.scala:227:23]
        r_uops_0_mem_signed = _RANDOM_11[2];	// @[functional-unit.scala:227:23]
        r_uops_0_is_fence = _RANDOM_11[3];	// @[functional-unit.scala:227:23]
        r_uops_0_is_fencei = _RANDOM_11[4];	// @[functional-unit.scala:227:23]
        r_uops_0_is_amo = _RANDOM_11[5];	// @[functional-unit.scala:227:23]
        r_uops_0_uses_ldq = _RANDOM_11[6];	// @[functional-unit.scala:227:23]
        r_uops_0_uses_stq = _RANDOM_11[7];	// @[functional-unit.scala:227:23]
        r_uops_0_is_sys_pc2epc = _RANDOM_11[8];	// @[functional-unit.scala:227:23]
        r_uops_0_is_unique = _RANDOM_11[9];	// @[functional-unit.scala:227:23]
        r_uops_0_flush_on_commit = _RANDOM_11[10];	// @[functional-unit.scala:227:23]
        r_uops_0_ldst_is_rs1 = _RANDOM_11[11];	// @[functional-unit.scala:227:23]
        r_uops_0_ldst = _RANDOM_11[17:12];	// @[functional-unit.scala:227:23]
        r_uops_0_lrs1 = _RANDOM_11[23:18];	// @[functional-unit.scala:227:23]
        r_uops_0_lrs2 = _RANDOM_11[29:24];	// @[functional-unit.scala:227:23]
        r_uops_0_lrs3 = {_RANDOM_11[31:30], _RANDOM_12[3:0]};	// @[functional-unit.scala:227:23]
        r_uops_0_ldst_val = _RANDOM_12[4];	// @[functional-unit.scala:227:23]
        r_uops_0_dst_rtype = _RANDOM_12[6:5];	// @[functional-unit.scala:227:23]
        r_uops_0_lrs1_rtype = _RANDOM_12[8:7];	// @[functional-unit.scala:227:23]
        r_uops_0_lrs2_rtype = _RANDOM_12[10:9];	// @[functional-unit.scala:227:23]
        r_uops_0_frs3_en = _RANDOM_12[11];	// @[functional-unit.scala:227:23]
        r_uops_0_fp_val = _RANDOM_12[12];	// @[functional-unit.scala:227:23]
        r_uops_0_fp_single = _RANDOM_12[13];	// @[functional-unit.scala:227:23]
        r_uops_0_xcpt_pf_if = _RANDOM_12[14];	// @[functional-unit.scala:227:23]
        r_uops_0_xcpt_ae_if = _RANDOM_12[15];	// @[functional-unit.scala:227:23]
        r_uops_0_xcpt_ma_if = _RANDOM_12[16];	// @[functional-unit.scala:227:23]
        r_uops_0_bp_debug_if = _RANDOM_12[17];	// @[functional-unit.scala:227:23]
        r_uops_0_bp_xcpt_if = _RANDOM_12[18];	// @[functional-unit.scala:227:23]
        r_uops_0_debug_fsrc = _RANDOM_12[20:19];	// @[functional-unit.scala:227:23]
        r_uops_0_debug_tsrc = _RANDOM_12[22:21];	// @[functional-unit.scala:227:23]
        r_uops_1_uopc = _RANDOM_12[29:23];	// @[functional-unit.scala:227:23]
        r_uops_1_inst = {_RANDOM_12[31:30], _RANDOM_13[29:0]};	// @[functional-unit.scala:227:23]
        r_uops_1_debug_inst = {_RANDOM_13[31:30], _RANDOM_14[29:0]};	// @[functional-unit.scala:227:23]
        r_uops_1_is_rvc = _RANDOM_14[30];	// @[functional-unit.scala:227:23]
        r_uops_1_debug_pc = {_RANDOM_14[31], _RANDOM_15, _RANDOM_16[6:0]};	// @[functional-unit.scala:227:23]
        r_uops_1_iq_type = _RANDOM_16[9:7];	// @[functional-unit.scala:227:23]
        r_uops_1_fu_code = _RANDOM_16[19:10];	// @[functional-unit.scala:227:23]
        r_uops_1_ctrl_br_type = _RANDOM_16[23:20];	// @[functional-unit.scala:227:23]
        r_uops_1_ctrl_op1_sel = _RANDOM_16[25:24];	// @[functional-unit.scala:227:23]
        r_uops_1_ctrl_op2_sel = _RANDOM_16[28:26];	// @[functional-unit.scala:227:23]
        r_uops_1_ctrl_imm_sel = _RANDOM_16[31:29];	// @[functional-unit.scala:227:23]
        r_uops_1_ctrl_op_fcn = _RANDOM_17[3:0];	// @[functional-unit.scala:227:23]
        r_uops_1_ctrl_fcn_dw = _RANDOM_17[4];	// @[functional-unit.scala:227:23]
        r_uops_1_ctrl_csr_cmd = _RANDOM_17[7:5];	// @[functional-unit.scala:227:23]
        r_uops_1_ctrl_is_load = _RANDOM_17[8];	// @[functional-unit.scala:227:23]
        r_uops_1_ctrl_is_sta = _RANDOM_17[9];	// @[functional-unit.scala:227:23]
        r_uops_1_ctrl_is_std = _RANDOM_17[10];	// @[functional-unit.scala:227:23]
        r_uops_1_iw_state = _RANDOM_17[12:11];	// @[functional-unit.scala:227:23]
        r_uops_1_iw_p1_poisoned = _RANDOM_17[13];	// @[functional-unit.scala:227:23]
        r_uops_1_iw_p2_poisoned = _RANDOM_17[14];	// @[functional-unit.scala:227:23]
        r_uops_1_is_br = _RANDOM_17[15];	// @[functional-unit.scala:227:23]
        r_uops_1_is_jalr = _RANDOM_17[16];	// @[functional-unit.scala:227:23]
        r_uops_1_is_jal = _RANDOM_17[17];	// @[functional-unit.scala:227:23]
        r_uops_1_is_sfb = _RANDOM_17[18];	// @[functional-unit.scala:227:23]
        r_uops_1_br_mask = _RANDOM_17[30:19];	// @[functional-unit.scala:227:23]
        r_uops_1_br_tag = {_RANDOM_17[31], _RANDOM_18[2:0]};	// @[functional-unit.scala:227:23]
        r_uops_1_ftq_idx = _RANDOM_18[7:3];	// @[functional-unit.scala:227:23]
        r_uops_1_edge_inst = _RANDOM_18[8];	// @[functional-unit.scala:227:23]
        r_uops_1_pc_lob = _RANDOM_18[14:9];	// @[functional-unit.scala:227:23]
        r_uops_1_taken = _RANDOM_18[15];	// @[functional-unit.scala:227:23]
        r_uops_1_imm_packed = {_RANDOM_18[31:16], _RANDOM_19[3:0]};	// @[functional-unit.scala:227:23]
        r_uops_1_csr_addr = _RANDOM_19[15:4];	// @[functional-unit.scala:227:23]
        r_uops_1_rob_idx = _RANDOM_19[21:16];	// @[functional-unit.scala:227:23]
        r_uops_1_ldq_idx = _RANDOM_19[25:22];	// @[functional-unit.scala:227:23]
        r_uops_1_stq_idx = _RANDOM_19[29:26];	// @[functional-unit.scala:227:23]
        r_uops_1_rxq_idx = _RANDOM_19[31:30];	// @[functional-unit.scala:227:23]
        r_uops_1_pdst = _RANDOM_20[6:0];	// @[functional-unit.scala:227:23]
        r_uops_1_prs1 = _RANDOM_20[13:7];	// @[functional-unit.scala:227:23]
        r_uops_1_prs2 = _RANDOM_20[20:14];	// @[functional-unit.scala:227:23]
        r_uops_1_prs3 = _RANDOM_20[27:21];	// @[functional-unit.scala:227:23]
        r_uops_1_ppred = {_RANDOM_20[31:28], _RANDOM_21[0]};	// @[functional-unit.scala:227:23]
        r_uops_1_prs1_busy = _RANDOM_21[1];	// @[functional-unit.scala:227:23]
        r_uops_1_prs2_busy = _RANDOM_21[2];	// @[functional-unit.scala:227:23]
        r_uops_1_prs3_busy = _RANDOM_21[3];	// @[functional-unit.scala:227:23]
        r_uops_1_ppred_busy = _RANDOM_21[4];	// @[functional-unit.scala:227:23]
        r_uops_1_stale_pdst = _RANDOM_21[11:5];	// @[functional-unit.scala:227:23]
        r_uops_1_exception = _RANDOM_21[12];	// @[functional-unit.scala:227:23]
        r_uops_1_exc_cause = {_RANDOM_21[31:13], _RANDOM_22, _RANDOM_23[12:0]};	// @[functional-unit.scala:227:23]
        r_uops_1_bypassable = _RANDOM_23[13];	// @[functional-unit.scala:227:23]
        r_uops_1_mem_cmd = _RANDOM_23[18:14];	// @[functional-unit.scala:227:23]
        r_uops_1_mem_size = _RANDOM_23[20:19];	// @[functional-unit.scala:227:23]
        r_uops_1_mem_signed = _RANDOM_23[21];	// @[functional-unit.scala:227:23]
        r_uops_1_is_fence = _RANDOM_23[22];	// @[functional-unit.scala:227:23]
        r_uops_1_is_fencei = _RANDOM_23[23];	// @[functional-unit.scala:227:23]
        r_uops_1_is_amo = _RANDOM_23[24];	// @[functional-unit.scala:227:23]
        r_uops_1_uses_ldq = _RANDOM_23[25];	// @[functional-unit.scala:227:23]
        r_uops_1_uses_stq = _RANDOM_23[26];	// @[functional-unit.scala:227:23]
        r_uops_1_is_sys_pc2epc = _RANDOM_23[27];	// @[functional-unit.scala:227:23]
        r_uops_1_is_unique = _RANDOM_23[28];	// @[functional-unit.scala:227:23]
        r_uops_1_flush_on_commit = _RANDOM_23[29];	// @[functional-unit.scala:227:23]
        r_uops_1_ldst_is_rs1 = _RANDOM_23[30];	// @[functional-unit.scala:227:23]
        r_uops_1_ldst = {_RANDOM_23[31], _RANDOM_24[4:0]};	// @[functional-unit.scala:227:23]
        r_uops_1_lrs1 = _RANDOM_24[10:5];	// @[functional-unit.scala:227:23]
        r_uops_1_lrs2 = _RANDOM_24[16:11];	// @[functional-unit.scala:227:23]
        r_uops_1_lrs3 = _RANDOM_24[22:17];	// @[functional-unit.scala:227:23]
        r_uops_1_ldst_val = _RANDOM_24[23];	// @[functional-unit.scala:227:23]
        r_uops_1_dst_rtype = _RANDOM_24[25:24];	// @[functional-unit.scala:227:23]
        r_uops_1_lrs1_rtype = _RANDOM_24[27:26];	// @[functional-unit.scala:227:23]
        r_uops_1_lrs2_rtype = _RANDOM_24[29:28];	// @[functional-unit.scala:227:23]
        r_uops_1_frs3_en = _RANDOM_24[30];	// @[functional-unit.scala:227:23]
        r_uops_1_fp_val = _RANDOM_24[31];	// @[functional-unit.scala:227:23]
        r_uops_1_fp_single = _RANDOM_25[0];	// @[functional-unit.scala:227:23]
        r_uops_1_xcpt_pf_if = _RANDOM_25[1];	// @[functional-unit.scala:227:23]
        r_uops_1_xcpt_ae_if = _RANDOM_25[2];	// @[functional-unit.scala:227:23]
        r_uops_1_xcpt_ma_if = _RANDOM_25[3];	// @[functional-unit.scala:227:23]
        r_uops_1_bp_debug_if = _RANDOM_25[4];	// @[functional-unit.scala:227:23]
        r_uops_1_bp_xcpt_if = _RANDOM_25[5];	// @[functional-unit.scala:227:23]
        r_uops_1_debug_fsrc = _RANDOM_25[7:6];	// @[functional-unit.scala:227:23]
        r_uops_1_debug_tsrc = _RANDOM_25[9:8];	// @[functional-unit.scala:227:23]
        r_uops_2_uopc = _RANDOM_25[16:10];	// @[functional-unit.scala:227:23]
        r_uops_2_inst = {_RANDOM_25[31:17], _RANDOM_26[16:0]};	// @[functional-unit.scala:227:23]
        r_uops_2_debug_inst = {_RANDOM_26[31:17], _RANDOM_27[16:0]};	// @[functional-unit.scala:227:23]
        r_uops_2_is_rvc = _RANDOM_27[17];	// @[functional-unit.scala:227:23]
        r_uops_2_debug_pc = {_RANDOM_27[31:18], _RANDOM_28[25:0]};	// @[functional-unit.scala:227:23]
        r_uops_2_iq_type = _RANDOM_28[28:26];	// @[functional-unit.scala:227:23]
        r_uops_2_fu_code = {_RANDOM_28[31:29], _RANDOM_29[6:0]};	// @[functional-unit.scala:227:23]
        r_uops_2_ctrl_br_type = _RANDOM_29[10:7];	// @[functional-unit.scala:227:23]
        r_uops_2_ctrl_op1_sel = _RANDOM_29[12:11];	// @[functional-unit.scala:227:23]
        r_uops_2_ctrl_op2_sel = _RANDOM_29[15:13];	// @[functional-unit.scala:227:23]
        r_uops_2_ctrl_imm_sel = _RANDOM_29[18:16];	// @[functional-unit.scala:227:23]
        r_uops_2_ctrl_op_fcn = _RANDOM_29[22:19];	// @[functional-unit.scala:227:23]
        r_uops_2_ctrl_fcn_dw = _RANDOM_29[23];	// @[functional-unit.scala:227:23]
        r_uops_2_ctrl_csr_cmd = _RANDOM_29[26:24];	// @[functional-unit.scala:227:23]
        r_uops_2_ctrl_is_load = _RANDOM_29[27];	// @[functional-unit.scala:227:23]
        r_uops_2_ctrl_is_sta = _RANDOM_29[28];	// @[functional-unit.scala:227:23]
        r_uops_2_ctrl_is_std = _RANDOM_29[29];	// @[functional-unit.scala:227:23]
        r_uops_2_iw_state = _RANDOM_29[31:30];	// @[functional-unit.scala:227:23]
        r_uops_2_iw_p1_poisoned = _RANDOM_30[0];	// @[functional-unit.scala:227:23]
        r_uops_2_iw_p2_poisoned = _RANDOM_30[1];	// @[functional-unit.scala:227:23]
        r_uops_2_is_br = _RANDOM_30[2];	// @[functional-unit.scala:227:23]
        r_uops_2_is_jalr = _RANDOM_30[3];	// @[functional-unit.scala:227:23]
        r_uops_2_is_jal = _RANDOM_30[4];	// @[functional-unit.scala:227:23]
        r_uops_2_is_sfb = _RANDOM_30[5];	// @[functional-unit.scala:227:23]
        r_uops_2_br_mask = _RANDOM_30[17:6];	// @[functional-unit.scala:227:23]
        r_uops_2_br_tag = _RANDOM_30[21:18];	// @[functional-unit.scala:227:23]
        r_uops_2_ftq_idx = _RANDOM_30[26:22];	// @[functional-unit.scala:227:23]
        r_uops_2_edge_inst = _RANDOM_30[27];	// @[functional-unit.scala:227:23]
        r_uops_2_pc_lob = {_RANDOM_30[31:28], _RANDOM_31[1:0]};	// @[functional-unit.scala:227:23]
        r_uops_2_taken = _RANDOM_31[2];	// @[functional-unit.scala:227:23]
        r_uops_2_imm_packed = _RANDOM_31[22:3];	// @[functional-unit.scala:227:23]
        r_uops_2_csr_addr = {_RANDOM_31[31:23], _RANDOM_32[2:0]};	// @[functional-unit.scala:227:23]
        r_uops_2_rob_idx = _RANDOM_32[8:3];	// @[functional-unit.scala:227:23]
        r_uops_2_ldq_idx = _RANDOM_32[12:9];	// @[functional-unit.scala:227:23]
        r_uops_2_stq_idx = _RANDOM_32[16:13];	// @[functional-unit.scala:227:23]
        r_uops_2_rxq_idx = _RANDOM_32[18:17];	// @[functional-unit.scala:227:23]
        r_uops_2_pdst = _RANDOM_32[25:19];	// @[functional-unit.scala:227:23]
        r_uops_2_prs1 = {_RANDOM_32[31:26], _RANDOM_33[0]};	// @[functional-unit.scala:227:23]
        r_uops_2_prs2 = _RANDOM_33[7:1];	// @[functional-unit.scala:227:23]
        r_uops_2_prs3 = _RANDOM_33[14:8];	// @[functional-unit.scala:227:23]
        r_uops_2_ppred = _RANDOM_33[19:15];	// @[functional-unit.scala:227:23]
        r_uops_2_prs1_busy = _RANDOM_33[20];	// @[functional-unit.scala:227:23]
        r_uops_2_prs2_busy = _RANDOM_33[21];	// @[functional-unit.scala:227:23]
        r_uops_2_prs3_busy = _RANDOM_33[22];	// @[functional-unit.scala:227:23]
        r_uops_2_ppred_busy = _RANDOM_33[23];	// @[functional-unit.scala:227:23]
        r_uops_2_stale_pdst = _RANDOM_33[30:24];	// @[functional-unit.scala:227:23]
        r_uops_2_exception = _RANDOM_33[31];	// @[functional-unit.scala:227:23]
        r_uops_2_exc_cause = {_RANDOM_34, _RANDOM_35};	// @[functional-unit.scala:227:23]
        r_uops_2_bypassable = _RANDOM_36[0];	// @[functional-unit.scala:227:23]
        r_uops_2_mem_cmd = _RANDOM_36[5:1];	// @[functional-unit.scala:227:23]
        r_uops_2_mem_size = _RANDOM_36[7:6];	// @[functional-unit.scala:227:23]
        r_uops_2_mem_signed = _RANDOM_36[8];	// @[functional-unit.scala:227:23]
        r_uops_2_is_fence = _RANDOM_36[9];	// @[functional-unit.scala:227:23]
        r_uops_2_is_fencei = _RANDOM_36[10];	// @[functional-unit.scala:227:23]
        r_uops_2_is_amo = _RANDOM_36[11];	// @[functional-unit.scala:227:23]
        r_uops_2_uses_ldq = _RANDOM_36[12];	// @[functional-unit.scala:227:23]
        r_uops_2_uses_stq = _RANDOM_36[13];	// @[functional-unit.scala:227:23]
        r_uops_2_is_sys_pc2epc = _RANDOM_36[14];	// @[functional-unit.scala:227:23]
        r_uops_2_is_unique = _RANDOM_36[15];	// @[functional-unit.scala:227:23]
        r_uops_2_flush_on_commit = _RANDOM_36[16];	// @[functional-unit.scala:227:23]
        r_uops_2_ldst_is_rs1 = _RANDOM_36[17];	// @[functional-unit.scala:227:23]
        r_uops_2_ldst = _RANDOM_36[23:18];	// @[functional-unit.scala:227:23]
        r_uops_2_lrs1 = _RANDOM_36[29:24];	// @[functional-unit.scala:227:23]
        r_uops_2_lrs2 = {_RANDOM_36[31:30], _RANDOM_37[3:0]};	// @[functional-unit.scala:227:23]
        r_uops_2_lrs3 = _RANDOM_37[9:4];	// @[functional-unit.scala:227:23]
        r_uops_2_ldst_val = _RANDOM_37[10];	// @[functional-unit.scala:227:23]
        r_uops_2_dst_rtype = _RANDOM_37[12:11];	// @[functional-unit.scala:227:23]
        r_uops_2_lrs1_rtype = _RANDOM_37[14:13];	// @[functional-unit.scala:227:23]
        r_uops_2_lrs2_rtype = _RANDOM_37[16:15];	// @[functional-unit.scala:227:23]
        r_uops_2_frs3_en = _RANDOM_37[17];	// @[functional-unit.scala:227:23]
        r_uops_2_fp_val = _RANDOM_37[18];	// @[functional-unit.scala:227:23]
        r_uops_2_fp_single = _RANDOM_37[19];	// @[functional-unit.scala:227:23]
        r_uops_2_xcpt_pf_if = _RANDOM_37[20];	// @[functional-unit.scala:227:23]
        r_uops_2_xcpt_ae_if = _RANDOM_37[21];	// @[functional-unit.scala:227:23]
        r_uops_2_xcpt_ma_if = _RANDOM_37[22];	// @[functional-unit.scala:227:23]
        r_uops_2_bp_debug_if = _RANDOM_37[23];	// @[functional-unit.scala:227:23]
        r_uops_2_bp_xcpt_if = _RANDOM_37[24];	// @[functional-unit.scala:227:23]
        r_uops_2_debug_fsrc = _RANDOM_37[26:25];	// @[functional-unit.scala:227:23]
        r_uops_2_debug_tsrc = _RANDOM_37[28:27];	// @[functional-unit.scala:227:23]
        r_uops_3_uopc = {_RANDOM_37[31:29], _RANDOM_38[3:0]};	// @[functional-unit.scala:227:23]
        r_uops_3_inst = {_RANDOM_38[31:4], _RANDOM_39[3:0]};	// @[functional-unit.scala:227:23]
        r_uops_3_debug_inst = {_RANDOM_39[31:4], _RANDOM_40[3:0]};	// @[functional-unit.scala:227:23]
        r_uops_3_is_rvc = _RANDOM_40[4];	// @[functional-unit.scala:227:23]
        r_uops_3_debug_pc = {_RANDOM_40[31:5], _RANDOM_41[12:0]};	// @[functional-unit.scala:227:23]
        r_uops_3_iq_type = _RANDOM_41[15:13];	// @[functional-unit.scala:227:23]
        r_uops_3_fu_code = _RANDOM_41[25:16];	// @[functional-unit.scala:227:23]
        r_uops_3_ctrl_br_type = _RANDOM_41[29:26];	// @[functional-unit.scala:227:23]
        r_uops_3_ctrl_op1_sel = _RANDOM_41[31:30];	// @[functional-unit.scala:227:23]
        r_uops_3_ctrl_op2_sel = _RANDOM_42[2:0];	// @[functional-unit.scala:227:23]
        r_uops_3_ctrl_imm_sel = _RANDOM_42[5:3];	// @[functional-unit.scala:227:23]
        r_uops_3_ctrl_op_fcn = _RANDOM_42[9:6];	// @[functional-unit.scala:227:23]
        r_uops_3_ctrl_fcn_dw = _RANDOM_42[10];	// @[functional-unit.scala:227:23]
        r_uops_3_ctrl_csr_cmd = _RANDOM_42[13:11];	// @[functional-unit.scala:227:23]
        r_uops_3_ctrl_is_load = _RANDOM_42[14];	// @[functional-unit.scala:227:23]
        r_uops_3_ctrl_is_sta = _RANDOM_42[15];	// @[functional-unit.scala:227:23]
        r_uops_3_ctrl_is_std = _RANDOM_42[16];	// @[functional-unit.scala:227:23]
        r_uops_3_iw_state = _RANDOM_42[18:17];	// @[functional-unit.scala:227:23]
        r_uops_3_iw_p1_poisoned = _RANDOM_42[19];	// @[functional-unit.scala:227:23]
        r_uops_3_iw_p2_poisoned = _RANDOM_42[20];	// @[functional-unit.scala:227:23]
        r_uops_3_is_br = _RANDOM_42[21];	// @[functional-unit.scala:227:23]
        r_uops_3_is_jalr = _RANDOM_42[22];	// @[functional-unit.scala:227:23]
        r_uops_3_is_jal = _RANDOM_42[23];	// @[functional-unit.scala:227:23]
        r_uops_3_is_sfb = _RANDOM_42[24];	// @[functional-unit.scala:227:23]
        r_uops_3_br_mask = {_RANDOM_42[31:25], _RANDOM_43[4:0]};	// @[functional-unit.scala:227:23]
        r_uops_3_br_tag = _RANDOM_43[8:5];	// @[functional-unit.scala:227:23]
        r_uops_3_ftq_idx = _RANDOM_43[13:9];	// @[functional-unit.scala:227:23]
        r_uops_3_edge_inst = _RANDOM_43[14];	// @[functional-unit.scala:227:23]
        r_uops_3_pc_lob = _RANDOM_43[20:15];	// @[functional-unit.scala:227:23]
        r_uops_3_taken = _RANDOM_43[21];	// @[functional-unit.scala:227:23]
        r_uops_3_imm_packed = {_RANDOM_43[31:22], _RANDOM_44[9:0]};	// @[functional-unit.scala:227:23]
        r_uops_3_csr_addr = _RANDOM_44[21:10];	// @[functional-unit.scala:227:23]
        r_uops_3_rob_idx = _RANDOM_44[27:22];	// @[functional-unit.scala:227:23]
        r_uops_3_ldq_idx = _RANDOM_44[31:28];	// @[functional-unit.scala:227:23]
        r_uops_3_stq_idx = _RANDOM_45[3:0];	// @[functional-unit.scala:227:23]
        r_uops_3_rxq_idx = _RANDOM_45[5:4];	// @[functional-unit.scala:227:23]
        r_uops_3_pdst = _RANDOM_45[12:6];	// @[functional-unit.scala:227:23]
        r_uops_3_prs1 = _RANDOM_45[19:13];	// @[functional-unit.scala:227:23]
        r_uops_3_prs2 = _RANDOM_45[26:20];	// @[functional-unit.scala:227:23]
        r_uops_3_prs3 = {_RANDOM_45[31:27], _RANDOM_46[1:0]};	// @[functional-unit.scala:227:23]
        r_uops_3_ppred = _RANDOM_46[6:2];	// @[functional-unit.scala:227:23]
        r_uops_3_prs1_busy = _RANDOM_46[7];	// @[functional-unit.scala:227:23]
        r_uops_3_prs2_busy = _RANDOM_46[8];	// @[functional-unit.scala:227:23]
        r_uops_3_prs3_busy = _RANDOM_46[9];	// @[functional-unit.scala:227:23]
        r_uops_3_ppred_busy = _RANDOM_46[10];	// @[functional-unit.scala:227:23]
        r_uops_3_stale_pdst = _RANDOM_46[17:11];	// @[functional-unit.scala:227:23]
        r_uops_3_exception = _RANDOM_46[18];	// @[functional-unit.scala:227:23]
        r_uops_3_exc_cause = {_RANDOM_46[31:19], _RANDOM_47, _RANDOM_48[18:0]};	// @[functional-unit.scala:227:23]
        r_uops_3_bypassable = _RANDOM_48[19];	// @[functional-unit.scala:227:23]
        r_uops_3_mem_cmd = _RANDOM_48[24:20];	// @[functional-unit.scala:227:23]
        r_uops_3_mem_size = _RANDOM_48[26:25];	// @[functional-unit.scala:227:23]
        r_uops_3_mem_signed = _RANDOM_48[27];	// @[functional-unit.scala:227:23]
        r_uops_3_is_fence = _RANDOM_48[28];	// @[functional-unit.scala:227:23]
        r_uops_3_is_fencei = _RANDOM_48[29];	// @[functional-unit.scala:227:23]
        r_uops_3_is_amo = _RANDOM_48[30];	// @[functional-unit.scala:227:23]
        r_uops_3_uses_ldq = _RANDOM_48[31];	// @[functional-unit.scala:227:23]
        r_uops_3_uses_stq = _RANDOM_49[0];	// @[functional-unit.scala:227:23]
        r_uops_3_is_sys_pc2epc = _RANDOM_49[1];	// @[functional-unit.scala:227:23]
        r_uops_3_is_unique = _RANDOM_49[2];	// @[functional-unit.scala:227:23]
        r_uops_3_flush_on_commit = _RANDOM_49[3];	// @[functional-unit.scala:227:23]
        r_uops_3_ldst_is_rs1 = _RANDOM_49[4];	// @[functional-unit.scala:227:23]
        r_uops_3_ldst = _RANDOM_49[10:5];	// @[functional-unit.scala:227:23]
        r_uops_3_lrs1 = _RANDOM_49[16:11];	// @[functional-unit.scala:227:23]
        r_uops_3_lrs2 = _RANDOM_49[22:17];	// @[functional-unit.scala:227:23]
        r_uops_3_lrs3 = _RANDOM_49[28:23];	// @[functional-unit.scala:227:23]
        r_uops_3_ldst_val = _RANDOM_49[29];	// @[functional-unit.scala:227:23]
        r_uops_3_dst_rtype = _RANDOM_49[31:30];	// @[functional-unit.scala:227:23]
        r_uops_3_lrs1_rtype = _RANDOM_50[1:0];	// @[functional-unit.scala:227:23]
        r_uops_3_lrs2_rtype = _RANDOM_50[3:2];	// @[functional-unit.scala:227:23]
        r_uops_3_frs3_en = _RANDOM_50[4];	// @[functional-unit.scala:227:23]
        r_uops_3_fp_val = _RANDOM_50[5];	// @[functional-unit.scala:227:23]
        r_uops_3_fp_single = _RANDOM_50[6];	// @[functional-unit.scala:227:23]
        r_uops_3_xcpt_pf_if = _RANDOM_50[7];	// @[functional-unit.scala:227:23]
        r_uops_3_xcpt_ae_if = _RANDOM_50[8];	// @[functional-unit.scala:227:23]
        r_uops_3_xcpt_ma_if = _RANDOM_50[9];	// @[functional-unit.scala:227:23]
        r_uops_3_bp_debug_if = _RANDOM_50[10];	// @[functional-unit.scala:227:23]
        r_uops_3_bp_xcpt_if = _RANDOM_50[11];	// @[functional-unit.scala:227:23]
        r_uops_3_debug_fsrc = _RANDOM_50[13:12];	// @[functional-unit.scala:227:23]
        r_uops_3_debug_tsrc = _RANDOM_50[15:14];	// @[functional-unit.scala:227:23]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  FPU_boom fpu (	// @[functional-unit.scala:562:19]
    .clock                          (clock),
    .reset                          (reset),
    .io_req_valid                   (io_req_valid),
    .io_req_bits_uop_uopc           (io_req_bits_uop_uopc),
    .io_req_bits_uop_imm_packed     (io_req_bits_uop_imm_packed),
    .io_req_bits_rs1_data           (io_req_bits_rs1_data),
    .io_req_bits_rs2_data           (io_req_bits_rs2_data),
    .io_req_bits_rs3_data           (io_req_bits_rs3_data),
    .io_req_bits_fcsr_rm            (io_fcsr_rm),
    .io_resp_bits_data              (io_resp_bits_data),
    .io_resp_bits_fflags_valid      (io_resp_bits_fflags_valid),
    .io_resp_bits_fflags_bits_flags (io_resp_bits_fflags_bits_flags)
  );
  assign io_resp_valid = r_valids_3 & (io_brupdate_b1_mispredict_mask & r_uops_3_br_mask) == 12'h0;	// @[functional-unit.scala:226:27, :227:23, :247:47, util.scala:118:{51,59}]
  assign io_resp_bits_uop_uopc = r_uops_3_uopc;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_inst = r_uops_3_inst;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_debug_inst = r_uops_3_debug_inst;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_is_rvc = r_uops_3_is_rvc;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_debug_pc = r_uops_3_debug_pc;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_iq_type = r_uops_3_iq_type;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_fu_code = r_uops_3_fu_code;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ctrl_br_type = r_uops_3_ctrl_br_type;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ctrl_op1_sel = r_uops_3_ctrl_op1_sel;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ctrl_op2_sel = r_uops_3_ctrl_op2_sel;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ctrl_imm_sel = r_uops_3_ctrl_imm_sel;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ctrl_op_fcn = r_uops_3_ctrl_op_fcn;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ctrl_fcn_dw = r_uops_3_ctrl_fcn_dw;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ctrl_csr_cmd = r_uops_3_ctrl_csr_cmd;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ctrl_is_load = r_uops_3_ctrl_is_load;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ctrl_is_sta = r_uops_3_ctrl_is_sta;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ctrl_is_std = r_uops_3_ctrl_is_std;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_iw_state = r_uops_3_iw_state;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_iw_p1_poisoned = r_uops_3_iw_p1_poisoned;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_iw_p2_poisoned = r_uops_3_iw_p2_poisoned;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_is_br = r_uops_3_is_br;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_is_jalr = r_uops_3_is_jalr;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_is_jal = r_uops_3_is_jal;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_is_sfb = r_uops_3_is_sfb;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_br_mask = _io_resp_bits_uop_br_mask_output;	// @[util.scala:85:25]
  assign io_resp_bits_uop_br_tag = r_uops_3_br_tag;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ftq_idx = r_uops_3_ftq_idx;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_edge_inst = r_uops_3_edge_inst;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_pc_lob = r_uops_3_pc_lob;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_taken = r_uops_3_taken;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_imm_packed = r_uops_3_imm_packed;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_csr_addr = r_uops_3_csr_addr;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_rob_idx = r_uops_3_rob_idx;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ldq_idx = r_uops_3_ldq_idx;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_stq_idx = r_uops_3_stq_idx;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_rxq_idx = r_uops_3_rxq_idx;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_pdst = r_uops_3_pdst;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_prs1 = r_uops_3_prs1;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_prs2 = r_uops_3_prs2;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_prs3 = r_uops_3_prs3;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ppred = r_uops_3_ppred;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_prs1_busy = r_uops_3_prs1_busy;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_prs2_busy = r_uops_3_prs2_busy;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_prs3_busy = r_uops_3_prs3_busy;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ppred_busy = r_uops_3_ppred_busy;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_stale_pdst = r_uops_3_stale_pdst;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_exception = r_uops_3_exception;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_exc_cause = r_uops_3_exc_cause;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_bypassable = r_uops_3_bypassable;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_mem_cmd = r_uops_3_mem_cmd;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_mem_size = r_uops_3_mem_size;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_mem_signed = r_uops_3_mem_signed;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_is_fence = r_uops_3_is_fence;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_is_fencei = r_uops_3_is_fencei;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_is_amo = r_uops_3_is_amo;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_uses_ldq = r_uops_3_uses_ldq;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_uses_stq = r_uops_3_uses_stq;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_is_sys_pc2epc = r_uops_3_is_sys_pc2epc;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_is_unique = r_uops_3_is_unique;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_flush_on_commit = r_uops_3_flush_on_commit;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ldst_is_rs1 = r_uops_3_ldst_is_rs1;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ldst = r_uops_3_ldst;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_lrs1 = r_uops_3_lrs1;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_lrs2 = r_uops_3_lrs2;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_lrs3 = r_uops_3_lrs3;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_ldst_val = r_uops_3_ldst_val;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_dst_rtype = r_uops_3_dst_rtype;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_lrs1_rtype = r_uops_3_lrs1_rtype;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_lrs2_rtype = r_uops_3_lrs2_rtype;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_frs3_en = r_uops_3_frs3_en;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_fp_val = r_uops_3_fp_val;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_fp_single = r_uops_3_fp_single;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_xcpt_pf_if = r_uops_3_xcpt_pf_if;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_xcpt_ae_if = r_uops_3_xcpt_ae_if;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_xcpt_ma_if = r_uops_3_xcpt_ma_if;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_bp_debug_if = r_uops_3_bp_debug_if;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_bp_xcpt_if = r_uops_3_bp_xcpt_if;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_debug_fsrc = r_uops_3_debug_fsrc;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_uop_debug_tsrc = r_uops_3_debug_tsrc;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_uopc = r_uops_3_uopc;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_inst = r_uops_3_inst;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_debug_inst = r_uops_3_debug_inst;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_is_rvc = r_uops_3_is_rvc;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_debug_pc = r_uops_3_debug_pc;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_iq_type = r_uops_3_iq_type;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_fu_code = r_uops_3_fu_code;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ctrl_br_type = r_uops_3_ctrl_br_type;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ctrl_op1_sel = r_uops_3_ctrl_op1_sel;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ctrl_op2_sel = r_uops_3_ctrl_op2_sel;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ctrl_imm_sel = r_uops_3_ctrl_imm_sel;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ctrl_op_fcn = r_uops_3_ctrl_op_fcn;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ctrl_fcn_dw = r_uops_3_ctrl_fcn_dw;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ctrl_csr_cmd = r_uops_3_ctrl_csr_cmd;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ctrl_is_load = r_uops_3_ctrl_is_load;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ctrl_is_sta = r_uops_3_ctrl_is_sta;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ctrl_is_std = r_uops_3_ctrl_is_std;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_iw_state = r_uops_3_iw_state;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_iw_p1_poisoned = r_uops_3_iw_p1_poisoned;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_iw_p2_poisoned = r_uops_3_iw_p2_poisoned;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_is_br = r_uops_3_is_br;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_is_jalr = r_uops_3_is_jalr;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_is_jal = r_uops_3_is_jal;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_is_sfb = r_uops_3_is_sfb;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_br_mask = _io_resp_bits_uop_br_mask_output;	// @[util.scala:85:25]
  assign io_resp_bits_fflags_bits_uop_br_tag = r_uops_3_br_tag;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ftq_idx = r_uops_3_ftq_idx;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_edge_inst = r_uops_3_edge_inst;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_pc_lob = r_uops_3_pc_lob;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_taken = r_uops_3_taken;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_imm_packed = r_uops_3_imm_packed;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_csr_addr = r_uops_3_csr_addr;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_rob_idx = r_uops_3_rob_idx;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ldq_idx = r_uops_3_ldq_idx;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_stq_idx = r_uops_3_stq_idx;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_rxq_idx = r_uops_3_rxq_idx;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_pdst = r_uops_3_pdst;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_prs1 = r_uops_3_prs1;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_prs2 = r_uops_3_prs2;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_prs3 = r_uops_3_prs3;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ppred = r_uops_3_ppred;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_prs1_busy = r_uops_3_prs1_busy;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_prs2_busy = r_uops_3_prs2_busy;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_prs3_busy = r_uops_3_prs3_busy;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ppred_busy = r_uops_3_ppred_busy;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_stale_pdst = r_uops_3_stale_pdst;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_exception = r_uops_3_exception;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_exc_cause = r_uops_3_exc_cause;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_bypassable = r_uops_3_bypassable;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_mem_cmd = r_uops_3_mem_cmd;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_mem_size = r_uops_3_mem_size;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_mem_signed = r_uops_3_mem_signed;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_is_fence = r_uops_3_is_fence;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_is_fencei = r_uops_3_is_fencei;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_is_amo = r_uops_3_is_amo;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_uses_ldq = r_uops_3_uses_ldq;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_uses_stq = r_uops_3_uses_stq;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_is_sys_pc2epc = r_uops_3_is_sys_pc2epc;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_is_unique = r_uops_3_is_unique;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_flush_on_commit = r_uops_3_flush_on_commit;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ldst_is_rs1 = r_uops_3_ldst_is_rs1;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ldst = r_uops_3_ldst;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_lrs1 = r_uops_3_lrs1;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_lrs2 = r_uops_3_lrs2;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_lrs3 = r_uops_3_lrs3;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_ldst_val = r_uops_3_ldst_val;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_dst_rtype = r_uops_3_dst_rtype;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_lrs1_rtype = r_uops_3_lrs1_rtype;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_lrs2_rtype = r_uops_3_lrs2_rtype;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_frs3_en = r_uops_3_frs3_en;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_fp_val = r_uops_3_fp_val;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_fp_single = r_uops_3_fp_single;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_xcpt_pf_if = r_uops_3_xcpt_pf_if;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_xcpt_ae_if = r_uops_3_xcpt_ae_if;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_xcpt_ma_if = r_uops_3_xcpt_ma_if;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_bp_debug_if = r_uops_3_bp_debug_if;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_bp_xcpt_if = r_uops_3_bp_xcpt_if;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_debug_fsrc = r_uops_3_debug_fsrc;	// @[functional-unit.scala:227:23]
  assign io_resp_bits_fflags_bits_uop_debug_tsrc = r_uops_3_debug_tsrc;	// @[functional-unit.scala:227:23]
endmodule

