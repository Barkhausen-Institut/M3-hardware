// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module BoomProbeUnit_boom(
  input         clock,
                reset,
                io_req_valid,
  input  [1:0]  io_req_bits_param,
  input  [3:0]  io_req_bits_size,
  input  [1:0]  io_req_bits_source,
  input  [31:0] io_req_bits_address,
  input         io_rep_ready,
                io_meta_read_ready,
                io_meta_write_ready,
                io_wb_req_ready,
  input  [3:0]  io_way_en,
  input         io_wb_rdy,
                io_mshr_rdy,
  input  [1:0]  io_block_state_state,
  input         io_lsu_release_ready,
  output        io_req_ready,
                io_rep_valid,
  output [2:0]  io_rep_bits_param,
  output [3:0]  io_rep_bits_size,
  output [1:0]  io_rep_bits_source,
  output [31:0] io_rep_bits_address,
  output        io_meta_read_valid,
  output [5:0]  io_meta_read_bits_idx,
  output [19:0] io_meta_read_bits_tag,
  output        io_meta_write_valid,
  output [5:0]  io_meta_write_bits_idx,
  output [3:0]  io_meta_write_bits_way_en,
  output [1:0]  io_meta_write_bits_data_coh_state,
  output [19:0] io_meta_write_bits_data_tag,
  output        io_wb_req_valid,
  output [19:0] io_wb_req_bits_tag,
  output [5:0]  io_wb_req_bits_idx,
  output [2:0]  io_wb_req_bits_param,
  output [3:0]  io_wb_req_bits_way_en,
  output        io_mshr_wb_rdy,
                io_lsu_release_valid,
  output [31:0] io_lsu_release_bits_address,
  output        io_state_valid,
  output [39:0] io_state_bits
);

  reg  [3:0]       state;	// @[dcache.scala:165:22]
  reg  [1:0]       req_param;	// @[dcache.scala:167:16]
  reg  [3:0]       req_size;	// @[dcache.scala:167:16]
  reg  [1:0]       req_source;	// @[dcache.scala:167:16]
  reg  [31:0]      req_address;	// @[dcache.scala:167:16]
  reg  [3:0]       way_en;	// @[dcache.scala:171:19]
  reg  [1:0]       old_coh_state;	// @[dcache.scala:173:20]
  wire [3:0]       _T = {req_param, (|way_en) ? old_coh_state : 2'h0};	// @[Cat.scala:33:92, Metadata.scala:161:16, dcache.scala:167:16, :171:19, :172:28, :173:20, :175:22]
  wire             _T_26 = _T == 4'hB;	// @[Cat.scala:33:92, Misc.scala:55:20]
  wire             _T_29 = _T == 4'h4;	// @[Cat.scala:33:92, Misc.scala:55:20, dcache.scala:231:17]
  wire             _T_33 = _T == 4'h5;	// @[Cat.scala:33:92, Misc.scala:55:20, dcache.scala:211:33]
  wire             _T_37 = _T == 4'h6;	// @[Cat.scala:33:92, Misc.scala:55:20, dcache.scala:182:25]
  wire             _T_41 = _T == 4'h7;	// @[Cat.scala:33:92, Misc.scala:55:20, dcache.scala:200:28]
  wire             _T_45 = _T == 4'h0;	// @[Cat.scala:33:92, Misc.scala:55:20, dcache.scala:165:22]
  wire             _T_49 = _T == 4'h1;	// @[Cat.scala:33:92, Misc.scala:55:20, dcache.scala:188:31]
  wire             _T_53 = _T == 4'h2;	// @[Cat.scala:33:92, Misc.scala:55:20, dcache.scala:222:13]
  wire             _T_57 = _T == 4'h3;	// @[Cat.scala:33:92, Misc.scala:55:20, dcache.scala:226:11]
  wire             _GEN = _T_57 | _T_53;	// @[Misc.scala:37:36, :55:20]
  wire [2:0]       io_rep_bits_c_param = _GEN ? 3'h3 : _T_49 ? 3'h4 : _T_45 ? 3'h5 : _T_41 | _T_37 ? 3'h0 : _T_33 ? 3'h4 : _T_29 ? 3'h5 : _T_26 | _T == 4'hA ? 3'h1 : _T == 4'h9 ? 3'h2 : _T == 4'h8 ? 3'h5 : 3'h0;	// @[Cat.scala:33:92, Misc.scala:37:36, :55:20, dcache.scala:193:32, package.scala:16:47]
  wire             _io_req_ready_output = state == 4'h0;	// @[dcache.scala:165:22, :181:25]
  wire             _T_74 = state == 4'h6;	// @[dcache.scala:165:22, :182:25]
  wire             _io_meta_read_valid_output = state == 4'h1;	// @[dcache.scala:165:22, :188:31]
  wire             _io_meta_write_valid_output = state == 4'h9;	// @[dcache.scala:165:22, :193:32]
  wire             _io_wb_req_valid_output = state == 4'h7;	// @[dcache.scala:165:22, :200:28]
  wire             _io_lsu_release_valid_output = state == 4'h5;	// @[dcache.scala:165:22, :211:33]
  wire             _T_66 = _io_req_ready_output & io_req_valid;	// @[Decoupled.scala:51:35, dcache.scala:181:25]
  wire [15:0][3:0] _GEN_0 = {{state}, {state}, {state}, {state}, {state}, {4'h0}, {io_meta_write_ready & _io_meta_write_valid_output ? 4'hA : state}, {io_wb_req_ready ? 4'h9 : state}, {io_wb_req_ready & _io_wb_req_valid_output ? 4'h8 : state}, {io_rep_ready ? ((|way_en) ? 4'h9 : 4'h0) : state}, {io_lsu_release_ready & _io_lsu_release_valid_output ? 4'h6 : state}, {{2'h1, (|way_en) & (_T_57 | ~(_T_53 | _T_49 | _T_45) & (_T_41 | ~(_T_37 | _T_33 | _T_29) & _T_26)), 1'h1}}, {io_mshr_rdy & io_wb_rdy ? 4'h4 : 4'h1}, {4'h3}, {io_meta_read_ready & _io_meta_read_valid_output ? 4'h2 : state}, {_T_66 ? 4'h1 : state}};	// @[Cat.scala:33:92, Decoupled.scala:51:35, Misc.scala:37:9, :55:20, dcache.scala:165:22, :171:19, :172:28, :181:25, :182:25, :185:9, :188:31, :193:32, :200:28, :211:33, :215:30, :216:24, :217:13, :220:39, :221:30, :222:13, :224:{22,39}, :226:11, :227:{22,38}, :231:{11,17,30}, :232:{22,39}, :233:{11,17,30}, :234:41, :235:32, :236:13, :238:37, :239:25, :240:{13,19}, :242:43, :243:27, :244:13, :246:44, :248:28, :249:13, :251:40, :252:31, :253:13, :255:45, :256:11, package.scala:16:47]
  always @(posedge clock) begin
    if (reset)
      state <= 4'h0;	// @[dcache.scala:165:22]
    else
      state <= _GEN_0[state];	// @[dcache.scala:165:22, :181:25, :182:25, :188:31, :193:32, :200:28, :211:33, :215:30, :216:24, :220:39, :221:30, :224:{22,39}, :226:11, :227:{22,38}, :231:11, :232:{22,39}, :233:11, :234:41, :235:32, :238:37, :239:25, :242:43, :243:27, :246:44, :248:28, :251:40, :252:31, :255:45, :256:11, package.scala:16:47]
    if (_io_req_ready_output & _T_66) begin	// @[Decoupled.scala:51:35, dcache.scala:167:16, :181:25, :215:30, :216:24, :218:11]
      req_param <= io_req_bits_param;	// @[dcache.scala:167:16]
      req_size <= io_req_bits_size;	// @[dcache.scala:167:16]
      req_source <= io_req_bits_source;	// @[dcache.scala:167:16]
      req_address <= io_req_bits_address;	// @[dcache.scala:167:16]
    end
    if (_io_req_ready_output | _io_meta_read_valid_output | state == 4'h2 | state != 4'h3) begin	// @[dcache.scala:165:22, :173:20, :181:25, :188:31, :215:30, :220:39, :222:13, :224:{22,39}, :226:11, :227:{22,38}]
    end
    else begin	// @[dcache.scala:173:20, :215:30, :220:39, :224:39, :227:38]
      way_en <= io_way_en;	// @[dcache.scala:171:19]
      old_coh_state <= io_block_state_state;	// @[dcache.scala:173:20]
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        state = _RANDOM_0[3:0];	// @[dcache.scala:165:22]
        req_param = _RANDOM_0[8:7];	// @[dcache.scala:165:22, :167:16]
        req_size = _RANDOM_0[12:9];	// @[dcache.scala:165:22, :167:16]
        req_source = _RANDOM_0[14:13];	// @[dcache.scala:165:22, :167:16]
        req_address = {_RANDOM_0[31:15], _RANDOM_1[14:0]};	// @[dcache.scala:165:22, :167:16]
        way_en = _RANDOM_3[27:24];	// @[dcache.scala:171:19]
        old_coh_state = _RANDOM_3[29:28];	// @[dcache.scala:171:19, :173:20]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_req_ready = _io_req_ready_output;	// @[dcache.scala:181:25]
  assign io_rep_valid = _T_74;	// @[dcache.scala:182:25]
  assign io_rep_bits_param = io_rep_bits_c_param;	// @[Misc.scala:37:36]
  assign io_rep_bits_size = req_size;	// @[dcache.scala:167:16]
  assign io_rep_bits_source = req_source;	// @[dcache.scala:167:16]
  assign io_rep_bits_address = req_address;	// @[dcache.scala:167:16]
  assign io_meta_read_valid = _io_meta_read_valid_output;	// @[dcache.scala:188:31]
  assign io_meta_read_bits_idx = req_address[11:6];	// @[dcache.scala:167:16, :168:28]
  assign io_meta_read_bits_tag = req_address[31:12];	// @[dcache.scala:167:16, :169:29]
  assign io_meta_write_valid = _io_meta_write_valid_output;	// @[dcache.scala:193:32]
  assign io_meta_write_bits_idx = req_address[11:6];	// @[dcache.scala:167:16, :168:28]
  assign io_meta_write_bits_way_en = way_en;	// @[dcache.scala:171:19]
  assign io_meta_write_bits_data_coh_state = _GEN ? 2'h2 : _T_49 ? 2'h1 : _T_45 ? 2'h0 : {1'h0, _T_41 | _T_37 | _T_33};	// @[Cat.scala:33:92, Metadata.scala:161:16, Misc.scala:37:{36,63}, :55:20, dcache.scala:167:16]
  assign io_meta_write_bits_data_tag = req_address[31:12];	// @[dcache.scala:167:16, :169:29]
  assign io_wb_req_valid = _io_wb_req_valid_output;	// @[dcache.scala:200:28]
  assign io_wb_req_bits_tag = req_address[31:12];	// @[dcache.scala:167:16, :169:29]
  assign io_wb_req_bits_idx = req_address[11:6];	// @[dcache.scala:167:16, :168:28]
  assign io_wb_req_bits_param = io_rep_bits_c_param;	// @[Misc.scala:37:36]
  assign io_wb_req_bits_way_en = way_en;	// @[dcache.scala:171:19]
  assign io_mshr_wb_rdy = ~(_T_74 | _io_wb_req_valid_output | state == 4'h8 | _io_meta_write_valid_output | state == 4'hA);	// @[dcache.scala:165:22, :182:25, :193:32, :200:28, :209:21, package.scala:16:47, :73:59]
  assign io_lsu_release_valid = _io_lsu_release_valid_output;	// @[dcache.scala:211:33]
  assign io_lsu_release_bits_address = req_address;	// @[dcache.scala:167:16]
  assign io_state_valid = |state;	// @[dcache.scala:165:22, :178:27]
  assign io_state_bits = {8'h0, req_address};	// @[dcache.scala:167:16, :179:18]
endmodule

